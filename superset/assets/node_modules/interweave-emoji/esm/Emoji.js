import _pt from "prop-types";
import React from 'react';
import EmojiDataManager from './EmojiDataManager';
export default function Emoji(_ref) {
  var _ref$emojiLargeSize = _ref.emojiLargeSize,
      emojiLargeSize = _ref$emojiLargeSize === void 0 ? '3em' : _ref$emojiLargeSize,
      _ref$emojiPath = _ref.emojiPath,
      emojiPath = _ref$emojiPath === void 0 ? '{{hexcode}}' : _ref$emojiPath,
      _ref$emojiSize = _ref.emojiSize,
      emojiSize = _ref$emojiSize === void 0 ? '1em' : _ref$emojiSize,
      emojiSource = _ref.emojiSource,
      emoticon = _ref.emoticon,
      _ref$enlargeEmoji = _ref.enlargeEmoji,
      enlargeEmoji = _ref$enlargeEmoji === void 0 ? false : _ref$enlargeEmoji,
      hexcode = _ref.hexcode,
      _ref$renderUnicode = _ref.renderUnicode,
      renderUnicode = _ref$renderUnicode === void 0 ? false : _ref$renderUnicode,
      shortcode = _ref.shortcode,
      unicode = _ref.unicode;
  var data = EmojiDataManager.getInstance(emojiSource.locale);

  if ("production" !== process.env.NODE_ENV) {
    if (!emoticon && !shortcode && !unicode && !hexcode) {
      throw new Error('Emoji component requires a `unicode` character, `emoticon`, `hexcode`, or a `shortcode`.');
    }
  }

  var hex = hexcode;

  if (!hex && shortcode) {
    hex = data.SHORTCODE_TO_HEXCODE[shortcode];
  }

  if (!hex && emoticon) {
    hex = data.EMOTICON_TO_HEXCODE[emoticon];
  }

  if (!hex && unicode) {
    hex = data.UNICODE_TO_HEXCODE[unicode];
  }

  if (!hex || !data.EMOJIS[hex]) {
    return React.createElement("span", null, unicode || emoticon || shortcode || hex);
  }

  var emoji = data.EMOJIS[hex];

  if (renderUnicode) {
    return React.createElement("span", null, emoji.unicode);
  }

  var styles = {
    display: 'inline-block',
    verticalAlign: 'middle'
  };

  if (enlargeEmoji && emojiLargeSize) {
    styles.width = emojiLargeSize;
    styles.height = emojiLargeSize;
  } else if (emojiSize) {
    styles.width = emojiSize;
    styles.height = emojiSize;
  }

  var path = emojiPath || '{{hexcode}}';

  if (typeof path === 'function') {
    path = path(emoji.hexcode, {
      enlarged: enlargeEmoji,
      largeSize: emojiLargeSize,
      size: enlargeEmoji ? emojiLargeSize : emojiSize,
      smallSize: emojiSize
    });
  } else {
    path = path.replace('{{hexcode}}', emoji.hexcode);
  }

  return React.createElement("img", {
    src: path,
    alt: emoji.unicode,
    title: emoji.annotation,
    style: styles,
    "aria-label": emoji.annotation,
    "data-emoticon": emoji.emoticon,
    "data-unicode": emoji.unicode,
    "data-hexcode": emoji.hexcode,
    "data-shortcodes": emoji.canonical_shortcodes.join(', ')
  });
}
Emoji.propTypes = {
  emojiLargeSize: _pt.any,
  emojiPath: _pt.any,
  emojiSize: _pt.any,
  emojiSource: _pt.any.isRequired,
  emoticon: _pt.any,
  enlargeEmoji: _pt.bool,
  hexcode: _pt.any,
  renderUnicode: _pt.bool,
  shortcode: _pt.any,
  unicode: _pt.any
};