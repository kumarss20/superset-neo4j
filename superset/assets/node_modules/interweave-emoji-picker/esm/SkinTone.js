import _pt from "prop-types";
import React, { useContext } from 'react';
import camelCase from 'lodash/camelCase';
import upperFirst from 'lodash/upperFirst';
import { SKIN_COLORS } from './constants';
import Context from './Context';
export default function SkinTone(_ref) {
  var active = _ref.active,
      children = _ref.children,
      skinTone = _ref.skinTone,
      onSelect = _ref.onSelect;

  var _useContext = useContext(Context),
      classNames = _useContext.classNames,
      messages = _useContext.messages;

  var className = [classNames.skinTone];
  var color = SKIN_COLORS[skinTone];
  var key = camelCase(skinTone);

  if (active) {
    className.push(classNames.skinToneActive);
  }

  var handleClick = function handleClick(event) {
    event.stopPropagation();
    onSelect(skinTone, event);
  };

  return React.createElement("button", {
    className: className.join(' '),
    "data-skin-color": color,
    "data-skin-tone": skinTone,
    title: messages["skin" + upperFirst(key)],
    type: "button",
    onClick: handleClick
  }, children || ' ');
}
SkinTone.propTypes = {
  active: _pt.bool.isRequired,
  children: _pt.node,
  onSelect: _pt.func.isRequired,
  skinTone: _pt.any.isRequired
};