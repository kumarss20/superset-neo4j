import _pt from "prop-types";
import React, { useRef, useEffect, useContext } from 'react';
import Context from './Context';
export default function SearchBar(_ref) {
  var autoFocus = _ref.autoFocus,
      searchQuery = _ref.searchQuery,
      onChange = _ref.onChange,
      onKeyUp = _ref.onKeyUp;

  var _useContext = useContext(Context),
      classNames = _useContext.classNames,
      messages = _useContext.messages;

  var ref = useRef(null);
  useEffect(function () {
    if (autoFocus && ref.current) {
      ref.current.focus();
    }
  });

  var handleChange = function handleChange(event) {
    if (ref.current) {
      onChange(event.target.value.trim(), event);
    }
  };

  return React.createElement("div", {
    className: classNames.search
  }, React.createElement("input", {
    ref: ref,
    "aria-label": messages.searchA11y,
    className: classNames.searchInput,
    placeholder: messages.search,
    type: "search",
    value: searchQuery,
    onChange: handleChange,
    onKeyUp: onKeyUp
  }));
}
SearchBar.propTypes = {
  autoFocus: _pt.bool.isRequired,
  onChange: _pt.func.isRequired,
  onKeyUp: _pt.func.isRequired,
  searchQuery: _pt.string.isRequired
};