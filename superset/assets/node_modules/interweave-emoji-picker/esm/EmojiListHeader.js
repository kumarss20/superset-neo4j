import _pt from "prop-types";
import React, { useContext } from 'react';
import camelCase from 'lodash/camelCase';
import { GROUP_KEY_COMMONLY_USED, GROUP_KEY_SEARCH_RESULTS, GROUP_KEY_PEOPLE_BODY, GROUP_KEY_NONE, GROUP_KEY_VARIATIONS } from './constants';
import Context from './Context';
export default function EmojiListHeader(_ref) {
  var clearIcon = _ref.clearIcon,
      commonMode = _ref.commonMode,
      group = _ref.group,
      skinTonePalette = _ref.skinTonePalette,
      sticky = _ref.sticky,
      onClear = _ref.onClear;

  var _useContext = useContext(Context),
      classNames = _useContext.classNames,
      messages = _useContext.messages;

  var showClear = clearIcon && (group === GROUP_KEY_COMMONLY_USED || group === GROUP_KEY_VARIATIONS);
  var showPalette = skinTonePalette && (group === GROUP_KEY_PEOPLE_BODY || group === GROUP_KEY_SEARCH_RESULTS || group === GROUP_KEY_NONE);
  var className = [classNames.emojisHeader];

  if (sticky) {
    className.push(classNames.emojisHeaderSticky);
  }

  var handleClear = function handleClear(event) {
    event.preventDefault();
    onClear();
  };

  return React.createElement("header", {
    className: className.join(' ')
  }, React.createElement("span", null, group === GROUP_KEY_COMMONLY_USED ? messages[camelCase(commonMode)] : messages[camelCase(group)]), showPalette && skinTonePalette, showClear && React.createElement("button", {
    type: "button",
    title: messages.clearUsed,
    className: classNames.clear,
    onClick: handleClear
  }, clearIcon));
}
EmojiListHeader.propTypes = {
  clearIcon: _pt.node,
  commonMode: _pt.any.isRequired,
  group: _pt.any.isRequired,
  onClear: _pt.func.isRequired,
  skinTonePalette: _pt.node,
  sticky: _pt.bool
};