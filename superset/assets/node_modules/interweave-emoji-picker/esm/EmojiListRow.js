import _pt from "prop-types";
import React, { useContext } from 'react';
import EmojiButton from './Emoji';
import EmojiListHeader from './EmojiListHeader';
import Context from './Context';
export default function EmojiListRow(_ref) {
  var data = _ref.data,
      index = _ref.index,
      style = _ref.style,
      activeEmoji = _ref.activeEmoji,
      clearIcon = _ref.clearIcon,
      commonMode = _ref.commonMode,
      skinTonePalette = _ref.skinTonePalette,
      onClear = _ref.onClear,
      onEnterEmoji = _ref.onEnterEmoji,
      onLeaveEmoji = _ref.onLeaveEmoji,
      onSelectEmoji = _ref.onSelectEmoji;

  var _useContext = useContext(Context),
      classNames = _useContext.classNames;

  var row = data[index];
  return React.createElement("div", {
    style: style,
    className: classNames.emojisRow
  }, Array.isArray(row) ? React.createElement("div", {
    className: classNames.emojisBody
  }, row.map(function (emoji) {
    return React.createElement(EmojiButton, {
      key: emoji.hexcode,
      active: activeEmoji ? activeEmoji.hexcode === emoji.hexcode : false,
      emoji: emoji,
      onEnter: onEnterEmoji,
      onLeave: onLeaveEmoji,
      onSelect: onSelectEmoji
    });
  })) : React.createElement(EmojiListHeader, {
    clearIcon: clearIcon,
    commonMode: commonMode,
    group: row,
    onClear: onClear,
    skinTonePalette: skinTonePalette
  }));
}
EmojiListRow.propTypes = {
  activeEmoji: _pt.oneOfType([_pt.any, _pt.oneOf([null])]),
  clearIcon: _pt.node,
  commonMode: _pt.any.isRequired,
  onClear: _pt.func.isRequired,
  onEnterEmoji: _pt.func.isRequired,
  onLeaveEmoji: _pt.func.isRequired,
  onSelectEmoji: _pt.func.isRequired,
  skinTonePalette: _pt.node
};