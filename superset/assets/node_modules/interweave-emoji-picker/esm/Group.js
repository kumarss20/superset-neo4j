import _pt from "prop-types";
import React, { useContext } from 'react';
import camelCase from 'lodash/camelCase';
import { GROUP_KEY_COMMONLY_USED } from './constants';
import Context from './Context';
export default function Group(_ref) {
  var active = _ref.active,
      children = _ref.children,
      commonMode = _ref.commonMode,
      group = _ref.group,
      onSelect = _ref.onSelect;

  var _useContext = useContext(Context),
      classNames = _useContext.classNames,
      messages = _useContext.messages;

  var key = camelCase(group === GROUP_KEY_COMMONLY_USED ? commonMode : group);
  var className = [classNames.group];

  if (active) {
    className.push(classNames.groupActive);
  }

  var handleClick = function handleClick(event) {
    event.stopPropagation();
    onSelect(group, event);
  };

  return React.createElement("button", {
    className: className.join(' '),
    title: messages[key],
    type: "button",
    onClick: handleClick
  }, children);
}
Group.propTypes = {
  active: _pt.bool.isRequired,
  children: _pt.node.isRequired,
  commonMode: _pt.any.isRequired,
  group: _pt.any.isRequired,
  onSelect: _pt.func.isRequired
};