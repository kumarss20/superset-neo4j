import _pt from "prop-types";
import React, { useContext } from 'react';
import camelCase from 'lodash/camelCase';
import Group from './Group';
import { GROUPS, GROUP_KEY_COMMONLY_USED, GROUP_KEY_COMPONENT, GROUP_ICONS } from './constants';
import Context from './Context';
export default function GroupTabs(_ref) {
  var activeGroup = _ref.activeGroup,
      commonEmojis = _ref.commonEmojis,
      commonMode = _ref.commonMode,
      icons = _ref.icons,
      onSelect = _ref.onSelect;

  var _useContext = useContext(Context),
      classNames = _useContext.classNames;

  var groups = GROUPS.filter(function (group) {
    return group !== GROUP_KEY_COMPONENT;
  });

  if (commonEmojis.length > 0) {
    groups.unshift(GROUP_KEY_COMMONLY_USED);
  }

  return React.createElement("nav", {
    className: classNames.groups
  }, React.createElement("ul", {
    className: classNames.groupsList
  }, groups.map(function (group) {
    return React.createElement("li", {
      key: group
    }, React.createElement(Group, {
      active: group === activeGroup,
      commonMode: commonMode,
      group: group,
      onSelect: onSelect
    }, icons[group] || icons[camelCase(group)] || GROUP_ICONS[group]));
  })));
}
GroupTabs.propTypes = {
  activeGroup: _pt.any.isRequired,
  commonEmojis: _pt.arrayOf(_pt.any).isRequired,
  commonMode: _pt.any.isRequired,
  icons: _pt.objectOf(_pt.node).isRequired,
  onSelect: _pt.func.isRequired
};