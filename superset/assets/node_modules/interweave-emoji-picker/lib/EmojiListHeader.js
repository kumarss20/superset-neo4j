"use strict";

exports.__esModule = true;
exports.default = EmojiListHeader;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _camelCase = _interopRequireDefault(require("lodash/camelCase"));

var _constants = require("./constants");

var _Context = _interopRequireDefault(require("./Context"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EmojiListHeader(_ref) {
  var clearIcon = _ref.clearIcon,
      commonMode = _ref.commonMode,
      group = _ref.group,
      skinTonePalette = _ref.skinTonePalette,
      sticky = _ref.sticky,
      onClear = _ref.onClear;

  var _useContext = (0, _react.useContext)(_Context.default),
      classNames = _useContext.classNames,
      messages = _useContext.messages;

  var showClear = clearIcon && (group === _constants.GROUP_KEY_COMMONLY_USED || group === _constants.GROUP_KEY_VARIATIONS);
  var showPalette = skinTonePalette && (group === _constants.GROUP_KEY_PEOPLE_BODY || group === _constants.GROUP_KEY_SEARCH_RESULTS || group === _constants.GROUP_KEY_NONE);
  var className = [classNames.emojisHeader];

  if (sticky) {
    className.push(classNames.emojisHeaderSticky);
  }

  var handleClear = function handleClear(event) {
    event.preventDefault();
    onClear();
  };

  return _react.default.createElement("header", {
    className: className.join(' ')
  }, _react.default.createElement("span", null, group === _constants.GROUP_KEY_COMMONLY_USED ? messages[(0, _camelCase.default)(commonMode)] : messages[(0, _camelCase.default)(group)]), showPalette && skinTonePalette, showClear && _react.default.createElement("button", {
    type: "button",
    title: messages.clearUsed,
    className: classNames.clear,
    onClick: handleClear
  }, clearIcon));
}

EmojiListHeader.propTypes = {
  clearIcon: _propTypes.default.node,
  commonMode: _propTypes.default.any.isRequired,
  group: _propTypes.default.any.isRequired,
  onClear: _propTypes.default.func.isRequired,
  skinTonePalette: _propTypes.default.node,
  sticky: _propTypes.default.bool
};