"use strict";

exports.__esModule = true;
exports.default = GroupTabs;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _camelCase = _interopRequireDefault(require("lodash/camelCase"));

var _Group = _interopRequireDefault(require("./Group"));

var _constants = require("./constants");

var _Context = _interopRequireDefault(require("./Context"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function GroupTabs(_ref) {
  var activeGroup = _ref.activeGroup,
      commonEmojis = _ref.commonEmojis,
      commonMode = _ref.commonMode,
      icons = _ref.icons,
      onSelect = _ref.onSelect;

  var _useContext = (0, _react.useContext)(_Context.default),
      classNames = _useContext.classNames;

  var groups = _constants.GROUPS.filter(function (group) {
    return group !== _constants.GROUP_KEY_COMPONENT;
  });

  if (commonEmojis.length > 0) {
    groups.unshift(_constants.GROUP_KEY_COMMONLY_USED);
  }

  return _react.default.createElement("nav", {
    className: classNames.groups
  }, _react.default.createElement("ul", {
    className: classNames.groupsList
  }, groups.map(function (group) {
    return _react.default.createElement("li", {
      key: group
    }, _react.default.createElement(_Group.default, {
      active: group === activeGroup,
      commonMode: commonMode,
      group: group,
      onSelect: onSelect
    }, icons[group] || icons[(0, _camelCase.default)(group)] || _constants.GROUP_ICONS[group]));
  })));
}

GroupTabs.propTypes = {
  activeGroup: _propTypes.default.any.isRequired,
  commonEmojis: _propTypes.default.arrayOf(_propTypes.default.any).isRequired,
  commonMode: _propTypes.default.any.isRequired,
  icons: _propTypes.default.objectOf(_propTypes.default.node).isRequired,
  onSelect: _propTypes.default.func.isRequired
};