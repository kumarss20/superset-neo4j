"use strict";

exports.__esModule = true;
exports.default = EmojiListRow;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _Emoji = _interopRequireDefault(require("./Emoji"));

var _EmojiListHeader = _interopRequireDefault(require("./EmojiListHeader"));

var _Context = _interopRequireDefault(require("./Context"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EmojiListRow(_ref) {
  var data = _ref.data,
      index = _ref.index,
      style = _ref.style,
      activeEmoji = _ref.activeEmoji,
      clearIcon = _ref.clearIcon,
      commonMode = _ref.commonMode,
      skinTonePalette = _ref.skinTonePalette,
      onClear = _ref.onClear,
      onEnterEmoji = _ref.onEnterEmoji,
      onLeaveEmoji = _ref.onLeaveEmoji,
      onSelectEmoji = _ref.onSelectEmoji;

  var _useContext = (0, _react.useContext)(_Context.default),
      classNames = _useContext.classNames;

  var row = data[index];
  return _react.default.createElement("div", {
    style: style,
    className: classNames.emojisRow
  }, Array.isArray(row) ? _react.default.createElement("div", {
    className: classNames.emojisBody
  }, row.map(function (emoji) {
    return _react.default.createElement(_Emoji.default, {
      key: emoji.hexcode,
      active: activeEmoji ? activeEmoji.hexcode === emoji.hexcode : false,
      emoji: emoji,
      onEnter: onEnterEmoji,
      onLeave: onLeaveEmoji,
      onSelect: onSelectEmoji
    });
  })) : _react.default.createElement(_EmojiListHeader.default, {
    clearIcon: clearIcon,
    commonMode: commonMode,
    group: row,
    onClear: onClear,
    skinTonePalette: skinTonePalette
  }));
}

EmojiListRow.propTypes = {
  activeEmoji: _propTypes.default.oneOfType([_propTypes.default.any, _propTypes.default.oneOf([null])]),
  clearIcon: _propTypes.default.node,
  commonMode: _propTypes.default.any.isRequired,
  onClear: _propTypes.default.func.isRequired,
  onEnterEmoji: _propTypes.default.func.isRequired,
  onLeaveEmoji: _propTypes.default.func.isRequired,
  onSelectEmoji: _propTypes.default.func.isRequired,
  skinTonePalette: _propTypes.default.node
};