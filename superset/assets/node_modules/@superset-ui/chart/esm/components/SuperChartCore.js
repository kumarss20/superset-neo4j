import _pt from"prop-types";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _inheritsLoose(a,b){a.prototype=Object.create(b.prototype),a.prototype.constructor=a,a.__proto__=b}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}import*as React from"react";import{createSelector}from"reselect";import getChartComponentRegistry from"../registries/ChartComponentRegistrySingleton";import getChartTransformPropsRegistry from"../registries/ChartTransformPropsRegistrySingleton";import ChartProps from"../models/ChartProps";import createLoadableRenderer from"./createLoadableRenderer";var IDENTITY=function(a){return a},EMPTY=function(){return null},defaultProps={id:"",className:"",preTransformProps:IDENTITY,overrideTransformProps:void 0,postTransformProps:IDENTITY,onRenderSuccess:function onRenderSuccess(){},onRenderFailure:function onRenderFailure(){}},BLANK_CHART_PROPS=new ChartProps,SuperChartCore=/*#__PURE__*/function(a){function b(){for(var b,c=arguments.length,d=Array(c),e=0;e<c;e++)d[e]=arguments[e];return b=a.call.apply(a,[this].concat(d))||this,_defineProperty(_assertThisInitialized(b),"container",void 0),_defineProperty(_assertThisInitialized(b),"processChartProps",createSelector(function(a){return a.preTransformProps},function(a){return a.transformProps},function(a){return a.postTransformProps},function(a){return a.chartProps},function(a,b,c,d){return void 0===a&&(a=IDENTITY),void 0===b&&(b=IDENTITY),void 0===c&&(c=IDENTITY),c(b(a(d)))})),_defineProperty(_assertThisInitialized(b),"createLoadableRenderer",createSelector(function(a){return a.chartType},function(a){return a.overrideTransformProps},function(a,c){if(a){var d=createLoadableRenderer({loader:{Chart:function Chart(){return getChartComponentRegistry().getAsPromise(a)},transformProps:c?function(){return Promise.resolve(c)}:function(){return getChartTransformPropsRegistry().getAsPromise(a)}},loading:function loading(c){return b.renderLoading(c,a)},render:b.renderChart});// Trigger preloading.
return d.preload(),d}return EMPTY})),_defineProperty(_assertThisInitialized(b),"renderChart",function(a,c){var d=a.Chart,e=a.transformProps,f=c.chartProps,g=c.preTransformProps,h=c.postTransformProps;return React.createElement(d,b.processChartProps({/* eslint-disable sort-keys */chartProps:f,preTransformProps:g,transformProps:e,postTransformProps:h/* eslint-enable sort-keys */}))}),_defineProperty(_assertThisInitialized(b),"renderLoading",function(a,b){var c=a.error;return c?React.createElement("div",{className:"alert alert-warning",role:"alert"},React.createElement("strong",null,"ERROR"),"\xA0",React.createElement("code",null,"chartType=\"",b,"\"")," \u2014",c.toString()):null}),_defineProperty(_assertThisInitialized(b),"setRef",function(a){b.container=a}),b}_inheritsLoose(b,a);var c=b.prototype;return c.render=function render(){var a=this.props,b=a.id,c=a.className,d=a.preTransformProps,e=a.postTransformProps,f=a.chartProps,g=void 0===f?BLANK_CHART_PROPS:f,h=a.onRenderSuccess,i=a.onRenderFailure,j=this.createLoadableRenderer(this.props);// Create LoadableRenderer and start preloading
// the lazy-loaded Chart components
// Do not render if chartProps is set to null.
// but the pre-loading has been started in this.createLoadableRenderer
// to prepare for rendering once chartProps becomes available.
if(null===g)return null;var k={};return b&&(k.id=b),c&&(k.className=c),React.createElement("div",_extends({},k,{ref:this.setRef}),React.createElement(j,{preTransformProps:d,postTransformProps:e,chartProps:g,onRenderSuccess:h,onRenderFailure:i}))},b}(React.PureComponent);_defineProperty(SuperChartCore,"propTypes",{id:_pt.string,className:_pt.string,chartProps:_pt.oneOfType([_pt.any]),chartType:_pt.string.isRequired,preTransformProps:_pt.any,overrideTransformProps:_pt.any,postTransformProps:_pt.any,onRenderSuccess:_pt.any,onRenderFailure:_pt.any}),_defineProperty(SuperChartCore,"defaultProps",defaultProps);export{SuperChartCore as default};