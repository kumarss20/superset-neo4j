import _pt from"prop-types";function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _inheritsLoose(a,b){a.prototype=Object.create(b.prototype),a.prototype.constructor=a,a.__proto__=b}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}/* eslint-disable sort-keys, no-magic-numbers, complexity */import React,{PureComponent}from"react";import{XYChart,PointSeries}from"@data-ui/xy-chart";import{chartTheme}from"@data-ui/theme";import{WithLegend}from"@superset-ui/chart-composition";import Encoder from"./Encoder";import createMarginSelector,{DEFAULT_MARGIN}from"../utils/selectors/createMarginSelector";import DefaultTooltipRenderer from"./DefaultTooltipRenderer";import convertScaleToDataUIScale from"../utils/convertScaleToDataUIScaleShape";import{isScaleFieldDef}from"../encodeable/types/ChannelDef";import createXYChartLayoutWithTheme from"../utils/createXYChartLayoutWithTheme";import createEncoderSelector from"../encodeable/createEncoderSelector";import createRenderLegend from"../components/legend/createRenderLegend";var defaultProps={className:"",margin:DEFAULT_MARGIN,theme:chartTheme,TooltipRenderer:DefaultTooltipRenderer},ScatterPlot=/*#__PURE__*/function(a){function b(b){var c;return c=a.call(this,b)||this,_defineProperty(_assertThisInitialized(c),"createEncoder",createEncoderSelector(Encoder)),_defineProperty(_assertThisInitialized(c),"createMargin",createMarginSelector()),c.renderChart=c.renderChart.bind(_assertThisInitialized(c)),c}_inheritsLoose(b,a);var c=b.prototype;return c.renderChart=function renderChart(a){var b=a.width,c=a.height,d=this.props,e=d.data,f=d.margin,g=d.theme,h=d.TooltipRenderer,i=this.createEncoder(this.props),j=i.channels;if("undefined"!=typeof j.x.scale){var q=j.x.getDomain(e);j.x.scale.setDomain(q)}if("undefined"!=typeof j.y.scale){var r=j.y.getDomain(e);j.y.scale.setDomain(r)}if(isScaleFieldDef(j.size.definition)&&"quantitative"===j.size.definition.type){var k=j.size.getDomain(e),l=k[0],m=k[1],n=[Math.min(l||0,0),Math.max(m||1,1)];j.size.scale.setDomain(n)}var o=e.map(function(a){return{x:j.x.get(a),y:j.y.get(a),size:j.size.encode(a),fill:j.fill.encode(a),stroke:j.stroke.encode(a),data:a}}),p=createXYChartLayoutWithTheme({width:b,height:c,margin:this.createMargin(f),theme:g,xEncoder:j.x,yEncoder:j.y});return p.renderChartWithFrame(function(a){return React.createElement(XYChart,{width:a.width,height:a.height,ariaLabel:"BoxPlot",margin:p.margin,renderTooltip:function renderTooltip(a){var b=a.datum;return React.createElement(h,{datum:b,encoder:i})},showYGrid:!0,theme:g,xScale:convertScaleToDataUIScale(j.x.scale.config),yScale:convertScaleToDataUIScale(j.y.scale.config)},p.renderXAxis(),p.renderYAxis(),React.createElement(PointSeries,{key:j.x.definition.field,data:o,fill:function fill(a){return a.fill},fillOpacity:.5,stroke:function stroke(a){return a.stroke},size:function size(a){return a.size}}))})},c.render=function render(){var a=this.props,b=a.className,c=a.data,d=a.width,e=a.height,f=this.createEncoder(this.props);return React.createElement(WithLegend,{className:"superset-chart-scatter-plot "+b,width:d,height:e,position:"top",renderLegend:createRenderLegend(f,c,this.props),renderChart:this.renderChart})},b}(PureComponent);_defineProperty(ScatterPlot,"propTypes",{className:_pt.string,width:_pt.oneOfType([_pt.string,_pt.number]).isRequired,height:_pt.oneOfType([_pt.string,_pt.number]).isRequired,margin:_pt.any,data:_pt.any.isRequired,theme:_pt.any,TooltipRenderer:_pt.func}),_defineProperty(ScatterPlot,"defaultProps",defaultProps);export{ScatterPlot as default};