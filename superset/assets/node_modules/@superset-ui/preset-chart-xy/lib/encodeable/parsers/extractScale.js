"use strict";exports.__esModule=!0,exports.deriveScaleTypeFromDataTypeAndChannelType=deriveScaleTypeFromDataTypeAndChannelType,exports.default=extractScale;var _color=require("@superset-ui/color"),_d3Scale=require("d3-scale"),_scale=require("vega-lite/build/src/scale"),_ChannelDef=require("../types/ChannelDef"),_isDisabled=_interopRequireDefault(require("../utils/isDisabled"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}// eslint-disable-next-line complexity
function deriveScaleTypeFromDataTypeAndChannelType(a,b,c){if(void 0===c&&(c=!1),"undefined"==typeof a)return void 0;if("nominal"===a||"ordinal"===a)switch(b){// For positional (x and y) ordinal and ordinal fields,
// "point" is the default scale type for all marks
// except bar and rect marks, which use "band" scales.
// https://vega.github.io/vega-lite/docs/scale.html
case"XBand":case"YBand":return _scale.ScaleType.BAND;case"X":case"Y":case"Numeric":return _scale.ScaleType.POINT;case"Color":case"Category":return _scale.ScaleType.ORDINAL;default:}else if("quantitative"===a)switch(b){case"XBand":case"YBand":case"X":case"Y":case"Numeric":return _scale.ScaleType.LINEAR;case"Color":return c?_scale.ScaleType.LINEAR:_scale.ScaleType.BIN_ORDINAL;default:}else if("temporal"===a)switch(b){case"XBand":case"YBand":case"X":case"Y":case"Numeric":return _scale.ScaleType.TIME;case"Color":return _scale.ScaleType.LINEAR;default:}}// eslint-disable-next-line complexity
function createScaleFromType(a){return a===_scale.ScaleType.LINEAR?(0,_d3Scale.scaleLinear)():a===_scale.ScaleType.LOG?(0,_d3Scale.scaleLog)():a===_scale.ScaleType.POW?(0,_d3Scale.scalePow)():a===_scale.ScaleType.SQRT?(0,_d3Scale.scaleSqrt)():a===_scale.ScaleType.SYMLOG?void 0:a===_scale.ScaleType.TIME?(0,_d3Scale.scaleTime)():a===_scale.ScaleType.UTC?(0,_d3Scale.scaleUtc)():a===_scale.ScaleType.QUANTILE?(0,_d3Scale.scaleQuantile)():a===_scale.ScaleType.QUANTIZE?(0,_d3Scale.scaleQuantize)():a===_scale.ScaleType.THRESHOLD?(0,_d3Scale.scaleThreshold)():a===_scale.ScaleType.BIN_ORDINAL?(0,_d3Scale.scaleOrdinal)():a===_scale.ScaleType.ORDINAL?(0,_d3Scale.scaleOrdinal)():a===_scale.ScaleType.POINT?(0,_d3Scale.scalePoint)():a===_scale.ScaleType.BAND?(0,_d3Scale.scaleBand)():void 0}// eslint-disable-next-line complexity
function createScale(a,b,c){var d=c.namespace;if("Color"===a){var e=c.scheme;return"string"==typeof e||"undefined"==typeof e?_color.CategoricalColorNamespace.getScale(e,d):// TODO: fully use SchemeParams
_color.CategoricalColorNamespace.getScale(e.name,d)}var f=createScaleFromType(b);return"undefined"!=typeof f&&(f.domain&&"undefined"!=typeof c.domain&&f.domain(c.domain),f.range&&"undefined"!=typeof c.range&&f.range(c.range),"nice"in f&&f.nice&&!1!==c.nice&&f.nice(),"clamp"in f&&"undefined"!=typeof f.clamp&&"undefined"!=typeof c.clamp&&f.clamp(c.clamp)),f}var continuousScaleTypes=new Set(["linear","pow","sqrt","symlog","log","time","utc"]),discreteScaleTypes=new Set(["band","point","ordinal"]),discretizingScaleTypes=new Set(["bin-ordinal","quantile","quantize","threshold"]);function getScaleTypeCategory(a){return continuousScaleTypes.has(a)?"continuous":discreteScaleTypes.has(a)?"discrete":discretizingScaleTypes.has(a)?"discretizing":(console.warn("Unknown scaleType "+a),void 0)}function extractScale(a,b,c){if((0,_ChannelDef.isNonValueDef)(b)){var d="scale"in b&&"undefined"!=typeof b.scale?b.scale:{};// return if scale is disabled
if((0,_isDisabled.default)(d))return void 0;var e=d.type;if("undefined"==typeof e){// If scale type is not defined, try to derive scale type from field type
var f=(0,_ChannelDef.isTypedFieldDef)(b)?b.type:void 0;// If still do not have scale type, cannot create scale
if(e=deriveScaleTypeFromDataTypeAndChannelType(f,a),"undefined"==typeof e)return void 0}var g=createScale(a,e,_extends({namespace:c},d));if(g){var h=g instanceof _color.CategoricalColorScale||"undefined"==typeof g.domain?function(){}:g.domain;return{config:_extends({},d,{type:e}),encodeValue:g,scale:g,scaleTypeCategory:getScaleTypeCategory(e),setDomain:h}}}// ValueDef does not have scale
return void 0}