import { Value } from 'vega-lite/build/src/channeldef';
import { XFieldDef, YFieldDef, MarkPropChannelDef, TextChannelDef } from './ChannelDef';
export declare type ChannelInput = number | string | boolean | null | Date | undefined;
export interface ChannelOptions {
    namespace?: string;
    legend?: boolean;
}
export declare type AllChannelOptions<Encoding> = Partial<{
    [k in keyof Encoding]: ChannelOptions;
}>;
/**
 * Define all channel types and mapping to available definition grammar
 */
export interface ChannelTypeToDefMap<Output extends Value = Value> {
    X: XFieldDef<Output>;
    Y: YFieldDef<Output>;
    XBand: XFieldDef<Output>;
    YBand: YFieldDef<Output>;
    Numeric: MarkPropChannelDef<Output>;
    Category: MarkPropChannelDef<Output>;
    Color: MarkPropChannelDef<Output>;
    Text: TextChannelDef<Output>;
}
export declare type ChannelType = keyof ChannelTypeToDefMap;
