import { PartialSpec, BaseOptions } from './types/Specification';
import AbstractEncoder from './AbstractEncoder';
import { ChannelType } from './types/Channel';
import { ChannelDef } from './types/ChannelDef';
import { MayBeArray } from './types/Base';
export default function createEncoderSelector<EncoderConstructor extends AbstractEncoder<ChannelTypes, Encoding, Options>, ChannelTypes extends Record<string, ChannelType>, Encoding extends Record<keyof ChannelTypes, MayBeArray<ChannelDef>>, Options extends BaseOptions = BaseOptions>(EncoderConstructor: new (spec: PartialSpec<Encoding, Options>) => EncoderConstructor): import("reselect").OutputSelector<PartialSpec<Encoding, Options>, EncoderConstructor, (res1: Partial<Encoding>, res2: Options | undefined) => EncoderConstructor>;
