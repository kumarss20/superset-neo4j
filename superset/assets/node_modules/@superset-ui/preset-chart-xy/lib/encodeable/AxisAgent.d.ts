import { CSSProperties } from 'react';
import { Margin, Dimension } from '@superset-ui/dimension';
import { CoreAxis, AxisOrient } from './types/Axis';
import { ChannelDef } from './types/ChannelDef';
import ChannelEncoder from './ChannelEncoder';
export interface AxisLayout {
    axisWidth: number;
    labelAngle: number;
    labelFlush: number | boolean;
    labelOffset: number;
    labelOverlap: 'flat' | 'rotate';
    minMargin: Partial<Margin>;
    orient: AxisOrient;
    tickLabelDimensions: Dimension[];
    tickLabels: string[];
    tickTextAnchor?: string;
}
export default class AxisAgent<Def extends ChannelDef> {
    private readonly channelEncoder;
    private readonly format?;
    readonly config: CoreAxis;
    constructor(channelEncoder: ChannelEncoder<Def>);
    getFormat(): (value: string | number | boolean | Date | {
        toString(): string;
    } | null | undefined) => string;
    hasTitle(): boolean;
    getTitle(): string;
    getTickLabels(): string[];
    computeLayout({ axisTitleHeight, axisWidth, gapBetweenAxisLabelAndBorder, gapBetweenTickAndTickLabel, labelAngle, tickSize, tickTextStyle, }: {
        axisTitleHeight?: number;
        axisWidth: number;
        gapBetweenAxisLabelAndBorder?: number;
        gapBetweenTickAndTickLabel?: number;
        labelAngle?: number;
        tickSize?: number;
        tickTextStyle?: CSSProperties;
    }): AxisLayout;
}
