function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _inheritsLoose(a,b){a.prototype=Object.create(b.prototype),a.prototype.constructor=a,a.__proto__=b}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}/* eslint-disable react/jsx-handler-names */ /* eslint-disable react/destructuring-assignment */ /* eslint-disable react/no-access-state-in-setstate */ /* eslint-disable react/forbid-prop-types */ /* eslint-disable no-magic-numbers */ /* eslint-disable sort-keys */ /**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */ /* eslint no-underscore-dangle: ["error", { "allow": ["", "__timestamp"] }] */import React from"react";import PropTypes from"prop-types";import{PolygonLayer}from"deck.gl";import AnimatableDeckGLContainer from"../../AnimatableDeckGLContainer";import Legend from"../../components/Legend";import TooltipRow from"../../TooltipRow";import{getBuckets,getBreakPointColorScaler}from"../../utils";import{commonLayerProps,fitViewport}from"../common";import{getPlaySliderParams}from"../../utils/time";import sandboxedEval from"../../utils/sandbox";var DOUBLE_CLICK_TRESHOLD=250;// milliseconds
function getPoints(a){return a.map(function(a){return a.polygon}).flat()}function _getElevation(a,b){/* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has
   * opacity zero it will make everything behind it have opacity zero,
   * effectively showing the map layer no matter what other polygons are
   * behind it.
   */return 0===b(a)[3]?0:a.elevation}function setTooltipContent(a){return function(b){var c=a.metric.label||a.metric;return React.createElement("div",{className:"deckgl-tooltip"},React.createElement(TooltipRow,{label:a.line_column+": ",value:""+b.object[a.line_column]}),a.metric&&React.createElement(TooltipRow,{label:c+": ",value:""+b.object[c]}))}}export function getLayer(a,b,c,d,e,f,g){var h=a,i=h.fill_color_picker,j=h.stroke_color_picker,k=[].concat(b.data.features);if(null!=g&&g.forEach(function(a){k=k.filter(a)}),h.js_data_mutator){// Applying user defined data mutator if defined
var p=sandboxedEval(h.js_data_mutator);k=p(k)}var l=h.metric?h.metric.label||h.metric:null,m=null===h.metric?function(){return[i.r,i.g,i.b,255*i.a]}:getBreakPointColorScaler(h,k,function accessor(a){return a[l]}),n=function(a){var b=m(a);return 0<e.length&&-1===e.indexOf(a[h.line_column])&&(b[3]/=2),b},o=h.line_column&&h.metric&&0<=["geohash","zipcode"].indexOf(h.line_type)?setTooltipContent(h):void 0;return new PolygonLayer(_extends({id:"path-layer-"+h.slice_id,data:k,pickable:!0,filled:h.filled,stroked:h.stroked,getPolygon:function getPolygon(a){return a.polygon},getFillColor:n,getLineColor:[j.r,j.g,j.b,255*j.a],getLineWidth:h.line_width,extruded:h.extruded,getElevation:function getElevation(a){return _getElevation(a,n)},elevationScale:h.multiplier,fp64:!0},commonLayerProps(h,d,o,f)))}var propTypes={formData:PropTypes.object.isRequired,payload:PropTypes.object.isRequired,setControlValue:PropTypes.func.isRequired,viewport:PropTypes.object.isRequired,onAddFilter:PropTypes.func,setTooltip:PropTypes.func},defaultProps={onAddFilter:function onAddFilter(){},setTooltip:function setTooltip(){}},DeckGLPolygon=/*#__PURE__*/function(a){function b(c){var d;return d=a.call(this,c)||this,d.state=b.getDerivedStateFromProps(c),d.getLayers=d.getLayers.bind(_assertThisInitialized(d)),d.onSelect=d.onSelect.bind(_assertThisInitialized(d)),d.onValuesChange=d.onValuesChange.bind(_assertThisInitialized(d)),d.onViewportChange=d.onViewportChange.bind(_assertThisInitialized(d)),d}_inheritsLoose(b,a),b.getDerivedStateFromProps=function getDerivedStateFromProps(a,b){// the state is computed only from the payload; if it hasn't changed, do
// not recompute state since this would reset selections and/or the play
// slider position due to changes in form controls
if(b&&a.payload.form_data===b.formData)return null;var c=a.payload.data.features||[],d=c.map(function(a){return a.__timestamp}),e=a.payload.form_data.time_grain_sqla||a.payload.form_data.granularity||"P1D",f=getPlaySliderParams(d,e),g=f.start,h=f.end,i=f.getStep,j=f.values,k=f.disabled,l=a.formData.autozoom?fitViewport(a.viewport,getPoints(c)):a.viewport;return{start:g,end:h,getStep:i,values:j,disabled:k,viewport:l,selected:[],lastClick:0,formData:a.payload.form_data}};var c=b.prototype;return c.onSelect=function onSelect(a){var b=this.props,c=b.formData,d=b.onAddFilter,e=new Date,f=e-this.state.lastClick<=DOUBLE_CLICK_TRESHOLD,g=[].concat(this.state.selected);if(f)g.splice(0,g.length,a);else if(c.toggle_polygons){var h=g.indexOf(a);-1===h?g.push(a):g.splice(h,1)}else g.splice(0,1,a);this.setState({selected:g,lastClick:e}),c.table_filter&&d(c.line_column,g,!1,!0)},c.onValuesChange=function onValuesChange(a){this.setState({values:Array.isArray(a)?a:[a,a+this.state.getStep(a)]})},c.onViewportChange=function onViewportChange(a){this.setState({viewport:a})},c.getLayers=function getLayers(a){if(void 0===this.props.payload.data.features)return[];var b=[];// time filter
a[0]===a[1]||a[1]===this.end?b.push(function(b){return b.__timestamp>=a[0]&&b.__timestamp<=a[1]}):b.push(function(b){return b.__timestamp>=a[0]&&b.__timestamp<a[1]});var c=getLayer(this.props.formData,this.props.payload,this.props.onAddFilter,this.props.setTooltip,this.state.selected,this.onSelect,b);return[c]},c.render=function render(){var a=this.props,b=a.payload,c=a.formData,d=a.setControlValue,e=this.state,f=e.start,g=e.end,h=e.getStep,i=e.values,j=e.disabled,k=e.viewport,l=c,m=l.metric?l.metric.label||l.metric:null,n=getBuckets(c,b.data.features,function accessor(a){return a[m]});return React.createElement("div",{style:{position:"relative"}},React.createElement(AnimatableDeckGLContainer,{getLayers:this.getLayers,start:f,end:g,getStep:h,values:i,onValuesChange:this.onValuesChange,disabled:j,viewport:k,onViewportChange:this.onViewportChange,mapboxApiAccessToken:b.data.mapboxApiKey,mapStyle:c.mapbox_style,setControlValue:d,aggregation:!0},null!==c.metric&&React.createElement(Legend,{categories:n,position:c.legend_position,format:c.legend_format})))},b}(React.Component);DeckGLPolygon.propTypes=propTypes,DeckGLPolygon.defaultProps=defaultProps;export default DeckGLPolygon;