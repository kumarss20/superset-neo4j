"use strict";exports.__esModule=!0,exports.getLayer=getLayer,exports.default=void 0;var _deck=require("deck.gl"),_react=_interopRequireDefault(require("react")),_translation=require("@superset-ui/translation"),_common=require("../common"),_sandbox=_interopRequireDefault(require("../../utils/sandbox")),_factory=require("../../factory"),_TooltipRow=_interopRequireDefault(require("../../TooltipRow"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function setTooltipContent(a){return _react.default.createElement("div",{className:"deckgl-tooltip"},_react.default.createElement(_TooltipRow.default,{label:(0,_translation.t)("Longitude and Latitude")+": ",value:a.object.position[0]+", "+a.object.position[1]}),_react.default.createElement(_TooltipRow.default,{label:(0,_translation.t)("Height")+": ",value:""+a.object.elevationValue}))}function getLayer(a,b,d,e){var f=a,g=f.color_picker,c=b.data.features.map(function(a){return _extends({},a,{color:[g.r,g.g,g.b,255*g.a]})});if(f.js_data_mutator){// Applying user defined data mutator if defined
var i=(0,_sandbox.default)(f.js_data_mutator);c=i(c)}var h=(0,_common.getAggFunc)(f.js_agg_function,function(a){return a.weight});return new _deck.GridLayer(_extends({id:"grid-layer-"+f.slice_id,data:c,pickable:!0,cellSize:f.grid_size,minColor:[0,0,0,0],extruded:f.extruded,maxColor:[g.r,g.g,g.b,255*g.a],outline:!1,getElevationValue:h,getColorValue:h},(0,_common.commonLayerProps)(f,e,setTooltipContent)))}function getPoints(a){return a.map(function(a){return a.position})}var _default=(0,_factory.createDeckGLComponent)(getLayer,getPoints);exports.default=_default;