"use strict";exports.__esModule=!0,exports.getLayer=getLayer,exports.default=void 0;var _deck=require("deck.gl"),_react=_interopRequireDefault(require("react")),_translation=require("@superset-ui/translation"),_common=require("../common"),_factory=require("../../factory"),_TooltipRow=_interopRequireDefault(require("../../TooltipRow")),_geo=require("../../utils/geo");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function getPoints(a){return a.map(function(a){return a.position})}function setTooltipContent(a){return function(b){return _react.default.createElement("div",{className:"deckgl-tooltip"},_react.default.createElement(_TooltipRow.default,{label:(0,_translation.t)("Longitude and Latitude")+": ",value:b.object.position[0]+", "+b.object.position[1]}),b.object.cat_color&&_react.default.createElement(_TooltipRow.default,{label:(0,_translation.t)("Category")+": ",value:""+b.object.cat_color}),b.object.metric&&_react.default.createElement(_TooltipRow.default,{label:a.point_radius_fixed.value.label+": ",value:""+b.object.metric}))}}function getLayer(a,b,c,d){var e=a,f=b.data.features.map(function(a){var b=(0,_geo.unitToRadius)(e.point_unit,a.radius)||10;if(e.multiplier&&(b*=e.multiplier),a.color)return _extends({},a,{radius:b});var d=e.color_picker||{r:0,g:0,b:0,a:1},c=[d.r,d.g,d.b,255*d.a];return _extends({},a,{radius:b,color:c})});return new _deck.ScatterplotLayer(_extends({id:"scatter-layer-"+e.slice_id,data:f,fp64:!0,radiusMinPixels:e.min_radius||null,radiusMaxPixels:e.max_radius||null,outline:!1},(0,_common.commonLayerProps)(e,d,setTooltipContent(e))))}var _default=(0,_factory.createCategoricalDeckGLComponent)(getLayer,getPoints);exports.default=_default;