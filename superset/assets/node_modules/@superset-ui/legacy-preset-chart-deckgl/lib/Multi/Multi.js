"use strict";exports.__esModule=!0,exports.default=void 0;var _react=_interopRequireDefault(require("react")),_lodash=_interopRequireDefault(require("lodash")),_propTypes=_interopRequireDefault(require("prop-types")),_connection=require("@superset-ui/connection"),_DeckGLContainer=_interopRequireDefault(require("../DeckGLContainer")),_explore=require("../utils/explore"),_layers=_interopRequireDefault(require("../layers"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _inheritsLoose(a,b){a.prototype=Object.create(b.prototype),a.prototype.constructor=a,a.__proto__=b}var propTypes={formData:_propTypes.default.object.isRequired,payload:_propTypes.default.object.isRequired,setControlValue:_propTypes.default.func.isRequired,viewport:_propTypes.default.object.isRequired,onAddFilter:_propTypes.default.func,setTooltip:_propTypes.default.func,onSelect:_propTypes.default.func},defaultProps={onAddFilter:function onAddFilter(){},setTooltip:function setTooltip(){},onSelect:function onSelect(){}},DeckMulti=/*#__PURE__*/function(a){function b(b){var c;return c=a.call(this,b)||this,c.state={subSlicesLayers:{}},c.onViewportChange=c.onViewportChange.bind(_assertThisInitialized(c)),c}_inheritsLoose(b,a);var c=b.prototype;return c.componentDidMount=function componentDidMount(){var a=this.props,b=a.formData,c=a.payload;this.loadLayers(b,c)},c.UNSAFE_componentWillReceiveProps=function UNSAFE_componentWillReceiveProps(a){var b=a.formData,c=a.payload,d=!_lodash.default.isEqual(this.props.formData.deck_slices,a.formData.deck_slices);d&&this.loadLayers(b,c)},c.onViewportChange=function onViewportChange(a){this.setState({viewport:a})},c.loadLayers=function loadLayers(a,b,c){var d=this;this.setState({subSlicesLayers:{},viewport:c}),b.data.slices.forEach(function(b){// Filters applied to multi_deck are passed down to underlying charts
// note that dashboard contextual information (filter_immune_slices and such) aren't
// taken into consideration here
var c=[].concat(b.form_data.filters||[],a.filters||[],a.extra_filters||[]),e=_extends({},b,{form_data:_extends({},b.form_data,{filters:c})});_connection.SupersetClient.get({endpoint:(0,_explore.getExploreLongUrl)(e.form_data,"json")}).then(function(a){var b,c=a.json,f=_layers.default[e.form_data.viz_type](e.form_data,c,d.props.onAddFilter,d.props.setTooltip,[],d.props.onSelect);d.setState({subSlicesLayers:_extends({},d.state.subSlicesLayers,(b={},b[e.slice_id]=f,b))})}).catch(function(){})})},c.render=function render(){var a=this.props,b=a.payload,c=a.formData,d=a.setControlValue,e=this.state.subSlicesLayers,f=Object.values(e);return _react.default.createElement(_DeckGLContainer.default,{mapboxApiAccessToken:b.data.mapboxApiKey,viewport:this.state.viewport||this.props.viewport,onViewportChange:this.onViewportChange,layers:f,mapStyle:c.mapbox_style,setControlValue:d})},b}(_react.default.PureComponent);DeckMulti.propTypes=propTypes,DeckMulti.defaultProps=defaultProps;var _default=DeckMulti;exports.default=_default;