function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */ /* eslint-disable sort-keys */function extractTypes(a){return Object.keys(a).reduce(function(a,b){var c=a;return c[b]=b,c},{})}export var ANNOTATION_TYPES_METADATA={FORMULA:{value:"FORMULA",label:"Formula"},EVENT:{value:"EVENT",label:"Event",supportNativeSource:!0},INTERVAL:{value:"INTERVAL",label:"Interval",supportNativeSource:!0},TIME_SERIES:{value:"TIME_SERIES",label:"Time Series"}};export var ANNOTATION_TYPES=extractTypes(ANNOTATION_TYPES_METADATA);export var DEFAULT_ANNOTATION_TYPE=ANNOTATION_TYPES.FORMULA;export var ANNOTATION_SOURCE_TYPES_METADATA={NATIVE:{value:"NATIVE",label:"Superset annotation"}};export var ANNOTATION_SOURCE_TYPES=extractTypes(ANNOTATION_SOURCE_TYPES_METADATA);export function requiresQuery(a){return!!a}var NATIVE_COLUMN_NAMES={descriptionColumns:["long_descr"],intervalEndColumn:"end_dttm",timeColumn:"start_dttm",titleColumn:"short_descr"};export function applyNativeColumns(a){return a.sourceType===ANNOTATION_SOURCE_TYPES.NATIVE?_extends({},a,{},NATIVE_COLUMN_NAMES):a}export default ANNOTATION_TYPES;