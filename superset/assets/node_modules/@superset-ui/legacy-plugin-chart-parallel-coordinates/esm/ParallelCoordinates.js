/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */ /* eslint-disable sort-keys, no-magic-numbers */import d3 from"d3";import PropTypes from"prop-types";import{getSequentialSchemeRegistry}from"@superset-ui/color";import parcoords from"./vendor/parcoords/d3.parcoords";import divgrid from"./vendor/parcoords/divgrid";import"./vendor/parcoords/d3.parcoords.css";import"./ParallelCoordinates.css";var propTypes={// Standard tabular data [{ fieldName1: value1, fieldName2: value2 }]
data:PropTypes.arrayOf(PropTypes.object),width:PropTypes.number,height:PropTypes.number,colorMetric:PropTypes.string,includeSeries:PropTypes.bool,linearColorScheme:PropTypes.string,metrics:PropTypes.arrayOf(PropTypes.string),series:PropTypes.string,showDatatable:PropTypes.bool};function ParallelCoordinates(a,b){var c=b.data,d=b.width,e=b.height,f=b.colorMetric,g=b.includeSeries,h=b.linearColorScheme,i=b.metrics,j=b.series,k=b.showDatatable,l=g?[j].concat(i):i,m={};m[j]="string",i.forEach(function(a){m[a]="number"});var n=f?getSequentialSchemeRegistry().get(h).createLinearScale(d3.extent(c,function(a){return a[f]})):function(){return"grey"},o=d3.select(a).classed("superset-legacy-chart-parallel-coordinates",!0);o.selectAll("*").remove();var p=k?e/2:e,q=o.append("div").style("height",p+"px").classed("parcoords",!0),r=parcoords()(q.node()).width(d).color(function color(a){return n(a[f])}).alpha(.5).composite("darken").height(p).data(c).dimensions(l).types(m).render().createAxes().shadows().reorderable().brushMode("1D-axes");if(k){// create data table, row hover highlighting
var s=divgrid();// update data table on brush event
o.append("div").style("height",p+"px").datum(c).call(s).classed("parcoords grid",!0).selectAll(".row").on({mouseover:function mouseover(a){r.highlight([a])},mouseout:r.unhighlight}),r.on("brush",function(a){d3.select(".grid").datum(a).call(s).selectAll(".row").on({mouseover:function mouseover(a){r.highlight([a])},mouseout:r.unhighlight})})}}ParallelCoordinates.displayName="ParallelCoordinates",ParallelCoordinates.propTypes=propTypes;export default ParallelCoordinates;