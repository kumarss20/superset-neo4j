function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _inheritsLoose(a,b){a.prototype=Object.create(b.prototype),a.prototype.constructor=a,a.__proto__=b}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}import{ExtensibleFunction,isRequired}from"@superset-ui/core";export var PREVIEW_VALUE=12345.432;var NumberFormatter=/*#__PURE__*/function(a){function b(b){var c;c=a.call(this,function(a){return c.format(a)})||this,_defineProperty(_assertThisInitialized(c),"id",void 0),_defineProperty(_assertThisInitialized(c),"label",void 0),_defineProperty(_assertThisInitialized(c),"description",void 0),_defineProperty(_assertThisInitialized(c),"formatFunc",void 0),_defineProperty(_assertThisInitialized(c),"isInvalid",void 0);var d=b.id,e=void 0===d?isRequired("config.id"):d,f=b.label,g=b.description,h=void 0===g?"":g,i=b.formatFunc,j=void 0===i?isRequired("config.formatFunc"):i,k=b.isInvalid;return c.id=e,c.label=f||e,c.description=h,c.formatFunc=j,c.isInvalid=void 0!==k&&k,c}_inheritsLoose(b,a);var c=b.prototype;return c.format=function format(a){return null===a||void 0===a||Number.isNaN(a)?""+a:a===Number.POSITIVE_INFINITY?"\u221E":a===Number.NEGATIVE_INFINITY?"-\u221E":this.formatFunc(a)},c.preview=function preview(a){return void 0===a&&(a=PREVIEW_VALUE),a+" => "+this.format(a)},b}(ExtensibleFunction);export{NumberFormatter as default};