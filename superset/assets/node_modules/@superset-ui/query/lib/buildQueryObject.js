"use strict";exports.__esModule=!0,exports.default=buildQueryObject,exports.DTTM_ALIAS=void 0;var _QueryFormData=require("./types/QueryFormData"),_convertMetric=_interopRequireDefault(require("./convertMetric")),_processFilters=_interopRequireDefault(require("./processFilters")),_processMetrics=_interopRequireDefault(require("./processMetrics")),_processExtras=_interopRequireDefault(require("./processExtras"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var DTTM_ALIAS="__timestamp";exports.DTTM_ALIAS=DTTM_ALIAS;function processGranularity(a){return(0,_QueryFormData.isSqlaFormData)(a)?a.granularity_sqla:a.granularity}/**
 * Build the common segments of all query objects (e.g. the granularity field derived from
 * either sql alchemy or druid). The segments specific to each viz type is constructed in the
 * buildQuery method for each viz type (see `wordcloud/buildQuery.ts` for an example).
 * Note the type of the formData argument passed in here is the type of the formData for a
 * specific viz, which is a subtype of the generic formData shared among all viz types.
 */function buildQueryObject(a){var b=a.time_range,c=a.since,d=a.until,e=a.columns,f=void 0===e?[]:e,g=a.groupby,h=void 0===g?[]:g,i=a.order_desc,j=a.row_limit,k=a.limit,l=a.timeseries_limit_metric,m=new Set([].concat(f,h)),n=_extends({extras:(0,_processExtras.default)(a),granularity:processGranularity(a),groupby:Array.from(m),is_timeseries:m.has(DTTM_ALIAS),metrics:(0,_processMetrics.default)(a),order_desc:!("undefined"!=typeof i)||i,orderby:[],row_limit:+j,since:c,time_range:b,timeseries_limit:k?+k:0,timeseries_limit_metric:l?(0,_convertMetric.default)(l):null,until:d},(0,_processFilters.default)(a));return n}