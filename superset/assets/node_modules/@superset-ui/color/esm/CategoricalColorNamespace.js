function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}import CategoricalColorScale from"./CategoricalColorScale";import getCategoricalSchemeRegistry from"./CategoricalSchemeRegistrySingleton";import stringifyAndTrim from"./stringifyAndTrim";var CategoricalColorNamespace=/*#__PURE__*/function(){function a(a){_defineProperty(this,"name",void 0),_defineProperty(this,"forcedItems",void 0),_defineProperty(this,"scales",void 0),this.name=a,this.scales={},this.forcedItems={}}var b=a.prototype;return b.getScale=function(a){var b=a||getCategoricalSchemeRegistry().getDefaultKey()||"",c=this.scales[b];if(c)return c;var d=getCategoricalSchemeRegistry().get(b),e=new CategoricalColorScale(d&&d.colors||[],this.forcedItems);return this.scales[b]=e,e}/**
   * Enforce specific color for given value
   * This will apply across all color scales
   * in this namespace.
   * @param {*} value value
   * @param {*} forcedColor color
   */,b.setColor=function setColor(a,b){return this.forcedItems[stringifyAndTrim(a)]=b,this},a}();export{CategoricalColorNamespace as default};var namespaces={};export var DEFAULT_NAMESPACE="GLOBAL";export function getNamespace(a){void 0===a&&(a=DEFAULT_NAMESPACE);var b=namespaces[a];if(b)return b;var c=new CategoricalColorNamespace(a);return namespaces[a]=c,c}export function getColor(a,b,c){return getNamespace(c).getScale(b).getColor(a)}export function getScale(a,b){return getNamespace(b).getScale(a)}