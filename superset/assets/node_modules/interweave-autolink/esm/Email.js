import _pt from "prop-types";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import Link from './Link';
export default function Email(_ref) {
  var children = _ref.children,
      email = _ref.email,
      emailParts = _ref.emailParts,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "email", "emailParts"]);

  return React.createElement(Link, _extends({}, props, {
    href: "mailto:" + email
  }), children);
}
Email.propTypes = {
  children: _pt.any.isRequired,
  email: _pt.string.isRequired,
  emailParts: _pt.shape({
    host: _pt.string.isRequired,
    username: _pt.string.isRequired
  }).isRequired
};