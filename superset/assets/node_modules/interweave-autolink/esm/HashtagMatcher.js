function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

import React from 'react';
import { Matcher } from 'interweave';
import Hashtag from './Hashtag';
import { HASHTAG_PATTERN } from './constants';

var HashtagMatcher = function (_Matcher) {
  _inheritsLoose(HashtagMatcher, _Matcher);

  function HashtagMatcher() {
    return _Matcher.apply(this, arguments) || this;
  }

  var _proto = HashtagMatcher.prototype;

  _proto.replaceWith = function replaceWith(children, props) {
    return React.createElement(Hashtag, props, children);
  };

  _proto.asTag = function asTag() {
    return 'a';
  };

  _proto.match = function match(string) {
    return this.doMatch(string, HASHTAG_PATTERN, function (matches) {
      return {
        hashtag: matches[0]
      };
    });
  };

  return HashtagMatcher;
}(Matcher);

export { HashtagMatcher as default };