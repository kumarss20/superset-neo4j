import React, { useContext, useRef, useEffect, useLayoutEffect } from 'react';
import uuid from 'uuid/v4';
import DirectionContext from './DirectionContext';
import ThemeContext from './ThemeContext';
var useSideEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;
export default function useStylesFactory(aesthetic) {
  return function useStyles(styleSheet, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        customName = _options.styleName;
    var ref = useRef();
    var dir = useContext(DirectionContext);
    var themeName = useContext(ThemeContext);
    var styleName = '';

    if (ref.current) {
      styleName = ref.current;
    } else {
      styleName = customName || uuid();
      ref.current = styleName;
      aesthetic.registerStyleSheet(styleName, styleSheet);
    }

    var params = {
      dir: dir,
      name: styleName,
      theme: themeName
    };
    var sheet = aesthetic.createStyleSheet(styleName, params);
    useSideEffect(function () {
      aesthetic.flushStyles(styleName);
    }, [dir, styleName, themeName]);

    var cx = function cx() {
      for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {
        styles[_key] = arguments[_key];
      }

      return aesthetic.transformStyles(styles, params);
    };

    return [sheet, cx, styleName];
  };
}