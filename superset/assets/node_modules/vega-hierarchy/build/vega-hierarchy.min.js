!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vega-dataflow"),require("vega-util"),require("d3-hierarchy")):"function"==typeof define&&define.amd?define(["exports","vega-dataflow","vega-util","d3-hierarchy"],t):t(((e=e||self).vega=e.vega||{},e.vega.transforms={}),e.vega,e.vega,e.d3)}(this,function(e,t,r,a){"use strict";function n(e,t,r){var a={};return e.each(function(e){var n=e.data;r(n)&&(a[t(n)]=e)}),e.lookup=a,e}function i(e){t.Transform.call(this,null,e)}function o(e){return e.values}function u(){var e,t=[];return e={entries:function(e){return function e(r,a){if(++a>t.length)return r;var n,i=[];for(n in r)i.push({key:n,values:e(r[n],a)});return i}(function e(r,a){if(a>=t.length)return r;for(var n,i,o,u=-1,s=r.length,d=t[a++],l={},f={};++u<s;)(o=l[n=d(i=r[u])+""])?o.push(i):l[n]=[i];for(n in l)f[n]=e(l[n],a);return f}(e,0),0)},key:function(r){return t.push(r),e}}}function s(e){t.Transform.call(this,null,e)}function d(e,t){return e.parent===t.parent?1:2}i.Definition={type:"Nest",metadata:{treesource:!0,changes:!0},params:[{name:"keys",type:"field",array:!0},{name:"generate",type:"boolean"}]},r.inherits(i,t.Transform).transform=function(e,i){i.source||r.error("Nest transform requires an upstream data source.");var s=e.generate,d=e.modified(),l=i.clone(),f=this.value;return(!f||d||i.changed())&&(f&&f.each(function(e){e.children&&t.isTuple(e.data)&&l.rem.push(e.data)}),this.value=f=a.hierarchy({values:r.array(e.keys).reduce(function(e,t){return e.key(t),e},u()).entries(l.source)},o),s&&f.each(function(e){e.children&&(e=t.ingest(e.data),l.add.push(e),l.source.push(e))}),n(f,t.tupleid,t.tupleid)),l.source.root=f,l},r.inherits(s,t.Transform).transform=function(e,t){t.source&&t.source.root||r.error(this.constructor.name+" transform requires a backing tree data source.");var a=this.layout(e.method),n=this.fields,i=t.source.root,o=e.as||n;e.field&&i.sum(e.field),e.sort&&i.sort(e.sort),function(e,t,r){for(var a,n=0,i=t.length;n<i;++n)(a=t[n])in r&&e[a](r[a])}(a,this.params,e),a.separation&&a.separation(!1!==e.separation?d:r.one);try{this.value=a(i)}catch(e){r.error(e)}return i.each(function(e){!function(e,t,r){for(var a=e.data,n=0,i=t.length-1;n<i;++n)a[r[n]]=e[t[n]];a[r[i]]=e.children?e.children.length:0}(e,n,o)}),t.reflow(e.modified()).modifies(o).modifies("leaf")};var l=["x","y","r","depth","children"];function f(e){s.call(this,e)}f.Definition={type:"Pack",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"radius",type:"field",default:null},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:l.length,default:l}]};var p=r.inherits(f,s);p.layout=a.pack,p.params=["size","padding"],p.fields=l;var m=["x0","y0","x1","y1","depth","children"];function c(e){s.call(this,e)}c.Definition={type:"Partition",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:m.length,default:m}]};var y=r.inherits(c,s);function h(e){t.Transform.call(this,null,e)}y.layout=a.partition,y.params=["size","round","padding"],y.fields=m,h.Definition={type:"Stratify",metadata:{treesource:!0},params:[{name:"key",type:"field",required:!0},{name:"parentKey",type:"field",required:!0}]},r.inherits(h,t.Transform).transform=function(e,t){t.source||r.error("Stratify transform requires an upstream data source.");var i=this.value,o=e.modified(),u=t.fork(t.ALL).materialize(t.SOURCE),s=!this.value||o||t.changed(t.ADD_REM)||t.modified(e.key.fields)||t.modified(e.parentKey.fields);return u.source=u.source.slice(),s&&(i=u.source.length?n(a.stratify().id(e.key).parentId(e.parentKey)(u.source),e.key,r.truthy):n(a.stratify()([{}]),e.key,e.key)),u.source.root=this.value=i,u};var g={tidy:a.tree,cluster:a.cluster},v=["x","y","depth","children"];function b(e){s.call(this,e)}b.Definition={type:"Tree",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"tidy",values:["tidy","cluster"]},{name:"size",type:"number",array:!0,length:2},{name:"nodeSize",type:"number",array:!0,length:2},{name:"separation",type:"boolean",default:!0},{name:"as",type:"string",array:!0,length:v.length,default:v}]};var k=r.inherits(b,s);function T(e){t.Transform.call(this,[],e)}k.layout=function(e){var t=e||"tidy";if(g.hasOwnProperty(t))return g[t]();r.error("Unrecognized Tree layout method: "+t)},k.params=["size","nodeSize"],k.fields=v,T.Definition={type:"TreeLinks",metadata:{tree:!0,generates:!0,changes:!0},params:[]},r.inherits(T,t.Transform).transform=function(e,a){var n=this.value,i=a.source&&a.source.root,o=a.fork(a.NO_SOURCE),u={};return i||r.error("TreeLinks transform requires a tree data source."),a.changed(a.ADD_REM)?(o.rem=n,a.visit(a.SOURCE,function(e){u[t.tupleid(e)]=1}),i.each(function(e){var r=e.data,a=e.parent&&e.parent.data;a&&u[t.tupleid(r)]&&u[t.tupleid(a)]&&o.add.push(t.ingest({source:a,target:r}))}),this.value=o.add):a.changed(a.MOD)&&(a.visit(a.MOD,function(e){u[t.tupleid(e)]=1}),n.forEach(function(e){(u[t.tupleid(e.source)]||u[t.tupleid(e.target)])&&o.mod.push(e)})),o};var q={binary:a.treemapBinary,dice:a.treemapDice,slice:a.treemapSlice,slicedice:a.treemapSliceDice,squarify:a.treemapSquarify,resquarify:a.treemapResquarify},D=["x0","y0","x1","y1","depth","children"];function z(e){s.call(this,e)}z.Definition={type:"Treemap",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"squarify",values:["squarify","resquarify","binary","dice","slice","slicedice"]},{name:"padding",type:"number",default:0},{name:"paddingInner",type:"number",default:0},{name:"paddingOuter",type:"number",default:0},{name:"paddingTop",type:"number",default:0},{name:"paddingRight",type:"number",default:0},{name:"paddingBottom",type:"number",default:0},{name:"paddingLeft",type:"number",default:0},{name:"ratio",type:"number",default:1.618033988749895},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:D.length,default:D}]};var O=r.inherits(z,s);O.layout=function(){var e=a.treemap();return e.ratio=function(t){var r=e.tile();r.ratio&&e.tile(r.ratio(t))},e.method=function(t){q.hasOwnProperty(t)?e.tile(q[t]):r.error("Unrecognized Treemap layout method: "+t)},e},O.params=["method","ratio","size","round","padding","paddingInner","paddingOuter","paddingTop","paddingRight","paddingBottom","paddingLeft"],O.fields=D,e.nest=i,e.pack=f,e.partition=c,e.stratify=h,e.tree=b,e.treelinks=T,e.treemap=z,Object.defineProperty(e,"__esModule",{value:!0})});