import { Direction, ThemeName } from './types';
export interface CacheTags {
    dir?: Direction;
    global?: boolean;
    theme?: ThemeName;
}
export interface CacheUnit<T> extends CacheTags {
    value: T;
}
export default class CacheManager<T> {
    protected cache: Map<string, CacheUnit<T>[]>;
    clear(filter?: (unit: CacheUnit<T>) => boolean): this;
    compare(unit: CacheUnit<T>, tags: CacheTags): boolean;
    get(key: string, tags: CacheTags): T | null;
    set(key: string, value: T, tags: CacheTags): T;
}
//# sourceMappingURL=CacheManager.d.ts.map