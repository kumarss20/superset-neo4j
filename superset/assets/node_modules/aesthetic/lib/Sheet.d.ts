import Ruleset from './Ruleset';
import { ClassName, SheetMap, TransformOptions } from './types';
declare type AtRuleType<Block extends object> = string | string[] | Ruleset<Block> | Ruleset<Block>[] | Sheet<Block>;
export default class Sheet<Block extends object> {
    atRules: {
        [rule: string]: AtRuleType<Block>;
    };
    classNames: {
        [selector: string]: ClassName;
    };
    options: TransformOptions;
    ruleSets: {
        [selector: string]: Ruleset<Block>;
    };
    constructor(options?: TransformOptions);
    addAtRule(rule: string, value: AtRuleType<Block>): this;
    addClassName(selector: string, value: ClassName): this;
    addRuleset(set: Ruleset<Block>): this;
    createRuleset(selector: string): Ruleset<Block>;
    createSheet(options?: TransformOptions): Sheet<Block>;
    toObject(): SheetMap<Block>;
}
export {};
//# sourceMappingURL=Sheet.d.ts.map