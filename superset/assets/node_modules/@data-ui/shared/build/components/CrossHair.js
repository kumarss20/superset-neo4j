'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _d3Array = require('d3-array');

var _color = require('@data-ui/theme/build/color');

var _color2 = _interopRequireDefault(_color);

var _Group = require('@vx/group/build/Group');

var _Group2 = _interopRequireDefault(_Group);

var _Line = require('@vx/shape/build/shapes/Line');

var _Line2 = _interopRequireDefault(_Line);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  fullHeight: _propTypes2.default.bool,
  fullWidth: _propTypes2.default.bool,
  circleSize: _propTypes2.default.number,
  circleFill: _propTypes2.default.string,
  circleStroke: _propTypes2.default.string,
  circleStyles: _propTypes2.default.object,
  lineStyles: _propTypes2.default.object,
  showCircle: _propTypes2.default.bool,
  showHorizontalLine: _propTypes2.default.bool,
  showVerticalLine: _propTypes2.default.bool,
  stroke: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
  strokeDasharray: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
  strokeWidth: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.number]),

  // likely injected by parent
  left: _propTypes2.default.number,
  top: _propTypes2.default.number,
  xScale: _propTypes2.default.func,
  yScale: _propTypes2.default.func

};

var defaultProps = {
  left: 0,
  top: 0,
  circleSize: 4,
  circleFill: _color2.default.grays[7],
  circleStroke: '#ffffff',
  circleStyles: {
    pointerEvents: 'none'
  },
  lineStyles: {
    pointerEvents: 'none'
  },
  fullHeight: false,
  fullWidth: false,
  showCircle: true,
  showHorizontalLine: true,
  showVerticalLine: true,
  stroke: _color2.default.grays[7],
  strokeDasharray: '3,3',
  strokeWidth: 1,
  xScale: null,
  yScale: null
};

function CrossHair(_ref) {
  var left = _ref.left,
      top = _ref.top,
      circleFill = _ref.circleFill,
      circleSize = _ref.circleSize,
      circleStroke = _ref.circleStroke,
      circleStyles = _ref.circleStyles,
      fullHeight = _ref.fullHeight,
      fullWidth = _ref.fullWidth,
      showHorizontalLine = _ref.showHorizontalLine,
      showCircle = _ref.showCircle,
      showVerticalLine = _ref.showVerticalLine,
      stroke = _ref.stroke,
      strokeDasharray = _ref.strokeDasharray,
      strokeWidth = _ref.strokeWidth,
      xScale = _ref.xScale,
      yScale = _ref.yScale,
      lineStyles = _ref.lineStyles;

  if (!xScale || !yScale) return null;

  var _extent = (0, _d3Array.extent)(xScale.range()),
      _extent2 = _slicedToArray(_extent, 2),
      xMin = _extent2[0],
      xMax = _extent2[1];

  var _extent3 = (0, _d3Array.extent)(yScale.range()),
      _extent4 = _slicedToArray(_extent3, 2),
      yMin = _extent4[0],
      yMax = _extent4[1];

  return _react2.default.createElement(
    _Group2.default,
    null,
    showHorizontalLine && top !== null && _react2.default.createElement(_Line2.default, {
      from: { x: xMin, y: top },
      to: { x: fullWidth || left === null ? xMax : left, y: top },
      style: lineStyles,
      stroke: stroke,
      strokeDasharray: strokeDasharray,
      strokeWidth: strokeWidth
    }),
    showVerticalLine && top !== null && _react2.default.createElement(_Line2.default, {
      from: { x: left, y: yMax },
      to: { x: left, y: top === null || fullHeight ? yMin : top },
      style: lineStyles,
      stroke: stroke,
      strokeDasharray: strokeDasharray,
      strokeWidth: strokeWidth
    }),
    showCircle && top !== null && left !== null && _react2.default.createElement('circle', {
      cx: left,
      cy: top,
      r: circleSize,
      fill: circleFill,
      stroke: circleStroke,
      strokeWidth: 1,
      style: circleStyles
    })
  );
}

CrossHair.propTypes = propTypes;
CrossHair.defaultProps = defaultProps;
CrossHair.displayName = 'CrossHair';

exports.default = CrossHair;