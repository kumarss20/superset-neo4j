'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propTypes = exports.withTooltipPropTypes = exports.Tooltip = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Tooltip = require('@vx/tooltip/build/tooltips/Tooltip');

Object.defineProperty(exports, 'Tooltip', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_Tooltip).default;
  }
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _localPoint = require('@vx/event/build/localPoint');

var _localPoint2 = _interopRequireDefault(_localPoint);

var _withTooltip = require('@vx/tooltip/build/enhancers/withTooltip');

var _withTooltip2 = _interopRequireDefault(_withTooltip);

var _TooltipWithBounds = require('@vx/tooltip/build/tooltips/TooltipWithBounds');

var _TooltipWithBounds2 = _interopRequireDefault(_TooltipWithBounds);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var withTooltipPropTypes = exports.withTooltipPropTypes = {
  onMouseMove: _propTypes2.default.func, // expects to be called like func({ event, datum })
  onMouseLeave: _propTypes2.default.func, // expects to be called like func({ event, datum })
  tooltipData: _propTypes2.default.any
};

var propTypes = exports.propTypes = _extends({}, _TooltipWithBounds.withTooltipPropTypes, {
  children: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]).isRequired,
  className: _propTypes2.default.string,
  HoverStyles: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
  renderTooltip: _propTypes2.default.func,
  styles: _propTypes2.default.object,
  TooltipComponent: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
  tooltipProps: _propTypes2.default.object
});

var defaultProps = {
  className: null,
  HoverStyles: function HoverStyles() {
    return _react2.default.createElement(
      'style',
      { type: 'text/css' },
      '\n      .vx-arc:hover,\n      .vx-bar:hover,\n      .vx-glyph-dot:hover {\n        opacity: 0.7;\n      }\n    '
    );
  },
  renderTooltip: null,
  styles: { display: 'inline-block', position: 'relative' },
  TooltipComponent: _TooltipWithBounds2.default,
  tooltipProps: null,
  tooltipTimeout: 200
};

var WithTooltip = function (_React$PureComponent) {
  _inherits(WithTooltip, _React$PureComponent);

  function WithTooltip(props) {
    _classCallCheck(this, WithTooltip);

    var _this = _possibleConstructorReturn(this, (WithTooltip.__proto__ || Object.getPrototypeOf(WithTooltip)).call(this, props));

    _this.handleMouseMove = _this.handleMouseMove.bind(_this);
    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);
    _this.tooltipTimeout = null;
    return _this;
  }

  _createClass(WithTooltip, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.tooltipTimeout) {
        clearTimeout(this.tooltipTimeout);
      }
    }
  }, {
    key: 'handleMouseMove',
    value: function handleMouseMove(_ref) {
      var event = _ref.event,
          datum = _ref.datum,
          coords = _ref.coords,
          rest = _objectWithoutProperties(_ref, ['event', 'datum', 'coords']);

      if (this.tooltipTimeout) {
        clearTimeout(this.tooltipTimeout);
      }

      var tooltipCoords = { x: 0, y: 0 };
      if (event && event.target && event.target.ownerSVGElement) {
        tooltipCoords = (0, _localPoint2.default)(event.target.ownerSVGElement, event);
      }

      tooltipCoords = _extends({}, tooltipCoords, coords);

      this.props.showTooltip({
        tooltipLeft: tooltipCoords.x,
        tooltipTop: tooltipCoords.y,
        tooltipData: _extends({
          event: event,
          datum: datum
        }, rest)
      });
    }
  }, {
    key: 'handleMouseLeave',
    value: function handleMouseLeave() {
      var _props = this.props,
          tooltipTimeout = _props.tooltipTimeout,
          hideTooltip = _props.hideTooltip;

      this.tooltipTimeout = setTimeout(function () {
        hideTooltip();
      }, tooltipTimeout);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          children = _props2.children,
          className = _props2.className,
          HoverStyles = _props2.HoverStyles,
          tooltipData = _props2.tooltipData,
          tooltipOpen = _props2.tooltipOpen,
          tooltipLeft = _props2.tooltipLeft,
          tooltipTop = _props2.tooltipTop,
          tooltipProps = _props2.tooltipProps,
          renderTooltip = _props2.renderTooltip,
          styles = _props2.styles,
          TooltipComponent = _props2.TooltipComponent;


      var childProps = {
        onMouseMove: this.handleMouseMove,
        onMouseLeave: this.handleMouseLeave,
        tooltipData: tooltipData
      };

      var tooltipContent = renderTooltip && tooltipOpen && TooltipComponent && renderTooltip(tooltipData);

      return _react2.default.createElement(
        'div',
        { style: styles, className: className },
        typeof children === 'function' ? children(childProps) : _react2.default.cloneElement(_react2.default.Children.only(children), childProps),
        Boolean(tooltipContent) && _react2.default.createElement(
          TooltipComponent,
          _extends({
            key: Math.random(),
            top: tooltipTop,
            left: tooltipLeft
          }, tooltipProps),
          tooltipContent
        ),
        HoverStyles && _react2.default.createElement(HoverStyles, null)
      );
    }
  }]);

  return WithTooltip;
}(_react2.default.PureComponent);

WithTooltip.propTypes = propTypes;
WithTooltip.defaultProps = defaultProps;

exports.default = (0, _withTooltip2.default)(WithTooltip);