'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultProps = exports.propTypes = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Group = require('@vx/group/build/Group');

var _Group2 = _interopRequireDefault(_Group);

var _Bar = require('@vx/shape/build/shapes/Bar');

var _Bar2 = _interopRequireDefault(_Bar);

var _color = require('@data-ui/theme/build/color');

var _color2 = _interopRequireDefault(_color);

var _svgLabel = require('@data-ui/theme/build/svgLabel');

var _svgLabel2 = _interopRequireDefault(_svgLabel);

var _Label = require('../annotation/Label');

var _Label2 = _interopRequireDefault(_Label);

var _callOrValue = require('../utils/callOrValue');

var _callOrValue2 = _interopRequireDefault(_callOrValue);

var _positionLabel = require('../utils/positionLabel');

var _positionLabel2 = _interopRequireDefault(_positionLabel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = exports.propTypes = {
  fill: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
  fillOpacity: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.number]),
  LabelComponent: _propTypes2.default.element,
  labelOffset: _propTypes2.default.number,
  labelPosition: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left'])]),
  onMouseMove: _propTypes2.default.func,
  onMouseLeave: _propTypes2.default.func,
  renderLabel: _propTypes2.default.func, // (val, i) => node
  stroke: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
  strokeWidth: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.number]),

  // all likely passed by the parent chart
  data: _propTypes2.default.array,
  getX: _propTypes2.default.func,
  getY: _propTypes2.default.func,
  xScale: _propTypes2.default.func,
  yScale: _propTypes2.default.func
};

var defaultProps = exports.defaultProps = {
  data: [],
  fill: _color2.default.default,
  fillOpacity: 0.7,
  getX: null,
  getY: null,
  labelOffset: 8,
  LabelComponent: _react2.default.createElement(_Label2.default, _extends({}, _svgLabel2.default.baseTickLabel, { stroke: '#fff' })),
  labelPosition: 'top',
  onMouseMove: null,
  onMouseLeave: null,
  renderLabel: null,
  stroke: '#fff',
  strokeWidth: 1,
  xScale: null,
  yScale: null
};

var BarSeries = function (_React$PureComponent) {
  _inherits(BarSeries, _React$PureComponent);

  function BarSeries() {
    _classCallCheck(this, BarSeries);

    return _possibleConstructorReturn(this, (BarSeries.__proto__ || Object.getPrototypeOf(BarSeries)).apply(this, arguments));
  }

  _createClass(BarSeries, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          data = _props.data,
          getX = _props.getX,
          getY = _props.getY,
          fill = _props.fill,
          fillOpacity = _props.fillOpacity,
          labelOffset = _props.labelOffset,
          LabelComponent = _props.LabelComponent,
          labelPosition = _props.labelPosition,
          onMouseMove = _props.onMouseMove,
          onMouseLeave = _props.onMouseLeave,
          renderLabel = _props.renderLabel,
          stroke = _props.stroke,
          strokeWidth = _props.strokeWidth,
          xScale = _props.xScale,
          yScale = _props.yScale;


      if (!xScale || !yScale || !getX || !getY || !data.length) return null;
      var barWidth = Math.max(1, Math.max.apply(Math, _toConsumableArray(xScale.range())) / data.length - 1);
      var maxBarHeight = Math.max.apply(Math, _toConsumableArray(yScale.range()));
      var labels = []; // render labels as top-most layer
      return _react2.default.createElement(
        _Group2.default,
        null,
        data.map(function (d, i) {
          var yVal = getY(d);
          var x = xScale(getX(d));
          var y = yScale(yVal);
          var key = 'bar-' + x + '-' + y + '-' + i;
          var label = renderLabel && renderLabel(yVal, i);
          var fillValue = (0, _callOrValue2.default)(d.fill || fill, yVal, i);
          if (label) {
            labels.push(_extends({
              key: key,
              label: label,
              x: x,
              y: y
            }, (0, _positionLabel2.default)((0, _callOrValue2.default)(labelPosition, yVal, i), labelOffset)));
          }
          return _react2.default.createElement(_Bar2.default, {
            key: key,
            x: x - barWidth / 2,
            y: y,
            width: barWidth,
            height: maxBarHeight - y,
            fill: fillValue,
            fillOpacity: (0, _callOrValue2.default)(typeof d.fillOpacity !== 'undefined' ? d.fillOpacity : fillOpacity, yVal, i),
            stroke: (0, _callOrValue2.default)(d.stroke || stroke, yVal, i),
            strokeWidth: (0, _callOrValue2.default)(d.strokeWidth || strokeWidth, yVal, i),
            onMouseMove: onMouseMove && function () {
              return function (event) {
                onMouseMove({ event: event, data: data, datum: d, index: i, color: fillValue });
              };
            },
            onMouseLeave: onMouseLeave && function () {
              return onMouseLeave;
            }
          });
        }),
        labels.map(function (labelProps) {
          return _react2.default.cloneElement(LabelComponent, labelProps);
        })
      );
    }
  }]);

  return BarSeries;
}(_react2.default.PureComponent);

BarSeries.propTypes = propTypes;
BarSeries.defaultProps = defaultProps;
BarSeries.displayName = 'BarSeries';

exports.default = BarSeries;