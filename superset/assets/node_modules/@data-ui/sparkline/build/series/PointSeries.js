'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultProps = exports.propTypes = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _d3Array = require('d3-array');

var _Dot = require('@vx/glyph/build/glyphs/Dot');

var _Dot2 = _interopRequireDefault(_Dot);

var _Group = require('@vx/group/build/Group');

var _Group2 = _interopRequireDefault(_Group);

var _color = require('@data-ui/theme/build/color');

var _color2 = _interopRequireDefault(_color);

var _svgLabel = require('@data-ui/theme/build/svgLabel');

var _svgLabel2 = _interopRequireDefault(_svgLabel);

var _Label = require('../annotation/Label');

var _Label2 = _interopRequireDefault(_Label);

var _callOrValue = require('../utils/callOrValue');

var _callOrValue2 = _interopRequireDefault(_callOrValue);

var _defined = require('../utils/defined');

var _defined2 = _interopRequireDefault(_defined);

var _positionLabel = require('../utils/positionLabel');

var _positionLabel2 = _interopRequireDefault(_positionLabel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = exports.propTypes = {
  fill: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
  fillOpacity: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.number]),
  LabelComponent: _propTypes2.default.element,
  labelOffset: _propTypes2.default.number,
  labelPosition: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.oneOf(['auto', 'top', 'right', 'bottom', 'left'])]),
  onMouseMove: _propTypes2.default.func,
  onMouseLeave: _propTypes2.default.func,
  points: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.number, // index
  _propTypes2.default.oneOf(['all', 'min', 'max', 'first', 'last'])])),
  size: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.number]),
  renderLabel: _propTypes2.default.func, // (d, i) => node
  stroke: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
  strokeWidth: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.number]),

  // all likely passed by the parent chart
  data: _propTypes2.default.array,
  getX: _propTypes2.default.func,
  getY: _propTypes2.default.func,
  xScale: _propTypes2.default.func,
  yScale: _propTypes2.default.func
};

var defaultProps = exports.defaultProps = {
  data: [],
  fill: _color2.default.default,
  fillOpacity: 1,
  LabelComponent: _react2.default.createElement(_Label2.default, _extends({}, _svgLabel2.default.baseTickLabel, { stroke: '#fff' })),
  labelOffset: 12,
  labelPosition: 'auto',
  onMouseMove: null,
  onMouseLeave: null,
  getX: null,
  getY: null,
  points: ['min', 'max'],
  renderLabel: null,
  size: 4,
  stroke: '#fff',
  strokeWidth: 2,
  xScale: null,
  yScale: null
};

var PointSeries = function (_React$Component) {
  _inherits(PointSeries, _React$Component);

  function PointSeries() {
    _classCallCheck(this, PointSeries);

    return _possibleConstructorReturn(this, (PointSeries.__proto__ || Object.getPrototypeOf(PointSeries)).apply(this, arguments));
  }

  _createClass(PointSeries, [{
    key: 'shouldComponentUpdate',

    // we define a custom handler because the points prop may be impractible to cache
    value: function shouldComponentUpdate(nextProps) {
      var _this2 = this;

      var nonPointsAreEqual = Object.keys(propTypes).every(function (prop) {
        return prop === 'points' || _this2.props[prop] === nextProps[prop];
      });

      var pointsAreEqual = nextProps.points.length === this.props.points.length && nextProps.points.every(function (point) {
        return _this2.props.points.indexOf(point) > -1;
      });

      return !(pointsAreEqual && nonPointsAreEqual);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          data = _props.data,
          getX = _props.getX,
          getY = _props.getY,
          fill = _props.fill,
          fillOpacity = _props.fillOpacity,
          LabelComponent = _props.LabelComponent,
          labelOffset = _props.labelOffset,
          labelPosition = _props.labelPosition,
          onMouseMove = _props.onMouseMove,
          onMouseLeave = _props.onMouseLeave,
          points = _props.points,
          renderLabel = _props.renderLabel,
          size = _props.size,
          stroke = _props.stroke,
          strokeWidth = _props.strokeWidth,
          xScale = _props.xScale,
          yScale = _props.yScale;

      if (!xScale || !yScale || !getX || !getY || !data.length) return null;

      var showAll = points.includes('all');
      var showMin = points.includes('min');
      var showMax = points.includes('max');
      var showFirst = points.includes('first');
      var showLast = points.includes('last');

      var _extent = (0, _d3Array.extent)(data, getY),
          _extent2 = _slicedToArray(_extent, 2),
          minY = _extent2[0],
          maxY = _extent2[1];

      var lastIndex = data.length - 1;

      return _react2.default.createElement(
        _Group2.default,
        null,
        data.map(function (d, i) {
          if (points.indexOf(i) > -1 || showAll || showFirst && i === 0 || showLast && i === lastIndex || showMin && Math.abs(getY(d) - minY) < 0.00001 || showMax && Math.abs(getY(d) - maxY) < 0.00001) {
            var yVal = getY(d);
            var cx = xScale(getX(d));
            var cy = yScale(yVal);
            var key = cx + '-' + cy + '-' + i;

            var label = renderLabel && renderLabel(yVal, i);
            var prevCy = data[i - 1] ? yScale(getY(data[i - 1])) : null;
            var nextCy = data[i + 1] ? yScale(getY(data[i + 1])) : null;
            var fillValue = (0, _callOrValue2.default)(d.fill || fill, yVal, i);

            // position label above a point if either of the surrounding points are lower
            var autoLabelPosition = prevCy !== null && prevCy > cy || nextCy !== null && nextCy > cy ? 'top' : 'bottom';

            return (0, _defined2.default)(cx) && (0, _defined2.default)(cy) && _react2.default.createElement(
              _Dot2.default,
              {
                key: key,
                cx: cx,
                cy: cy,
                r: (0, _callOrValue2.default)(d.size || size, yVal, i),
                fill: fillValue,
                fillOpacity: (0, _callOrValue2.default)(d.fillOpacity || fillOpacity, yVal, i),
                stroke: (0, _callOrValue2.default)(d.stroke || stroke, yVal, i),
                strokeWidth: (0, _callOrValue2.default)(d.strokeWidth || strokeWidth, yVal, i),
                onMouseMove: onMouseMove && function (event) {
                  onMouseMove({ event: event, data: data, datum: d, index: i, color: fillValue });
                },
                onMouseLeave: onMouseLeave
              },
              label && _react2.default.cloneElement(LabelComponent, _extends({
                x: cx,
                y: cy
              }, (0, _positionLabel2.default)(labelPosition === 'auto' ? autoLabelPosition : (0, _callOrValue2.default)(labelPosition, yVal, i), labelOffset), {
                label: label
              }))
            );
          }
          return null;
        })
      );
    }
  }]);

  return PointSeries;
}(_react2.default.Component);

PointSeries.propTypes = propTypes;
PointSeries.defaultProps = defaultProps;
PointSeries.displayName = 'PointSeries';

exports.default = PointSeries;