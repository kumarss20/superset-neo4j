'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultProps = exports.propTypes = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _d3Array = require('d3-array');

var _Bar = require('@vx/shape/build/shapes/Bar');

var _Bar2 = _interopRequireDefault(_Bar);

var _color = require('@data-ui/theme/build/color');

var _color2 = _interopRequireDefault(_color);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = exports.propTypes = {
  band: _propTypes2.default.oneOfType([_propTypes2.default.shape({
    from: _propTypes2.default.shape({ // @TODO check that it's a length of 2
      x: _propTypes2.default.number,
      y: _propTypes2.default.number
    }),
    to: _propTypes2.default.shape({ // @TODO check that it's a length of 2
      x: _propTypes2.default.number,
      y: _propTypes2.default.number
    })
  }), _propTypes2.default.oneOf(['innerquartiles'])]),
  fill: _propTypes2.default.string,
  fillOpacity: _propTypes2.default.number,
  stroke: _propTypes2.default.string,
  strokeWidth: _propTypes2.default.number,

  // all likely passed by the parent chart
  data: _propTypes2.default.array,
  getY: _propTypes2.default.func,
  xScale: _propTypes2.default.func,
  yScale: _propTypes2.default.func
};

var defaultProps = exports.defaultProps = {
  data: [],
  getY: null,
  band: 'innerquartiles',
  fill: _color2.default.lightGray,
  fillOpacity: 0.5,
  stroke: 'transparent',
  strokeWidth: 0,
  xScale: null,
  yScale: null
};

var BandLine = function (_React$PureComponent) {
  _inherits(BandLine, _React$PureComponent);

  function BandLine() {
    _classCallCheck(this, BandLine);

    return _possibleConstructorReturn(this, (BandLine.__proto__ || Object.getPrototypeOf(BandLine)).apply(this, arguments));
  }

  _createClass(BandLine, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          band = _props.band,
          data = _props.data,
          fill = _props.fill,
          fillOpacity = _props.fillOpacity,
          getY = _props.getY,
          stroke = _props.stroke,
          strokeWidth = _props.strokeWidth,
          xScale = _props.xScale,
          yScale = _props.yScale;

      if (!xScale || !yScale || !getY || !data.length) return null;

      var _xScale$range = xScale.range(),
          _xScale$range2 = _slicedToArray(_xScale$range, 2),
          x0 = _xScale$range2[0],
          x1 = _xScale$range2[1];

      var _yScale$range = yScale.range(),
          _yScale$range2 = _slicedToArray(_yScale$range, 2),
          y1 = _yScale$range2[0],
          y0 = _yScale$range2[1];

      var x = 0;
      var y = 0;
      var width = 0;
      var height = 0;
      if (band === 'innerquartiles') {
        var sortedData = [].concat(_toConsumableArray(data)).sort(function (a, b) {
          return parseFloat(getY(a)) - parseFloat(getY(b));
        });
        var lowerQuartile = yScale((0, _d3Array.quantile)(sortedData, 0.25, getY));
        var upperQuartile = yScale((0, _d3Array.quantile)(sortedData, 0.75, getY));

        y = Math.min(lowerQuartile, upperQuartile);
        height = Math.abs(upperQuartile - lowerQuartile);
        x = x0;
        width = x1 - x0;
      } else {
        // input points are assumed to be values so we must scale them
        var yFrom = typeof band.from.y === 'undefined' ? y0 : yScale(band.from.y);
        var yTo = typeof band.to.y === 'undefined' ? y1 : yScale(band.to.y);

        y = Math.min(yFrom, yTo);
        height = Math.abs(yFrom - yTo);
        x = typeof band.from.x === 'undefined' ? x0 : xScale(band.from.x);
        width = (typeof band.to.x === 'undefined' ? x1 : xScale(band.to.x)) - x;
      }

      return _react2.default.createElement(_Bar2.default, {
        x: x,
        y: y,
        width: width,
        height: height,
        fill: fill,
        fillOpacity: fillOpacity,
        stroke: stroke,
        strokeWidth: strokeWidth
      });
    }
  }]);

  return BandLine;
}(_react2.default.PureComponent);

BandLine.propTypes = propTypes;
BandLine.defaultProps = defaultProps;
BandLine.displayName = 'BandLine';

exports.default = BandLine;