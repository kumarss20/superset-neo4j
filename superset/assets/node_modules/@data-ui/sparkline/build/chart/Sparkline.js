'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint react/no-unused-prop-types: 0 */


var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _d3Array = require('d3-array');

var _Group = require('@vx/group/build/Group');

var _Group2 = _interopRequireDefault(_Group);

var _linear = require('@vx/scale/build/scales/linear');

var _linear2 = _interopRequireDefault(_linear);

var _BarSeries = require('../series/BarSeries');

var _BarSeries2 = _interopRequireDefault(_BarSeries);

var _componentIsX = require('../utils/componentIsX');

var _defined = require('../utils/defined');

var _defined2 = _interopRequireDefault(_defined);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  ariaLabel: _propTypes2.default.string.isRequired,
  children: _propTypes2.default.node.isRequired,
  className: _propTypes2.default.string,
  data: _propTypes2.default.array,
  height: _propTypes2.default.number.isRequired,
  margin: _propTypes2.default.shape({
    top: _propTypes2.default.number,
    right: _propTypes2.default.number,
    bottom: _propTypes2.default.number,
    left: _propTypes2.default.number
  }),
  max: _propTypes2.default.number,
  min: _propTypes2.default.number,
  onMouseMove: _propTypes2.default.func,
  onMouseLeave: _propTypes2.default.func,
  preserveAspectRatio: _propTypes2.default.string,
  styles: _propTypes2.default.object,
  width: _propTypes2.default.number.isRequired,
  valueAccessor: _propTypes2.default.func,
  viewBox: _propTypes2.default.string
};

var defaultProps = {
  className: null,
  data: [],
  margin: {
    top: 16,
    right: 16,
    bottom: 16,
    left: 16
  },
  max: null,
  min: null,
  onMouseMove: null,
  onMouseLeave: null,
  preserveAspectRatio: null,
  styles: null,
  valueAccessor: function valueAccessor(d) {
    return d;
  },
  viewBox: null
};

var getX = function getX(d) {
  return d.i;
};
var getY = function getY(d) {
  return d.y;
};

var parsedDatumThunk = function parsedDatumThunk(valueAccessor) {
  return function (d, i) {
    var y = valueAccessor(d);
    return _extends({ i: i, y: y, id: y }, d);
  };
};

var Sparkline = function (_React$PureComponent) {
  _inherits(Sparkline, _React$PureComponent);

  function Sparkline(props) {
    _classCallCheck(this, Sparkline);

    var _this = _possibleConstructorReturn(this, (Sparkline.__proto__ || Object.getPrototypeOf(Sparkline)).call(this, props));

    _this.getMaxY = _this.getMaxY.bind(_this);
    _this.state = _this.getStateFromProps(props);
    return _this;
  }

  _createClass(Sparkline, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if ([// recompute scales if any of the following change
      'data', 'height', 'margin', 'max', 'min', 'valueAccessor', 'width'].some(function (prop) {
        return _this2.props[prop] !== nextProps[prop];
      })) {
        this.setState(this.getStateFromProps(nextProps));
      }
    }
  }, {
    key: 'getStateFromProps',
    value: function getStateFromProps(props) {
      var dimensions = this.getDimmensions(props);
      var scales = this.getScales(props, dimensions);

      return _extends({}, dimensions, scales);
    }
  }, {
    key: 'getScales',
    value: function getScales(props, _ref) {
      var innerHeight = _ref.innerHeight,
          innerWidth = _ref.innerWidth;

      var _ref2 = props || this.props,
          rawData = _ref2.data,
          min = _ref2.min,
          max = _ref2.max,
          valueAccessor = _ref2.valueAccessor;

      var data = rawData.map(parsedDatumThunk(valueAccessor));
      var yExtent = (0, _d3Array.extent)(data, getY);
      var xScale = (0, _linear2.default)({
        domain: [0, data.length - 1],
        range: [0, innerWidth]
      });
      var yScale = (0, _linear2.default)({
        domain: [(0, _defined2.default)(min) ? min : yExtent[0], (0, _defined2.default)(max) ? max : yExtent[1]],
        range: [innerHeight, 0]
      });
      return { xScale: xScale, yScale: yScale, data: data };
    }
  }, {
    key: 'getMaxY',
    value: function getMaxY() {
      return Math.max.apply(Math, _toConsumableArray(this.state.yScale.domain()));
    }
  }, {
    key: 'getDimmensions',
    value: function getDimmensions(props) {
      var _ref3 = props || this.props,
          margin = _ref3.margin,
          width = _ref3.width,
          height = _ref3.height;

      var completeMargin = _extends({}, defaultProps.margin, margin);
      return {
        margin: completeMargin,
        innerHeight: height - completeMargin.top - completeMargin.bottom,
        innerWidth: width - completeMargin.left - completeMargin.right
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          ariaLabel = _props.ariaLabel,
          children = _props.children,
          className = _props.className,
          height = _props.height,
          onMouseMove = _props.onMouseMove,
          onMouseLeave = _props.onMouseLeave,
          preserveAspectRatio = _props.preserveAspectRatio,
          styles = _props.styles,
          width = _props.width,
          viewBox = _props.viewBox;
      var _state = this.state,
          data = _state.data,
          margin = _state.margin,
          xScale = _state.xScale,
          yScale = _state.yScale;


      var seriesProps = {
        xScale: xScale,
        yScale: yScale,
        data: data,
        getX: getX,
        getY: getY
      };

      return _react2.default.createElement(
        'svg',
        {
          'aria-label': ariaLabel,
          className: className,
          height: height,
          role: 'img',
          preserveAspectRatio: preserveAspectRatio,
          style: styles,
          width: width,
          viewBox: viewBox
        },
        _react2.default.createElement(
          _Group2.default,
          { left: margin.left, top: margin.top },
          _react2.default.Children.map(children, function (Child) {
            var name = (0, _componentIsX.componentName)(Child);
            if ((0, _componentIsX.isSeries)(name) || (0, _componentIsX.isReferenceLine)(name) || (0, _componentIsX.isBandLine)(name)) {
              return _react2.default.cloneElement(Child, seriesProps);
            }
            return Child;
          }),
          (onMouseMove || onMouseLeave) && _react2.default.createElement(_BarSeries2.default, _extends({
            fill: 'transparent',
            fillOpacity: 0,
            stroke: 'transparent',
            strokeWidth: 1
          }, seriesProps, {
            getY: this.getMaxY,
            onMouseMove: onMouseMove,
            onMouseLeave: onMouseLeave
          }))
        )
      );
    }
  }]);

  return Sparkline;
}(_react2.default.PureComponent);

Sparkline.propTypes = propTypes;
Sparkline.defaultProps = defaultProps;
Sparkline.displayName = 'Sparkline';

exports.default = Sparkline;