declare type Fetcher<T> = (key: string, force: boolean, cache: Map<string, T>) => Promise<unknown>;
export default class FeatureLoader<T> {
    cache: Map<string, T>;
    fetch: Fetcher<T>;
    promises: Map<string, Promise<T | null>>;
    constructor(fetch: Fetcher<T>);
    clear(): void;
    getFeature(key: string): T | null;
    loadFeature(key: string, force?: boolean): Promise<T | null>;
    isCached(key: string): boolean;
}
export {};
//# sourceMappingURL=FeatureLoader.d.ts.map