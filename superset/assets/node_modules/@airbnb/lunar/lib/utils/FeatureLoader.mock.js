"use strict";

exports.__esModule = true;
exports.default = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class MockFeatureLoader {
  constructor() {
    _defineProperty(this, "cache", new Map());

    _defineProperty(this, "fetch", key => Promise.resolve(key));
  }

  clear() {
    this.cache.clear();
  }

  getFeature(key) {
    const value = this.cache.get(key);
    return typeof value === 'undefined' ? null : value;
  }

  loadFeature(key) {
    return Promise.resolve(this.getFeature(key));
  }

  isCached(key) {
    return this.cache.has(key);
  }

  extendOnlyForUseInTests(extension) {
    Object.keys(extension).forEach(key => {
      this.cache.set(key, extension[key]);
    });
  }

}

exports.default = MockFeatureLoader;