import React from 'react';
export declare type Props = {
    /** Number of milliseconds for each interval. */
    every: number;
    /** Content to re-render. */
    children: (now: number) => NonNullable<React.ReactNode>;
};
export declare type State = {
    now: number;
};
/** Continuously render content at an interval. */
export default class Interval extends React.PureComponent<Props, State> {
    state: {
        now: number;
    };
    ric: number;
    timer: number;
    componentDidMount(): void;
    componentWillUnmount(): void;
    tick: () => void;
    render(): string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal;
}
//# sourceMappingURL=index.d.ts.map