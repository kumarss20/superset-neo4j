"use strict";

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _IconArrowLeft = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconArrowLeft"));

var _IconArrowRight = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconArrowRight"));

var _withStyles = _interopRequireDefault(require("../../../composers/withStyles"));

var _datePickerStyles = _interopRequireDefault(require("../../private/datePickerStyles"));

var _DirectionalIcon = _interopRequireDefault(require("../../DirectionalIcon"));

var _IconButton = _interopRequireDefault(require("../../IconButton"));

var _Translate = _interopRequireDefault(require("../../Translate"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class NavBar extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleNextClick", () => {
      this.props.onNextClick();
    });

    _defineProperty(this, "handlePreviousClick", () => {
      this.props.onPreviousClick();
    });

    _defineProperty(this, "handleResetClick", () => {
      if (this.props.onResetClick) {
        this.props.onResetClick();
      }
    });
  }

  render() {
    const {
      cx,
      className,
      classNames,
      labels,
      noFooter,
      showNextButton,
      showPreviousButton,
      showResetButton,
      styles
    } = this.props;
    return _react.default.createElement("div", {
      className: className
    }, showPreviousButton && _react.default.createElement("div", {
      className: classNames.navButtonPrev
    }, _react.default.createElement(_IconButton.default, {
      tooltip: labels.previousMonth,
      onClick: this.handlePreviousClick
    }, _react.default.createElement(_DirectionalIcon.default, {
      direction: "left",
      left: _IconArrowLeft.default,
      right: _IconArrowRight.default,
      size: "1.25em",
      accessibilityLabel: labels.previousMonth
    }))), showNextButton && _react.default.createElement("div", {
      className: classNames.navButtonNext
    }, _react.default.createElement(_IconButton.default, {
      tooltip: labels.nextMonth,
      onClick: this.handleNextClick
    }, _react.default.createElement(_DirectionalIcon.default, {
      direction: "right",
      left: _IconArrowLeft.default,
      right: _IconArrowRight.default,
      size: "1.25em",
      accessibilityLabel: labels.nextMonth
    }))), showResetButton && _react.default.createElement("div", {
      className: cx(styles.resetButton, noFooter && styles.resetButton_noFooter)
    }, _react.default.createElement("button", {
      className: cx(styles.todayButton),
      type: "button",
      onClick: this.handleResetClick
    }, _react.default.createElement(_Translate.default, {
      k: "lunar.common.reset",
      phrase: "Reset",
      context: "Reset selected dates"
    }))));
  }

}

_defineProperty(NavBar, "propTypes", {
  onResetClick: _propTypes.default.func,
  showResetButton: _propTypes.default.bool,
  noFooter: _propTypes.default.bool
});

_defineProperty(NavBar, "defaultProps", {
  noFooter: false,
  showResetButton: false
});

var _default = (0, _withStyles.default)(_datePickerStyles.default)(NavBar);

exports.default = _default;