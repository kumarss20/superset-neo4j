import React from 'react';
import { Props as AutocompleteProps, Item as AutocompleteItem } from '../Autocomplete';
export declare type Item = AutocompleteItem;
export declare type Props<T extends Item = Item> = Omit<AutocompleteProps<T>, 'children' | 'isItemSelected' | 'onChange' | 'value'> & {
    /** Callback that is triggered when an item is selected. */
    onChange: (values: string[], event: React.SyntheticEvent<HTMLElement>) => void;
    /** Default selected values. */
    value?: string[];
};
export declare type State = {
    values: Set<string>;
};
/** An uncontrolled input field for selecting multiple values via an autocomplete. */
export default class Multicomplete<T extends Item = Item> extends React.Component<Props<T>, State> {
    static defaultProps: {
        value: never[];
    };
    state: {
        values: Set<string>;
    };
    componentDidUpdate(prevProps: Props<T>): void;
    private isItemSelected;
    private handleChange;
    private handleSelectItem;
    private handleChipClick;
    render(): JSX.Element;
}
//# sourceMappingURL=index.d.ts.map