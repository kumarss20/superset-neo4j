"use strict";

exports.__esModule = true;
exports.default = ModalInnerContent;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _IconClose = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconClose"));

var _Text = _interopRequireDefault(require("../../Text"));

var _Title = _interopRequireDefault(require("../../Title"));

var _IconButton = _interopRequireDefault(require("../../IconButton"));

var _Translate = _interopRequireDefault(require("../../Translate"));

var _useStyles = _interopRequireDefault(require("../../../hooks/useStyles"));

var _useTheme = _interopRequireDefault(require("../../../hooks/useTheme"));

var _styles = require("../styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** A Dialog component with a backdrop and a standardized layout. */
function ModalInnerContent(_ref) {
  let {
    children,
    footer,
    large,
    small,
    onClose,
    scrollable,
    subtitle,
    title
  } = _ref;
  const [styles, cx] = (0, _useStyles.default)(_styles.styleSheetInnerContent);
  const theme = (0, _useTheme.default)();
  const withHeader = Boolean(title || subtitle);
  const withFooter = Boolean(footer);
  return _react.default.createElement("div", {
    className: cx(styles.wrapper)
  }, withHeader && _react.default.createElement("header", {
    className: cx(styles.header, scrollable && styles.header_scrollable)
  }, title && _react.default.createElement(_Title.default, {
    level: 3
  }, title), subtitle && _react.default.createElement(_Text.default, {
    muted: true
  }, subtitle)), _react.default.createElement("div", {
    className: cx(styles.close, !withHeader && styles.close_float)
  }, _react.default.createElement(_IconButton.default, {
    onClick: onClose
  }, _react.default.createElement(_IconClose.default, {
    accessibilityLabel: _Translate.default.phrase('Close', {}, {
      context: 'Close a modal popup',
      key: 'lunar.common.close'
    }),
    color: theme.color.muted,
    size: theme.unit * 3
  }))), _react.default.createElement("div", {
    className: cx(styles.body, !withHeader && styles.body_paddingTop, !withFooter && styles.body_paddingBottom, scrollable && styles.body_scrollable, small && scrollable && styles.body_scrollableSmall, large && scrollable && styles.body_scrollableLarge)
  }, children), footer && _react.default.createElement("footer", {
    className: cx(styles.footer, scrollable && styles.footer_scrollable)
  }, footer));
}

ModalInnerContent.propTypes = {
  children: _propTypes.default.any.isRequired,
  footer: _propTypes.default.node,
  large: _propTypes.default.bool,
  scrollable: _propTypes.default.bool,
  small: _propTypes.default.bool,
  subtitle: _propTypes.default.node,
  title: _propTypes.default.node,
  onClose: _propTypes.default.func.isRequired
};