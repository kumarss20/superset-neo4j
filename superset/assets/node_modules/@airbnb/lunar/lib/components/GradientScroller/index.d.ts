import React from 'react';
import { WithStylesProps } from '../../composers/withStyles';
export declare type Props = {
    /** How much to scroll when hovering above gradient. Defaults to 15% of the container width. */
    autoScrollIncrement?: number;
    /** Children to be positioned in a vertically centered fashion. */
    children?: React.ReactNode;
    /** Whether to hide the scrollbar. Doesn't prevent scroll. */
    hideScrollbar?: boolean;
    /** Whether to show arrows on the edges. */
    showArrows?: boolean;
};
export declare type State = {
    showStartGradient: boolean;
    showEndGradient: boolean;
};
/** A horizontal scroller with gradients on each side. */
export declare class GradientScroller extends React.Component<Props & WithStylesProps, State> {
    static defaultProps: {
        children: null;
        hideScrollbar: boolean;
        showArrows: boolean;
    };
    contentsRef: HTMLDivElement | null;
    observer: ResizeObserver;
    scrollInterval: number;
    scrollerRef: HTMLDivElement | null;
    state: {
        showStartGradient: boolean;
        showEndGradient: boolean;
    };
    constructor(props: Props & WithStylesProps);
    componentWillUnmount(): void;
    calculate(): void;
    calculateAutoScrollIncrement(): number;
    calculateMaxChildWidth(contents: Element): number;
    doScroll(amount: number, interval?: boolean): void;
    private handleContentsRef;
    private handleScrollerRef;
    private handleObserver;
    private handleResize;
    private handleResizeDebounced;
    private handleScroll;
    private handleScrollThrottled;
    private handleScrollLeft;
    private handleScrollRight;
    private handleScrollStop;
    render(): JSX.Element;
}
declare const _default: import("aesthetic-react").StyledComponent<import("../../types").Theme, Props & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=index.d.ts.map