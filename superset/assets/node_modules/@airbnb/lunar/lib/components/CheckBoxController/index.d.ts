import React from 'react';
import { Props as FormFieldProps } from '../FormField';
import { Props as CheckBoxProps } from '../CheckBox';
export declare type PropsProvided = Partial<CheckBoxProps> & {
    label: NonNullable<React.ReactNode>;
    value: string;
};
export declare type Props = FormFieldProps & {
    /** Function children in which CheckBox components can be rendered. */
    children: (component: React.ComponentType<PropsProvided>, values: string[], id: string) => void;
    /** Unique name of the field. */
    name: string;
    /** Callback that is triggered when a child CheckBox is clicked. */
    onChange: (values: string[], event: React.ChangeEvent<HTMLInputElement>) => void;
    /** Default checked values. */
    value?: string[];
};
export declare type State = {
    id: string;
    values: Set<string>;
};
/** Manage multiple checkboxes with the same input `name`. */
export default class CheckBoxController extends React.Component<Props, State> {
    static defaultProps: {
        value: never[];
    };
    state: {
        id: string;
        values: Set<string>;
    };
    componentDidUpdate(prevProps: Props): void;
    private handleChange;
    renderCheckBox: React.ComponentType<CheckBoxProps>;
    render(): JSX.Element;
}
//# sourceMappingURL=index.d.ts.map