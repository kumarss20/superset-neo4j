import React from 'react';
import { WithStylesProps } from '../../../composers/withStyles';
import { Formatter, ItemPickedHandler, ItemRenderer, ItemShape, TreePath } from '../types';
export declare type Props = {
    chosen?: TreePath;
    hierarchyMaxHeight?: number;
    hierarchyWidth?: number;
    indexParentPath?: boolean;
    items: ItemShape[];
    formatter: Formatter;
    noResultsLabel: string;
    onClose: () => void;
    onItemPicked: ItemPickedHandler;
    renderItem?: ItemRenderer;
    searchMaxHeight?: number;
    searchPlaceholder: string;
    searchWidth?: number;
    verticallyAlign?: boolean;
};
export declare type State = {
    searchQuery: string;
};
export declare class Picker extends React.Component<Props & WithStylesProps, State> {
    static defaultProps: {
        searchWidth: number;
    };
    state: {
        searchQuery: string;
    };
    ref: React.RefObject<HTMLDivElement>;
    componentDidMount(): void;
    getFocusables(): HTMLElement[];
    focusNext(forward?: boolean): void;
    private handleKeyDown;
    private handleSearch;
    private handleItemPicked;
    render(): JSX.Element;
}
declare const _default: import("aesthetic-react").StyledComponent<import("../../../types").Theme, Props & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=index.d.ts.map