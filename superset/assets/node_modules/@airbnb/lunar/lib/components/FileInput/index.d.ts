import React from 'react';
import { InputProps } from '../private/FormInput';
import { Props as FormFieldProps } from '../FormField';
import { ButtonOrLinkTypes } from '../private/ButtonOrLink';
export declare type Props = Omit<InputProps, 'id'> & FormFieldProps & {
    /** Hide file size column in the file preview table. */
    hideFileSize?: boolean;
    /** Hide file type column in the file preview table. */
    hideFileType?: boolean;
    /** Hide last modified column in the file preview table. */
    hideLastModified?: boolean;
    /** Callback fired when a file is selected. */
    onChange: (files: File[], event: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<ButtonOrLinkTypes>) => void;
    /** Only allow audio files to be uploaded. */
    onlyAudio?: boolean;
    /** Only allow images to be uploaded. */
    onlyImages?: boolean;
    /** Only allow video to be uploaded. */
    onlyVideo?: boolean;
};
export declare type State = {
    files: File[];
    id: string;
};
/** A controlled input field for uploading files. */
export default class FileInput extends React.Component<Props, State> {
    static propTypes: {
        onlyAudio: import("prop-types").Requireable<boolean>;
        onlyImages: import("prop-types").Requireable<boolean>;
        onlyVideo: import("prop-types").Requireable<boolean>;
    };
    static defaultProps: {
        hideFileSize: boolean;
        hideFileType: boolean;
        hideLastModified: boolean;
        onlyAudio: boolean;
        onlyImages: boolean;
        onlyVideo: boolean;
    };
    state: State;
    ref: React.RefObject<HTMLInputElement>;
    private handleChange;
    private handleClick;
    private handleRemoveFile;
    render(): JSX.Element;
}
//# sourceMappingURL=index.d.ts.map