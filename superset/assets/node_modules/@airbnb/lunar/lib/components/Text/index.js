"use strict";

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _airbnbPropTypes = require("airbnb-prop-types");

var _useStyles = _interopRequireDefault(require("../../hooks/useStyles"));

var _styles = require("./styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Display a string of text with pre-defined sizing, emphasis, and state styling. */
function Text(_ref) {
  let {
    baseline,
    bold,
    centerAlign,
    children,
    disabled,
    endAlign,
    inline,
    inverted,
    large,
    light,
    micro,
    muted,
    noWrap,
    preserveWhitespace,
    small,
    startAlign,
    truncated,
    uppercased
  } = _ref;
  const [styles, cx] = (0, _useStyles.default)(_styles.styleSheet);
  let Tag = 'div';

  if (inline) {
    Tag = 'span';
  } else if (micro) {
    Tag = 'small';
  } else if (large) {
    Tag = 'h4';
  }

  return _react.default.createElement(Tag, {
    className: cx(styles.text, bold && styles.text_bold, disabled && styles.text_disabled, inline && styles.text_inline, baseline && styles.text_baseline, inverted && styles.text_inverted, large && styles.text_large, light && styles.text_light, micro && styles.text_micro, muted && styles.text_muted, preserveWhitespace && styles.text_preserveWhitespace, small && styles.text_small, truncated && styles.text_truncated, uppercased && styles.text_uppercased, micro && uppercased && styles.text_uppercased_micro, centerAlign && styles.text_center, endAlign && styles.text_end, startAlign && styles.text_start, noWrap && styles.text_noWrap)
  }, children);
}

const sizingProp = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)('micro', 'small', 'large');
const emphasisProp = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)('bold', 'light');
const stateProp = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)('disabled', 'muted', 'inverted');
const alignProp = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)('centerAlign', 'endAlign', 'startAlign');
Text.propTypes = {
  uppercased: _propTypes.default.bool,
  truncated: _propTypes.default.bool,
  preserveWhitespace: _propTypes.default.bool,
  noWrap: _propTypes.default.bool,
  inline: _propTypes.default.bool,
  children: _propTypes.default.node,
  baseline: _propTypes.default.bool,
  bold: emphasisProp,
  centerAlign: alignProp,
  disabled: stateProp,
  endAlign: alignProp,
  inverted: stateProp,
  large: sizingProp,
  light: emphasisProp,
  micro: sizingProp,
  muted: stateProp,
  small: sizingProp,
  startAlign: alignProp
};
var _default = Text;
exports.default = _default;