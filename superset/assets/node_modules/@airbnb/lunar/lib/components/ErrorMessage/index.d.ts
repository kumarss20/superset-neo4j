import React from 'react';
import { ErrorType } from '../../types';
export declare function getErrorMessage(error: string | ErrorType, includeCode?: boolean): string;
export declare type Props = {
    /** An `Error` instance or an API endpoint response. */
    error?: ErrorType;
    /** Display the error inline as text. */
    inline?: boolean;
    /** Title of the error. Defaults to the error code or an unknown title. */
    title?: React.ReactNode;
    /** Subtitle of the error. Defaults to the message within `error`. */
    subtitle?: React.ReactNode;
    /** Callback fired when the alert is closed. */
    onClose?: () => void;
};
/** Display an error message from an `Error` instance or API endpoint. */
export default class ErrorMessage extends React.PureComponent<Props> {
    static defaultProps: {
        inline: boolean;
        subtitle: null;
        title: null;
    };
    render(): JSX.Element | null;
}
//# sourceMappingURL=index.d.ts.map