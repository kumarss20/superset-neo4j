import React from 'react';
import { WithStylesProps } from '../../composers/withStyles';
import ZoomControls from './ZoomControls';
import RotateControls from './RotateControls';
export declare type Props = {
    /** An accessible label. */
    alt: string;
    /** Render as borderless. */
    borderless?: boolean;
    /** Render height. Unconstrained (css value 'none') by default. */
    height?: number | string;
    /** The current rotation. 0 by default. */
    rotation?: number;
    /** The source of the image. Typically a URL. */
    src: string;
    /** The current scale / zoom level. 1 by default. */
    scale?: number;
    /** Render width. Unconstrained (css value 'none') by default. */
    width?: number | string;
};
export declare type State = {
    dragging: boolean;
    imageLocation: Position;
    lastMouseLocation: Position;
};
export declare type Position = {
    x: number;
    y: number;
};
/** An image viewer that can zoom, drag, and rotate an image. */
export declare class ImageViewer extends React.Component<Props & WithStylesProps, State> {
    static defaultProps: {
        height: string;
        rotation: number;
        scale: number;
        width: string;
    };
    state: {
        dragging: boolean;
        imageLocation: {
            x: number;
            y: number;
        };
        lastMouseLocation: {
            x: number;
            y: number;
        };
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    private handleMouseDown;
    private handleMouseUp;
    private handleMouseMove;
    getTransformStyle(): {
        transform: string;
    };
    render(): JSX.Element;
}
export { ZoomControls, RotateControls };
declare const _default: import("aesthetic-react").StyledComponent<import("../../types").Theme, Props & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=index.d.ts.map