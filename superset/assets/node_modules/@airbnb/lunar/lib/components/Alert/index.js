"use strict";

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _airbnbPropTypes = require("airbnb-prop-types");

var _IconFlag = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconFlag"));

var _IconCheckAlt = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconCheckAlt"));

var _IconClose = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconClose"));

var _IconError = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconError"));

var _IconInfo = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconInfo"));

var _IconWarning = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconWarning"));

var _useStyles = _interopRequireDefault(require("../../hooks/useStyles"));

var _useTheme = _interopRequireDefault(require("../../hooks/useTheme"));

var _Row = _interopRequireDefault(require("../Row"));

var _Spacing = _interopRequireDefault(require("../Spacing"));

var _Text = _interopRequireDefault(require("../Text"));

var _Translate = _interopRequireDefault(require("../Translate"));

var _IconButton = _interopRequireDefault(require("../IconButton"));

var _constants = require("../../constants");

var _styles = require("./styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable prefer-destructuring */
const alertColorTypePropType = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)(..._constants.STATUSES);

/** Classify content through the use of colorful alerts. */
function Alert(_ref) {
  let {
    children,
    danger,
    hideStatusIcon,
    info,
    inline,
    notice,
    success,
    title,
    warning,
    onClose
  } = _ref;
  const [styles, cx] = (0, _useStyles.default)(_styles.styleSheet);
  const {
    color,
    unit
  } = (0, _useTheme.default)();
  let StatusIcon = null;
  let iconColor = color.accent.text;

  if (danger) {
    StatusIcon = _IconError.default;
    iconColor = color.core.danger[3];
  } else if (info) {
    StatusIcon = _IconInfo.default;
    iconColor = color.core.primary[3];
  } else if (notice) {
    StatusIcon = _IconFlag.default;
    iconColor = color.core.secondary[3];
  } else if (success) {
    StatusIcon = _IconCheckAlt.default;
    iconColor = color.core.success[3];
  } else if (warning) {
    StatusIcon = _IconWarning.default;
    iconColor = color.core.warning[3];
  }

  return _react.default.createElement("div", {
    className: cx(styles.alert, inline && styles.alert_inline, !hideStatusIcon && !!StatusIcon && styles.alert_statusIcon, danger && styles.alert_danger, info && styles.alert_info, notice && styles.alert_notice, success && styles.alert_success, warning && styles.alert_warning)
  }, _react.default.createElement(_Row.default, {
    middleAlign: !children,
    after: onClose && _react.default.createElement(_IconButton.default, {
      onClick: onClose
    }, _react.default.createElement(_IconClose.default, {
      accessibilityLabel: _Translate.default.phrase('Close', {}, {
        context: 'Close the alert',
        key: 'lunar.common.close'
      }),
      size: unit * 3
    })),
    before: !hideStatusIcon && StatusIcon && _react.default.createElement(StatusIcon, {
      decorative: true,
      color: iconColor,
      size: unit * 3
    })
  }, _react.default.createElement(_Text.default, {
    bold: true
  }, title), children && _react.default.createElement(_Spacing.default, {
    top: 1
  }, _react.default.createElement(_Text.default, null, children))));
}

Alert.propTypes = {
  onClose: _propTypes.default.func,
  title: _propTypes.default.any.isRequired,
  inline: _propTypes.default.bool,
  hideStatusIcon: _propTypes.default.bool,
  children: _propTypes.default.node,
  danger: alertColorTypePropType,
  info: alertColorTypePropType,
  notice: alertColorTypePropType,
  success: alertColorTypePropType,
  warning: alertColorTypePropType
};
var _default = Alert;
exports.default = _default;