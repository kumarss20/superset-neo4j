import React from 'react';
import { Props as ButtonOrLinkProps } from '../private/ButtonOrLink';
export declare type Props = ButtonOrLinkProps & {
    /** @ignore */
    afterIcon?: React.ReactNode;
    /** @ignore */
    beforeIcon?: React.ReactNode;
    /** Mark as active. */
    active?: boolean;
    /** Invert text colors. */
    inverted?: boolean;
    /** Wrap the button in a tooltip. */
    tooltip?: React.ReactNode;
};
/** A button with an icon as content, and an optional tooltip. */
declare function IconButton({ children, active, disabled, inverted, tooltip, ...restProps }: Props): JSX.Element;
declare namespace IconButton {
    var propTypes: {
        children: import("prop-types").Validator<React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>>;
    };
}
export default IconButton;
//# sourceMappingURL=index.d.ts.map