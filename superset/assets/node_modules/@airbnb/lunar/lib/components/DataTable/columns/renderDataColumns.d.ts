/// <reference types="react" />
import { CellMeasurerCache } from 'react-virtualized';
import { ColumnMetadata, DataTableProps, EditCallback } from '../types';
import { WithStylesProps } from '../../../composers/withStyles';
declare type ArgumentsFromProps = {
    cx: WithStylesProps['cx'];
    styles: WithStylesProps['styles'];
    columnMetadata?: ColumnMetadata;
    showColumnDividers?: boolean;
    renderers?: DataTableProps['renderers'];
    zebra?: boolean;
    theme?: WithStylesProps['theme'];
    selectable?: boolean;
    expandable?: boolean;
    dynamicRowHeight?: boolean;
};
export default function renderDataColumns<T>(keys: string[], editMode: boolean, onEdit: EditCallback<T>, cache: CellMeasurerCache, { columnMetadata, expandable, renderers, selectable, showColumnDividers, zebra, dynamicRowHeight, cx, styles, theme, }: ArgumentsFromProps): JSX.Element[];
export {};
//# sourceMappingURL=renderDataColumns.d.ts.map