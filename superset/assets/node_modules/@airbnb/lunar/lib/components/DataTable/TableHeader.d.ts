/// <reference types="react" />
import { WithStylesProps } from '../../composers/withStyles';
import { HeaderButton, SelectedRows } from './types';
export declare type Props = {
    /** Specifies whether or not editMode can be enabled */
    editable?: boolean;
    /** Determines which set of header buttons to render. */
    editMode: boolean;
    /** Height of the TableHeader, falls back to RowHeight if not specified. */
    height: number;
    /** If instantEdit is disabled, header will render Cancel and Apply buttons during edit mode. */
    instantEdit: boolean;
    /** Label to display in the top left side. */
    tableHeaderLabel?: string;
    /** Width of the header. */
    width: number;
    /** Callback for toggling editMode. */
    onEnableEditMode: () => void;
    /** Callback for toggling editMode. */
    onDisableEditMode: () => void;
    /** Applies edits if instantEdit is disabled. */
    onEnactEdits: () => void;
    /** Extra buttons to render in the header. */
    extraHeaderButtons?: HeaderButton[];
    /** Selected status of all rows, can by used by header buttons. */
    selectedRows: SelectedRows;
};
/** Header for the DataTable that displays a title and Table-level buttons. */
export declare function TableHeader({ cx, editable, editMode, extraHeaderButtons, height, instantEdit, onEnactEdits, onEnableEditMode, onDisableEditMode, selectedRows, styles, tableHeaderLabel, width, }: Props & WithStylesProps): JSX.Element;
declare const _default: import("aesthetic-react").StyledComponent<import("../../types").Theme, Props & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=TableHeader.d.ts.map