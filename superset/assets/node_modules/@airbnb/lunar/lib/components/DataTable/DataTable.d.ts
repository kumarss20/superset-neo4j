import React from 'react';
import { CellMeasurerCache, SortDirectionType } from 'react-virtualized';
import { ChangeLog, DataTableProps, DefaultDataTableProps, ExpandedRow, SelectedRows } from './types';
import { WithStylesProps } from '../../composers/withStyles';
export declare type State = {
    changeLog: ChangeLog;
    expandedRows: Set<number>;
    selectedRows: SelectedRows;
    sortBy: string;
    sortDirection: SortDirectionType;
    editMode: boolean;
};
/** A dynamic and responsive table for displaying tabular data. */
export declare class DataTable extends React.Component<DataTableProps & WithStylesProps, State> {
    static defaultProps: Pick<DataTableProps, DefaultDataTableProps>;
    state: State;
    constructor(props: DataTableProps & WithStylesProps);
    keys: string[];
    private getRowStyle;
    private getData;
    componentDidUpdate(prevProps: DataTableProps, prevState: State): void;
    private getTableHeight;
    private getColumnHeaderHeight;
    private shouldRenderTableHeader;
    private sort;
    private expandRow;
    private onEdit;
    private handleDisableEditMode;
    private handleEnactEdits;
    private handleEnableEditMode;
    private handleChildSelection;
    private handleParentSelection;
    private handleSelection;
    private handleRowClick;
    renderTableHeader(parentWidth: number): JSX.Element;
    rowGetter: (expandedDataList: ExpandedRow<import("./types").RowData>[]) => ({ index }: {
        index: number;
    }) => ExpandedRow<import("./types").RowData>;
    cache: CellMeasurerCache;
    render(): JSX.Element;
}
declare const _default: import("aesthetic-react").StyledComponent<import("../../types").Theme, DataTableProps & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=DataTable.d.ts.map