import React from 'react';
import { WithStylesProps } from '../../composers/withStyles';
import { ColumnLabelCase, ColumnMetadata, ColumnToLabel, HeightOptions, RowHeightOptions } from './types';
declare type ColumnLabelsProps = {
    className: string;
    columns: React.ReactNode[];
    style: React.CSSProperties;
};
/** See https://github.com/bvaughn/react-virtualized/blob/master/source/Table/defaultHeaderRowRenderer.js.
    In order to overwrite the existing labels and carets in defaultHeaderRowRenderer,
    we clone them from props (children[0] = label, children[1] = carets), build around their data. */
export default function ColumnLabels({ cx, styles, columnToLabel, showColumnDividers, rowHeight, columnHeaderHeight, expandable, selectable, columnMetadata, columnLabelCase, }: {
    cx: WithStylesProps['cx'];
    styles: WithStylesProps['styles'];
    columnToLabel?: ColumnToLabel;
    showColumnDividers?: boolean;
    rowHeight?: RowHeightOptions;
    columnHeaderHeight?: HeightOptions;
    expandable?: boolean;
    selectable?: boolean;
    columnMetadata?: ColumnMetadata;
    columnLabelCase?: ColumnLabelCase;
}): ({ className, columns, style }: ColumnLabelsProps) => JSX.Element;
export {};
//# sourceMappingURL=ColumnLabels.d.ts.map