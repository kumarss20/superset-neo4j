import React from 'react';
import { Props as FormFieldProps } from '../FormField';
import { Props as RadioButtonProps } from '../RadioButton';
export declare type PropsProvided = Partial<RadioButtonProps> & {
    label: NonNullable<React.ReactNode>;
    value: string;
};
export declare type Props = FormFieldProps & {
    /** Function children in which RadioButton components can be rendered. */
    children: (component: React.ComponentType<PropsProvided>, value: string, id: string) => void;
    /** Unique name of the field. */
    name: string;
    /** Callback that is triggered when a child RadioButton is clicked. */
    onChange: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;
    /** Default checked value. */
    value?: string;
};
export declare type State = {
    id: string;
    value: string;
};
/** Manage multiple radio buttons with the same input `name`. */
export default class RadioButtonController extends React.Component<Props, State> {
    static defaultProps: {
        value: string;
    };
    state: {
        id: string;
        value: string;
    };
    componentDidUpdate(prevProps: Props): void;
    private handleChange;
    renderRadioButton: React.ComponentType<RadioButtonProps>;
    render(): JSX.Element;
}
//# sourceMappingURL=index.d.ts.map