"use strict";

exports.__esModule = true;
exports.default = exports.Link = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _airbnbPropTypes = require("airbnb-prop-types");

var _withStyles = _interopRequireDefault(require("../../composers/withStyles"));

var _ButtonOrLink = _interopRequireDefault(require("../private/ButtonOrLink"));

var _Text = _interopRequireDefault(require("../Text"));

var _styles = require("./styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const sizingProp = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)('small', 'large');
const stateProp = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)('disabled', 'muted', 'inverted');

/** A standard link for... linking to things. */
class Link extends _react.default.Component {
  render() {
    const _this$props = this.props,
          {
      cx,
      block,
      baseline,
      children,
      disabled,
      inverted,
      large,
      muted,
      small,
      bold,
      styles
    } = _this$props,
          restProps = _objectWithoutPropertiesLoose(_this$props, ["cx", "block", "baseline", "children", "disabled", "inverted", "large", "muted", "small", "bold", "styles"]);

    return _react.default.createElement(_Text.default, {
      inline: !block,
      baseline: baseline,
      small: small,
      large: large,
      bold: bold
    }, _react.default.createElement(_ButtonOrLink.default, _extends({}, restProps, {
      disabled: disabled,
      className: cx(styles.link, inverted && styles.link_inverted, muted && styles.link_muted, disabled && styles.link_disabled, block && styles.link_block, baseline && styles.link_baseline)
    }), children));
  }

}

exports.Link = Link;

_defineProperty(Link, "propTypes", {
  bold: _propTypes.default.bool,
  baseline: _propTypes.default.bool,
  block: _propTypes.default.bool,
  disabled: stateProp,
  inverted: stateProp,
  large: sizingProp,
  muted: stateProp,
  small: sizingProp
});

_defineProperty(Link, "defaultProps", {
  baseline: false,
  block: false,
  bold: false,
  disabled: false,
  inverted: false,
  large: false,
  muted: false,
  small: false
});

var _default = (0, _withStyles.default)(_styles.styleSheet, {
  extendable: true
})(Link);

exports.default = _default;