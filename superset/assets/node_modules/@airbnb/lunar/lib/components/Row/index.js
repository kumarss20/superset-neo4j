"use strict";

exports.__esModule = true;
exports.default = Row;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useStyles = _interopRequireDefault(require("../../hooks/useStyles"));

var _styles = require("./styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** A presentational block element for displaying horizontal content in up to 3 columns. */
function Row(_ref) {
  let {
    after,
    baseline,
    before,
    children,
    compact,
    inline,
    maxHeight,
    middleAlign,
    minHeight,
    spacious,
    topline,
    truncated
  } = _ref;
  const [styles, cx] = (0, _useStyles.default)(_styles.styleSheet);
  return _react.default.createElement("div", {
    className: cx(styles.row, {
      maxHeight,
      minHeight
    }, compact && styles.row_compact, spacious && styles.row_spacious, middleAlign && styles.row_middleAlign, baseline && styles.row_baseline, topline && styles.row_topline)
  }, before && _react.default.createElement("div", {
    className: cx(styles.before, inline && styles.inline, (inline || compact) && styles.before_compact)
  }, before), _react.default.createElement("div", {
    className: cx(inline ? styles.inline : styles.primary, truncated && styles.primary_truncated)
  }, children), after && _react.default.createElement("div", {
    className: cx(styles.after, inline && styles.inline, (inline || compact) && styles.after_compact)
  }, after));
}

Row.propTypes = {
  after: _propTypes.default.node,
  baseline: _propTypes.default.bool,
  before: _propTypes.default.node,
  children: _propTypes.default.any.isRequired,
  compact: _propTypes.default.bool,
  inline: _propTypes.default.bool,
  maxHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  middleAlign: _propTypes.default.bool,
  minHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  spacious: _propTypes.default.bool,
  topline: _propTypes.default.bool,
  truncated: _propTypes.default.bool
};