import React from 'react';
import PropTypes from 'prop-types';
import { Props as BaseTextAreaProps } from '../private/BaseTextArea';
import { Props as FormFieldProps } from '../FormField';
import { Props as ProofreaderProps } from './Proofreader';
import { ExtraProofreadProps } from './Proofreader/types';
export declare type Props = Omit<BaseTextAreaProps, 'id'> & FormFieldProps & Partial<Pick<ProofreaderProps, 'locale' | 'onCheckText'>> & {
    /** Max characters allowed in this field. Will populate `labelDescription` with the current usage. */
    maxLength?: number;
    /** Add "notranslate" className to prevent Google Chrome translation. */
    noTranslate?: boolean;
    /** Enable proofreader to run spelling and grammar checks. */
    proofread?: boolean;
    /** Additional props that determine more proofreader functionality */
    proofreadProps?: ExtraProofreadProps;
};
export declare type State = {
    id: string;
};
/** A controlled textarea field. */
export default class TextArea extends React.Component<Props, State> {
    static propTypes: {
        onCheckText: PropTypes.Requireable<((...args: any[]) => any) | null | undefined>;
    };
    static defaultProps: {
        locale: string;
        noTranslate: boolean;
        proofread: boolean;
        proofreadProps: undefined;
    };
    state: {
        id: string;
    };
    render(): JSX.Element;
}
//# sourceMappingURL=index.d.ts.map