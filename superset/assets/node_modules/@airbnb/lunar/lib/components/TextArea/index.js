"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _v = _interopRequireDefault(require("uuid/v4"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _airbnbPropTypes = require("airbnb-prop-types");

var _BaseTextArea = _interopRequireDefault(require("../private/BaseTextArea"));

var _FormField = _interopRequireWildcard(require("../FormField"));

var _Translate = _interopRequireDefault(require("../Translate"));

var _Proofreader = _interopRequireDefault(require("./Proofreader"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/** A controlled textarea field. */
class TextArea extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      id: (0, _v.default)()
    });
  }

  render() {
    const {
      fieldProps,
      inputProps
    } = (0, _FormField.partitionFieldProps)(this.props);

    const {
      locale,
      name,
      proofread,
      proofreadProps,
      onCheckText
    } = inputProps,
          textareaProps = _objectWithoutPropertiesLoose(inputProps, ["locale", "name", "proofread", "proofreadProps", "onCheckText"]);

    const {
      id
    } = this.state;

    const description = fieldProps.labelDescription || inputProps.maxLength && _react.default.createElement(_Translate.default, {
      k: "lunar.form.charsUsed",
      phrase: "%{current}/%{max} characters used",
      current: inputProps.value.length.toLocaleString(),
      max: inputProps.maxLength.toLocaleString(),
      context: "Showing the current and max characters within a form textarea"
    });

    return _react.default.createElement(_FormField.default, _extends({}, fieldProps, {
      id: id,
      labelDescription: description
    }), proofread && onCheckText ? _react.default.createElement(_Proofreader.default, _extends({}, textareaProps, proofreadProps, {
      id: id,
      locale: locale,
      name: name,
      onCheckText: onCheckText
    })) : _react.default.createElement(_BaseTextArea.default, _extends({}, textareaProps, {
      id: id,
      name: name
    })));
  }

}

exports.default = TextArea;

_defineProperty(TextArea, "propTypes", {
  proofreadProps: _propTypes.default.any,
  proofread: _propTypes.default.bool,
  noTranslate: _propTypes.default.bool,
  maxLength: _propTypes.default.number,
  onCheckText: (0, _airbnbPropTypes.requiredBy)('proofread', _propTypes.default.func)
});

_defineProperty(TextArea, "defaultProps", {
  locale: 'none',
  noTranslate: false,
  proofread: false,
  proofreadProps: undefined
});