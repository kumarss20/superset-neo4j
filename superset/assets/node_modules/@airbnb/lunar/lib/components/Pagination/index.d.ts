/// <reference types="react" />
import PropTypes from 'prop-types';
export declare type Props = {
    /** Align arrows in the center */
    centerAlign?: boolean;
    /** Align arrows to the end */
    endAlign?: boolean;
    /** Show fetching state. */
    fetching?: boolean;
    /** Whether it has a next page. */
    hasNext?: boolean;
    /** Whether it has a previous page. */
    hasPrev?: boolean;
    /** Show the first and last page buttons. */
    showBookends?: boolean;
    /** Align arrows to the start */
    startAlign?: boolean;
    /** Current page number. */
    page: number;
    /** Content to label the pages. Default is "Page" */
    pageLabel?: string;
    /** Total page count. Required when `showBookends` is true. */
    pageCount?: number;
    /** Invoked when the first page button is pressed. */
    onFirst?: () => void;
    /** Invoked when the last page button is pressed. */
    onLast?: () => void;
    /** Invoked when the next page button is pressed. */
    onNext: () => void;
    /** Invoked when the previous page button is pressed. */
    onPrevious: () => void;
};
/** Pagination controls. */
declare function Pagination({ centerAlign, endAlign, fetching, hasNext, hasPrev, showBookends, startAlign, pageLabel, onFirst, onLast, onNext, onPrevious, page, pageCount, }: Props): JSX.Element | null;
declare namespace Pagination {
    var propTypes: {
        centerAlign: PropTypes.Requireable<boolean>;
        endAlign: PropTypes.Requireable<boolean>;
        pageCount: PropTypes.Requireable<number | null | undefined>;
        startAlign: PropTypes.Requireable<boolean>;
        onFirst: PropTypes.Requireable<((...args: any[]) => any) | null | undefined>;
        onLast: PropTypes.Requireable<((...args: any[]) => any) | null | undefined>;
    };
}
export default Pagination;
//# sourceMappingURL=index.d.ts.map