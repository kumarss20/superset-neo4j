import React from 'react';
export declare type IgnoreAttributes = 'children' | 'dangerouslySetInnerHTML' | 'onChange' | 'value' | 'about' | 'datatype' | 'inlist' | 'prefix' | 'property' | 'resource' | 'typeof' | 'vocab' | 'color' | 'css' | 'inputMode' | 'is' | 'radioGroup' | 'results' | 'security';
export declare type Props<T = unknown> = {
    /** @deprecated decrease font size and padding to small. */
    compact?: boolean;
    /** Mark the field as important. */
    important?: boolean;
    /** Mark the field as invalid. */
    invalid?: boolean;
    /** Increase font size and padding to large. */
    large?: boolean;
    /** Add "notranslate" className to prevent Google Chrome translation. */
    noTranslate?: boolean;
    /** Mark the field as optional. */
    optional?: boolean;
    /** Reference to access the underlying input DOM element. */
    propagateRef?: React.Ref<T>;
    /** Decrease font size and padding to small. */
    small?: boolean;
    /** Current value. */
    value?: string;
};
export declare type InputProps = Omit<React.InputHTMLAttributes<HTMLInputElement>, IgnoreAttributes> & Props<HTMLInputElement>;
export declare type SelectProps = Omit<React.SelectHTMLAttributes<HTMLSelectElement>, IgnoreAttributes> & Props<HTMLSelectElement>;
export declare type TextAreaProps = Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, IgnoreAttributes> & Props<HTMLTextAreaElement>;
export declare type PrivateProps = Props & {
    [key: string]: unknown;
    /** @ignore */
    children?: React.ReactNode;
    /** @ignore */
    hasPrefix?: boolean;
    /** @ignore */
    hasSuffix?: boolean;
    /** @ignore */
    tagName: 'input' | 'select' | 'textarea';
};
declare function FormInput({ children, compact, disabled, hasPrefix, hasSuffix, hidden, id, important, invalid, large, noTranslate, optional, propagateRef, small, tagName: Tag, ...restProps }: PrivateProps): JSX.Element;
declare namespace FormInput {
    var propTypes: {
        compact: import("prop-types").Requireable<boolean>;
        large: import("prop-types").Requireable<boolean>;
        small: import("prop-types").Requireable<boolean>;
    };
}
export default FormInput;
//# sourceMappingURL=FormInput.d.ts.map