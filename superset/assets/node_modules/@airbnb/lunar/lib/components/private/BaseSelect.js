"use strict";

exports.__esModule = true;
exports.default = BaseSelect;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _IconCaretDown = _interopRequireDefault(require("@airbnb/lunar-icons/lib/interface/IconCaretDown"));

var _useStyles = _interopRequireDefault(require("../../hooks/useStyles"));

var _FormInput = _interopRequireDefault(require("./FormInput"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const styleSheet = (_ref) => {
  let {
    pattern,
    unit
  } = _ref;
  return {
    select: {
      position: 'relative',
      display: 'block',
      width: '100%'
    },
    arrow: {
      position: 'absolute',
      right: unit,
      top: '50%',
      transform: 'translateY(-50%)',
      pointerEvents: 'none',
      zIndex: 1
    },
    arrow_disabled: _extends({}, pattern.disabled),
    arrow_invalid: _extends({}, pattern.invalid),
    arrow_compact: {
      right: unit * 0.75
    }
  };
};

function BaseSelect(_ref2) {
  let {
    children,
    placeholder = '',
    onChange
  } = _ref2,
      restProps = _objectWithoutPropertiesLoose(_ref2, ["children", "placeholder", "onChange"]);

  const [styles, cx] = (0, _useStyles.default)(styleSheet);

  const handleChange = event => {
    onChange(event.currentTarget.value, event);
  };

  return _react.default.createElement("div", {
    className: cx(styles.select)
  }, _react.default.createElement(_FormInput.default, _extends({}, restProps, {
    tagName: "select",
    onChange: handleChange
  }), placeholder && _react.default.createElement("option", {
    disabled: true,
    value: ""
  }, placeholder), children), _react.default.createElement("span", {
    className: cx(styles.arrow, restProps.disabled && styles.arrow_disabled, restProps.invalid && styles.arrow_invalid, restProps.compact && styles.arrow_compact)
  }, _react.default.createElement(_IconCaretDown.default, {
    decorative: true,
    size: "2em"
  })));
}

BaseSelect.propTypes = {
  children: _propTypes.default.any.isRequired,
  placeholder: _propTypes.default.string,
  onChange: _propTypes.default.func.isRequired
};