import React from 'react';
import PropTypes from 'prop-types';
export declare type Props = {
    /** Content to display following the primary content. Takes priority over `afterImageSrc`. */
    after?: React.ReactNode;
    /** Right image URL. */
    afterImageSrc?: string;
    /** Content to display before the primary content. Takes priority over `beforeImageSrc`. */
    before?: React.ReactNode;
    /** Left image URL. */
    beforeImageSrc?: string;
    /** Content to display. */
    children: NonNullable<React.ReactNode>;
    /** Decrease padding. */
    compact?: boolean;
    /** Whether the image content is large. */
    large?: boolean;
    /** Max height of content. */
    maxHeight?: number | string;
    /** Align contents in the middle vertically. */
    middleAlign?: boolean;
    /** Min height of content. */
    minHeight?: number | string;
    /** Whether the image content is small. */
    small?: boolean;
    /** Top image URL. */
    topImageSrc?: string;
    /** To use with text truncation; overflow is hidden. */
    truncated?: boolean;
    /** If provided, makes the entire content clickable, firing this callback. */
    onClick?: () => void;
};
/** Content block within a card. */
declare function CardContent({ after, afterImageSrc, before, beforeImageSrc, children, compact, large, maxHeight, middleAlign, minHeight, onClick, small, topImageSrc, truncated, }: Props): JSX.Element;
declare namespace CardContent {
    var propTypes: {
        after: PropTypes.Requireable<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
        afterImageSrc: PropTypes.Requireable<string>;
        before: PropTypes.Requireable<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
        beforeImageSrc: PropTypes.Requireable<string>;
        large: PropTypes.Requireable<boolean>;
        small: PropTypes.Requireable<boolean>;
        topImageSrc: PropTypes.Requireable<string>;
    };
}
export default CardContent;
//# sourceMappingURL=Content.d.ts.map