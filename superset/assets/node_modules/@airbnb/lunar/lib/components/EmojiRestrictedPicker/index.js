"use strict";

exports.__esModule = true;
exports.default = EmojiRestrictedPicker;

var _react = _interopRequireDefault(require("react"));

var _EmojiPicker = _interopRequireDefault(require("../EmojiPicker"));

var _constants = require("../../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * Display an emoji picker that utilizes a restricted whitelist of acceptable emojis.
 */
function EmojiRestrictedPicker(props) {
  return _react.default.createElement(_EmojiPicker.default, _extends({
    disableCommonlyUsed: true,
    disableGroups: true,
    disableSearch: true,
    disableSkinTones: true,
    hideEmoticon: true,
    hideGroupHeaders: true,
    hideShortcodes: true,
    emojiLargeSize: 36
  }, props, {
    rowCount: 2,
    stickyGroupHeader: false,
    allowList: _constants.EMOJI_WHITELIST
  }));
}