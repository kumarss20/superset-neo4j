"use strict";

exports.__esModule = true;
exports.default = exports.Tabs = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _withBoundary = _interopRequireDefault(require("../../composers/withBoundary"));

var _withStyles = _interopRequireDefault(require("../../composers/withStyles"));

var _GradientScroller = _interopRequireDefault(require("../GradientScroller"));

var _Tab = _interopRequireDefault(require("./Tab"));

exports.Tab = _Tab.default;

var _styles = require("./styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/** A controller for multiple tabs. */
class Tabs extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      selectedKey: this.getDefaultSelectedKey()
    });

    _defineProperty(this, "handlePopstate", () => {
      const {
        persistWithHash
      } = this.props;

      if (persistWithHash) {
        const query = this.getHashQuery();

        if (query.has(persistWithHash)) {
          this.setState({
            selectedKey: query.get(persistWithHash)
          });
        }
      }
    });

    _defineProperty(this, "handleClick", key => {
      const {
        persistWithHash
      } = this.props;
      this.setState({
        selectedKey: key
      });
      this.props.onChange(key);

      if (persistWithHash) {
        const query = this.getHashQuery();
        query.set(persistWithHash, key);
        history.pushState(null, '', "#" + String(query));
      }
    });
  }

  componentDidMount() {
    if (this.props.persistWithHash) {
      window.addEventListener('popstate', this.handlePopstate);
    }
  }

  componentWillUnmount() {
    if (this.props.persistWithHash) {
      window.removeEventListener('popstate', this.handlePopstate);
    }
  }

  componentDidUpdate(prevProps) {
    if (this.props.defaultKey !== prevProps.defaultKey) {
      this.setState({
        selectedKey: this.props.defaultKey
      });
    }
  }

  getDefaultSelectedKey() {
    const {
      defaultKey,
      persistWithHash
    } = this.props;
    return persistWithHash && this.getHashQuery().get(persistWithHash) || defaultKey || '';
  }

  getHashQuery() {
    const {
      hash
    } = location;
    return new URLSearchParams(hash.length > 1 ? hash.slice(1) : '');
  }

  render() {
    const {
      cx,
      borderless,
      children,
      secondary,
      scrollable,
      stretched,
      styles
    } = this.props;
    const {
      selectedKey
    } = this.state;
    const noBorder = borderless || secondary; // Generate content

    let content = null;

    const nav = _react.default.createElement("nav", {
      role: "tablist",
      className: cx(styles.nav, noBorder && styles.nav_noBorder, secondary && styles.nav_secondary)
    }, _react.default.Children.map(children, (child, i) => {
      if (!child) {
        return null;
      }

      const {
        key,
        props
      } = child;
      const selected = key === selectedKey || !selectedKey && i === 0;

      if ("production" !== process.env.NODE_ENV && !key) {
        throw new Error('Tab components require a unique `key`.');
      }

      if (selected && props && props.children) {
        content = props.children;
      }

      return _react.default.cloneElement(child, {
        borderless,
        keyName: String(key),
        secondary,
        selected,
        stretched,
        onClick: this.handleClick
      });
    }));

    return _react.default.createElement("div", null, scrollable ? _react.default.createElement(_GradientScroller.default, {
      hideScrollbar: true,
      showArrows: true
    }, nav) : nav, content && _react.default.createElement("section", {
      role: "tabpanel",
      className: cx(styles.panel)
    }, content));
  }

}

exports.Tabs = Tabs;

_defineProperty(Tabs, "propTypes", {
  borderless: _propTypes.default.bool,
  children: _propTypes.default.any.isRequired,
  defaultKey: _propTypes.default.string,
  onChange: _propTypes.default.func,
  persistWithHash: _propTypes.default.string,
  secondary: _propTypes.default.bool,
  scrollable: _propTypes.default.bool,
  stretched: _propTypes.default.bool,
  trackingName: _propTypes.default.string
});

_defineProperty(Tabs, "defaultProps", {
  borderless: false,
  defaultKey: '',

  onChange() {},

  persistWithHash: '',
  scrollable: false,
  secondary: false,
  stretched: false
});

var _default = (0, _withBoundary.default)('Tabs')((0, _withStyles.default)(_styles.styleSheet)(Tabs));

exports.default = _default;