import React from 'react';
import { WithStylesProps } from '../../composers/withStyles';
import { Props as ButtonOrLinkProps } from '../private/ButtonOrLink';
export declare type Props = Pick<ButtonOrLinkProps, 'afterIcon' | 'beforeIcon' | 'disabled' | 'href'> & {
    /** Hide bottom border of Tab when unselected. */
    borderless?: boolean;
    /** Content to render if the tab is selected. */
    children?: React.ReactNode;
    /**
     * Unique key name for this tab.
     * @ignore
     */
    keyName?: string;
    /** Text to render in the tab. */
    label: NonNullable<React.ReactNode>;
    /** Callback fired when the tab is clicked. */
    onClick?: (key: string) => void;
    /** Callback fired when the tab is selected. */
    onSelected?: () => void;
    /** Secondary tab style, implies borderless. */
    secondary?: boolean;
    /** Whether the tab is selected or not. */
    selected?: boolean;
    /** Decrease font size to small. */
    small?: boolean;
    /** Stretch tabs to fill the full width. */
    stretched?: boolean;
};
/** A single tab button. Usually rendered amongst a collection of tabs. */
export declare class Tab extends React.Component<Props & WithStylesProps> {
    static defaultProps: {
        borderless: boolean;
        children: null;
        secondary: boolean;
        selected: boolean;
        small: boolean;
        stretched: boolean;
    };
    componentDidUpdate(prevProps: Props): void;
    private handleClick;
    render(): JSX.Element;
}
declare const _default: import("aesthetic-react").StyledComponent<import("../../types").Theme, Pick<ButtonOrLinkProps, "disabled" | "href" | "afterIcon" | "beforeIcon"> & {
    /** Hide bottom border of Tab when unselected. */
    borderless?: boolean | undefined;
    /** Content to render if the tab is selected. */
    children?: React.ReactNode;
    /**
     * Unique key name for this tab.
     * @ignore
     */
    keyName?: string | undefined;
    /** Text to render in the tab. */
    label: string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal;
    /** Callback fired when the tab is clicked. */
    onClick?: ((key: string) => void) | undefined;
    /** Callback fired when the tab is selected. */
    onSelected?: (() => void) | undefined;
    /** Secondary tab style, implies borderless. */
    secondary?: boolean | undefined;
    /** Whether the tab is selected or not. */
    selected?: boolean | undefined;
    /** Decrease font size to small. */
    small?: boolean | undefined;
    /** Stretch tabs to fill the full width. */
    stretched?: boolean | undefined;
} & import("aesthetic-react").WithStylesWrapperProps>;
export default _default;
//# sourceMappingURL=Tab.d.ts.map