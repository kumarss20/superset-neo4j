"use strict";

exports.__esModule = true;
exports.default = DirectionalIcon;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _aestheticReact = require("aesthetic-react");

var _ = _interopRequireDefault(require("../.."));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function DirectionalIcon(_ref) {
  let {
    direction,
    left: LeftIcon,
    right: RightIcon
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["direction", "left", "right"]);

  const context = (0, _react.useContext)(_aestheticReact.DirectionContext);

  const rtl = _.default.isRTL(context);

  if (direction === 'left') {
    return rtl ? _react.default.createElement(RightIcon, props) : _react.default.createElement(LeftIcon, props);
  }

  return rtl ? _react.default.createElement(LeftIcon, props) : _react.default.createElement(RightIcon, props);
}

DirectionalIcon.propTypes = {
  direction: _propTypes.default.oneOf(['left', 'right']).isRequired,
  left: _propTypes.default.elementType.isRequired,
  right: _propTypes.default.elementType.isRequired
};