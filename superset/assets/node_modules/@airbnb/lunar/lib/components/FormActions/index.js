"use strict";

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Translate = _interopRequireDefault(require("../Translate"));

var _Button = _interopRequireDefault(require("../Button"));

var _DangerButton = _interopRequireDefault(require("../DangerButton"));

var _MutedButton = _interopRequireDefault(require("../MutedButton"));

var _ButtonGroup = _interopRequireDefault(require("../ButtonGroup"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/** A pair of action buttons to display at the bottom of a form. */
class FormActions extends _react.default.PureComponent {
  render() {
    const {
      cancelText,
      continueText,
      danger,
      disabled,
      hideCancel,
      onCancel,
      onContinue,
      processing,
      processingText,
      resetText,
      showReset,
      small
    } = this.props;
    const Button = danger ? _DangerButton.default : _Button.default;
    return _react.default.createElement(_ButtonGroup.default, null, _react.default.createElement(Button, {
      type: "submit",
      disabled: disabled,
      loading: processing,
      small: small,
      onClick: onContinue
    }, processing ? processingText || _react.default.createElement(_Translate.default, {
      k: "lunar.common.saving",
      phrase: "Saving",
      context: "Button label when a form is submitting"
    }) : continueText || _react.default.createElement(_Translate.default, {
      k: "lunar.common.save",
      phrase: "Save",
      context: "Button label to submit a form"
    })), !hideCancel && _react.default.createElement(_MutedButton.default, {
      inverted: true,
      small: small,
      disabled: processing,
      onClick: onCancel
    }, cancelText || _react.default.createElement(_Translate.default, {
      k: "lunar.common.cancel",
      phrase: "Cancel",
      context: "Button label to cancel a form action"
    })), showReset && _react.default.createElement(_MutedButton.default, {
      inverted: true,
      type: "reset",
      small: small,
      disabled: processing
    }, resetText || _react.default.createElement(_Translate.default, {
      k: "lunar.common.reset",
      phrase: "Reset",
      context: "Button label to reset a form"
    })));
  }

}

exports.default = FormActions;

_defineProperty(FormActions, "propTypes", {
  cancelText: _propTypes.default.node,
  continueText: _propTypes.default.node,
  danger: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  hideCancel: _propTypes.default.bool,
  onCancel: _propTypes.default.func,
  onContinue: _propTypes.default.func,
  processing: _propTypes.default.bool,
  processingText: _propTypes.default.node,
  resetText: _propTypes.default.node,
  showReset: _propTypes.default.bool,
  small: _propTypes.default.bool
});

_defineProperty(FormActions, "defaultProps", {
  cancelText: null,
  continueText: null,
  danger: false,
  disabled: false,
  hideCancel: false,
  processing: false,
  processingText: null,
  resetText: null,
  showReset: false,
  small: false
});