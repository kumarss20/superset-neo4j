"use strict";

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _componentName = _interopRequireDefault(require("../../prop-types/componentName"));

var _Loadable = _interopRequireDefault(require("../Loadable"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/** Wraps a component and catches errors thrown within its React tree. */
class ErrorBoundary extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      error: null
    });
  }

  componentDidCatch(error, errorInfo) {
    this.props.onCatch(error, _extends({}, errorInfo, {
      name: this.props.name,
      boundary: true
    }));
    this.setState({
      error
    });
  }

  render() {
    const {
      error
    } = this.state;

    if (!error) {
      return this.props.children;
    } // NOTE: This component is generally not hit in production so we'll code split to keep some code
    // out of bundles in the optimistic case.


    return _react.default.createElement(_Loadable.default, {
      component:
      /* istanbul ignore next */
      () => Promise.resolve().then(() => _interopRequireWildcard(require('./private/Tripped')))
    });
  }

}

exports.default = ErrorBoundary;

_defineProperty(ErrorBoundary, "propTypes", {
  onCatch: _propTypes.default.any.isRequired,
  children: _propTypes.default.any.isRequired,
  name: _componentName.default
});

_defineProperty(ErrorBoundary, "defaultProps", {
  name: 'UnknownBoundary'
});