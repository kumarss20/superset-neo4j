import React from 'react';
import { Props as FormFieldProps } from '../FormField';
import { Props as ButtonProps } from '../Button';
import ButtonGroup from '../ButtonGroup';
export { ButtonGroup };
export declare type PropsProvided = Partial<ButtonProps> & {
    children: NonNullable<React.ReactNode>;
    value: string;
};
export declare type Props = FormFieldProps & {
    /** Function children in which Button components can be rendered. */
    children: (component: React.ComponentType<PropsProvided>, value: string, id: string) => void;
    /** Unique name of the field. */
    name: string;
    /** Callback that is triggered when a child Button is clicked. */
    onChange: (value: string, event: React.MouseEvent<HTMLButtonElement>) => void;
    /** Default value. */
    value?: string;
};
export declare type State = {
    id: string;
    value: string;
};
/** Manage a group of buttons with the same input `name`. */
export default class ToggleButtonController extends React.Component<Props, State> {
    static defaultProps: {
        value: string;
    };
    state: {
        id: string;
        value: string;
    };
    componentDidUpdate(prevProps: Props): void;
    private handleClick;
    renderButton: React.ComponentType<any>;
    render(): JSX.Element;
}
//# sourceMappingURL=index.d.ts.map