"use strict";

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _airbnbPropTypes = require("airbnb-prop-types");

var _useStyles = _interopRequireDefault(require("../../hooks/useStyles"));

var _iconComponent = _interopRequireDefault(require("../../prop-types/iconComponent"));

var _IconAffix = _interopRequireDefault(require("../private/IconAffix"));

var _constants = require("../../constants");

var _styles = require("./styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Classify content through the use of tiny colorful status labels. */
function StatusLabel(_ref) {
  let {
    afterIcon,
    beforeIcon,
    bordered,
    children,
    compact,
    danger,
    info,
    inverted,
    luxury,
    muted,
    notice,
    plus,
    success,
    uppercased,
    warning
  } = _ref;
  const [styles, cx] = (0, _useStyles.default)(_styles.styleSheet);
  return _react.default.createElement("span", {
    className: cx(styles.label, uppercased && styles.label_uppercased, inverted && styles.label_inverted, bordered && styles.label_bordered, compact && styles.label_compact, danger && (inverted ? styles.label_inverted_danger : styles.label_danger), info && (inverted ? styles.label_inverted_info : styles.label_info), muted && (inverted ? styles.label_inverted_muted : styles.label_muted), notice && (inverted ? styles.label_inverted_notice : styles.label_notice), success && (inverted ? styles.label_inverted_success : styles.label_success), warning && (inverted ? styles.label_inverted_warning : styles.label_warning), luxury && (inverted ? styles.label_inverted_luxury : styles.label_luxury), plus && (inverted ? styles.label_inverted_plus : styles.label_plus))
  }, beforeIcon && _react.default.createElement(_IconAffix.default, {
    before: true
  }, beforeIcon), _react.default.createElement("span", null, children), afterIcon && _react.default.createElement(_IconAffix.default, {
    after: true
  }, afterIcon));
}

const statusPropType = (0, _airbnbPropTypes.mutuallyExclusiveTrueProps)(..._constants.STATUSES, ..._constants.BRANDS);
StatusLabel.propTypes = {
  uppercased: _propTypes.default.bool,
  inverted: _propTypes.default.bool,
  compact: _propTypes.default.bool,
  children: _propTypes.default.any.isRequired,
  bordered: _propTypes.default.bool,
  afterIcon: _iconComponent.default,
  beforeIcon: _iconComponent.default,
  danger: statusPropType,
  info: statusPropType,
  luxury: statusPropType,
  muted: statusPropType,
  notice: statusPropType,
  plus: statusPropType,
  success: statusPropType,
  warning: statusPropType
};
var _default = StatusLabel;
exports.default = _default;