"use strict";

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _ErrorMessage = _interopRequireDefault(require("../ErrorMessage"));

var _Loader = _interopRequireDefault(require("../Loader"));

var _renderElementOrFunction = _interopRequireDefault(require("../../utils/renderElementOrFunction"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * A declarative component for async loading of other components via native `import()` and `React.lazy`.
 * @experimental Requires React.lazy
 */
class Loadable extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      error: null,
      showLoading: this.props.delay <= 0
    });

    _defineProperty(this, "renderComponent", () => {
      const _this$props = this.props,
            {
        children,
        component
      } = _this$props,
            restProps = _objectWithoutPropertiesLoose(_this$props, ["children", "component", "delay", "error", "loading", "noError", "noLoading"]);

      const Component = _react.default.lazy(component);

      if (typeof children === 'function') {
        // @ts-ignore Bug: https://github.com/Microsoft/TypeScript/issues/26970
        return children(Component, restProps);
      } // @ts-ignore Props spreading


      return _react.default.createElement(Component, restProps, children);
    });

    _defineProperty(this, "renderError", () => {
      const {
        error
      } = this.state;
      const {
        error: renderable,
        noError
      } = this.props;

      if (!error || noError) {
        return null;
      }

      return (0, _renderElementOrFunction.default)(renderable, error) || _react.default.createElement(_ErrorMessage.default, {
        error: error
      });
    });
  }

  static factory(component, initialProps) {
    if (initialProps === void 0) {
      initialProps = {};
    }

    return function LoadableFactory(props) {
      return _react.default.createElement(Loadable, _extends({}, initialProps, props, {
        component: component
      }));
    };
  } // istanbul ignore next


  componentDidCatch(error) {
    this.setState({
      error
    });
  }

  componentDidMount() {
    const {
      delay
    } = this.props;

    if (delay && delay > 0) {
      window.setTimeout(() => {
        this.setState({
          showLoading: true
        });
      }, delay);
    }
  }

  renderLoading() {
    const {
      loading,
      noLoading
    } = this.props;

    if (!this.state.showLoading || noLoading) {
      return null;
    }

    return (0, _renderElementOrFunction.default)(loading) || _react.default.createElement(_Loader.default, {
      static: true
    });
  }

  render() {
    if (this.state.error) {
      return this.renderError();
    }

    return _react.default.createElement(_react.default.Suspense, {
      fallback: this.renderLoading()
    }, this.renderComponent());
  }

}

exports.default = Loadable;

_defineProperty(Loadable, "propTypes", {
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  component: _propTypes.default.func.isRequired,
  delay: _propTypes.default.number,
  error: _propTypes.default.any,
  loading: _propTypes.default.any,
  noError: _propTypes.default.bool,
  noLoading: _propTypes.default.bool
});

_defineProperty(Loadable, "defaultProps", {
  delay: 150,
  error: null,
  loading: null,
  noError: false,
  noLoading: false
});