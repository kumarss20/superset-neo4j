/// <reference types="react" />
import { Direction, FontFace } from 'aesthetic';
import AphroditeAesthetic from 'aesthetic-adapter-aphrodite';
import { Path as EmojiPath } from 'interweave-emoji';
import { Locale, TimeZone, Logger, Translator, TranslateParams, TranslateProps, Theme, TranslateOptions } from './types';
export declare type Settings = {
    defaultLocale?: Locale;
    defaultTimezone?: TimeZone;
    emojiCDN?: EmojiPath;
    errorURL?: string;
    fontFaces?: {
        [fontFamily: string]: FontFace[];
    };
    fontFamily?: string;
    logger?: Logger | null;
    name: string;
    rtl?: boolean;
    theme?: 'light' | 'dark';
    translator?: Translator | null;
    translatorComponent?: React.ComponentType<TranslateProps> | null;
};
declare class Core {
    settings: Required<Settings>;
    readonly aesthetic: AphroditeAesthetic<Theme>;
    initialize(settings: Settings): void;
    bootstrapAesthetic(): void;
    bootstrapLuxon(): void;
    fontFamily(): string;
    isRTL(context?: Direction): boolean;
    locale(): Locale;
    log: (error: Error, extra: object) => void;
    timezone(): TimeZone;
    translate: (phrase: string, baseParams?: TranslateParams | null | undefined, options?: string | TranslateOptions | undefined) => string;
}
declare const instance: Core;
export default instance;
//# sourceMappingURL=index.d.ts.map