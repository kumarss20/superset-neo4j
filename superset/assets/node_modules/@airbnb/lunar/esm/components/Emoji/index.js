function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Emoji as BaseEmoji, useEmojiData } from 'interweave-emoji';
import Core from '../..';

/**
 * Display an emoji character using [interweave-emoji](https://github.com/milesj/interweave/tree/master/packages/interweave-emoji).
 */
export default function Emoji(props) {
  const [, emojiSource] = useEmojiData({
    avoidFetch: process.env.NODE_ENV === 'test',
    throwErrors: false
  });
  return React.createElement(BaseEmoji, _extends({
    emojiSize: "1.25em",
    emojiLargeSize: "1.25em"
  }, props, {
    emojiPath: Core.settings.emojiCDN,
    emojiSource: emojiSource
  }));
}