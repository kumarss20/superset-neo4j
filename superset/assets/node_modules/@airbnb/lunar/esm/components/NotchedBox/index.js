import _pt from "prop-types";
import React from 'react';
import useStyles from '../../hooks/useStyles';
import { styleSheet, createPosition, NOTCH_SIZE, NOTCH_SPACING } from './styles';
export { NOTCH_SIZE, NOTCH_SPACING };

/** A container with a configurable arrow pointing outward. */
export default function NotchedBox(_ref) {
  let {
    inverted,
    children,
    inline,
    notchBelow,
    notchOffset
  } = _ref;
  const [styles, cx] = useStyles(styleSheet);
  return React.createElement("div", {
    className: cx(styles.box, !inverted && styles.border, inline && styles.box_inline)
  }, React.createElement("div", {
    className: cx(styles.notch, notchOffset ? createPosition(notchOffset) : styles.notch_position, notchBelow && styles.notch_below, inverted ? styles.inverted : styles.border)
  }), React.createElement("div", {
    className: cx(styles.content, inverted && styles.inverted)
  }, children));
}
NotchedBox.propTypes = {
  children: _pt.any.isRequired,
  inline: _pt.bool,
  inverted: _pt.bool,
  notchBelow: _pt.bool,
  notchOffset: _pt.oneOfType([_pt.number, _pt.string])
};