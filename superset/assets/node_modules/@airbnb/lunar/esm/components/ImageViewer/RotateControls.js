import _pt from "prop-types";
import React, { useCallback } from 'react';
import IconRotateLeft from '@airbnb/lunar-icons/lib/interface/IconRotateLeft';
import IconRotateRight from '@airbnb/lunar-icons/lib/interface/IconRotateRight';
import IconButton from '../IconButton';
import ButtonGroup from '../ButtonGroup';
import T from '../Translate';

/** Rotate controls that can be used with an image viewer component */
export default function RotateControls(props) {
  const {
    onRotation,
    rotation = 0
  } = props;
  const handleRotateLeft = useCallback(() => onRotation(rotation - 90 < 0 ? 270 : rotation - 90), [onRotation, rotation]);
  const handleRotateRight = useCallback(() => onRotation((rotation + 90) % 360), [onRotation, rotation]);
  return React.createElement(ButtonGroup, null, React.createElement(IconButton, {
    onClick: handleRotateLeft
  }, React.createElement(IconRotateLeft, {
    accessibilityLabel: T.phrase('Rotate counter clockwise', null, 'Label for button that rotates an image counter clockwise'),
    size: "2em"
  })), React.createElement(IconButton, {
    onClick: handleRotateRight
  }, React.createElement(IconRotateRight, {
    accessibilityLabel: T.phrase('Rotate clockwise', null, 'Label for button that rotates an image clockwise'),
    size: "2em"
  })));
}
RotateControls.propTypes = {
  rotation: _pt.number,
  onRotation: _pt.func.isRequired
};