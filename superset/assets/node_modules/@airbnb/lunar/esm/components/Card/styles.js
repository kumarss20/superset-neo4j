function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

export const styleSheet = (_ref) => {
  let {
    color,
    pattern
  } = _ref;
  return {
    card: _extends({}, pattern.box, {
      background: color.accent.bg,
      overflow: 'hidden'
    }),
    card_overflow: {
      overflow: 'visible'
    }
  };
};
export const styleSheetContent = (_ref2) => {
  let {
    color,
    pattern,
    ui,
    unit
  } = _ref2;
  return {
    container: {
      borderBottom: ui.border,
      ':last-child': {
        borderBottom: 0
      }
    },
    container_button: _extends({}, pattern.resetButton, {
      borderBottom: ui.border,
      display: 'block',
      textAlign: 'left',
      width: '100%',
      '@selectors': {
        ':hover, :focus': {
          backgroundColor: color.accent.bgHover,
          outline: 'none'
        }
      }
    }),
    side: {
      display: 'flex',
      alignItems: 'center',
      height: '100%',
      paddingTop: unit * 3,
      paddingBottom: unit * 3
    },
    side_compact: {
      paddingTop: unit * 1.5,
      paddingBottom: unit * 1.5
    },
    after: {
      paddingRight: unit * 3
    },
    after_compact: {
      paddingRight: unit * 1.5
    },
    before: {
      paddingLeft: unit * 3
    },
    before_compact: {
      paddingLeft: unit * 1.5
    },
    image: {
      display: 'block',
      objectFit: 'cover'
    },
    topImage: {
      height: 105
    },
    topImage_large: {
      height: 195
    }
  };
};