function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const styleSheet = (_ref) => {
  let {
    color,
    pattern,
    transition
  } = _ref;
  return {
    link: _extends({}, pattern.resetButton, {}, transition.box, {
      color: color.core.primary[3],
      textAlign: 'left',
      verticalAlign: 'baseline',
      ':active': {
        outline: 'none'
      },
      ':hover': {
        color: color.core.primary[4],
        textDecoration: 'underline'
      }
    }),
    link_block: {
      display: 'block',
      width: '100%'
    },
    link_baseline: {
      display: 'inline'
    },
    link_inverted: {
      color: color.accent.bg,
      ':hover': {
        color: color.accent.bgHover
      }
    },
    link_muted: {
      color: color.core.neutral[3],
      ':hover': {
        color: color.core.neutral[4]
      }
    },
    link_disabled: _extends({}, pattern.disabled, {
      ':hover': {
        textDecoration: 'none'
      }
    })
  };
};

export default styleSheet;
export { styleSheet };