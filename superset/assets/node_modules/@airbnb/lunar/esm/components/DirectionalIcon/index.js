import _pt from "prop-types";

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { useContext } from 'react';
import { DirectionContext } from 'aesthetic-react';
import Core from '../..';
export default function DirectionalIcon(_ref) {
  let {
    direction,
    left: LeftIcon,
    right: RightIcon
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["direction", "left", "right"]);

  const context = useContext(DirectionContext);
  const rtl = Core.isRTL(context);

  if (direction === 'left') {
    return rtl ? React.createElement(RightIcon, props) : React.createElement(LeftIcon, props);
  }

  return rtl ? React.createElement(LeftIcon, props) : React.createElement(RightIcon, props);
}
DirectionalIcon.propTypes = {
  direction: _pt.oneOf(['left', 'right']).isRequired,
  left: _pt.elementType.isRequired,
  right: _pt.elementType.isRequired
};