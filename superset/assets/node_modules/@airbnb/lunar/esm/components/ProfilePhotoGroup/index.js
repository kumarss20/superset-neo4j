import _pt from "prop-types";
import React from 'react';
import useStyles from '../../hooks/useStyles';
import useTheme from '../../hooks/useTheme';
import { styleSheet } from './styles';

/** Horizontally align `ProfilePhoto`s in a stacked fashion. */
export default function ProfilePhotoGroup(_ref) {
  let {
    children,
    max = 3,
    size = 5
  } = _ref;
  const [styles, cx] = useStyles(styleSheet);
  const {
    unit
  } = useTheme();
  const margin = {
    marginLeft: -(size * (unit / 2.5))
  };
  let photos = React.Children.toArray(children).filter(child => !!child);
  let remainder = 0;

  if (max && photos.length > max) {
    remainder = photos.length - max;
    photos = photos.slice(0, max);
  }

  return React.createElement("div", {
    className: cx(styles.group)
  }, photos.map((photo, i) => React.createElement("div", {
    key: i,
    className: cx(styles.cell, margin)
  }, React.cloneElement(photo, {
    size,
    inline: false,
    square: false
  }))), remainder > 0 && React.createElement("div", {
    key: "remainder",
    className: cx(styles.cell, margin)
  }, React.createElement("div", {
    className: cx(styles.remainder, {
      height: size * unit,
      maxHeight: size * unit,
      maxWidth: size * unit,
      width: size * unit
    })
  }, React.createElement("span", {
    className: cx(styles.remainderNumber)
  }, "+" + remainder))));
}
ProfilePhotoGroup.propTypes = {
  children: _pt.any.isRequired,
  max: _pt.number,
  size: _pt.number
};