import _pt from "prop-types";
import React from 'react';
import useStyles from '../../hooks/useStyles';
import { styleSheet, cleanClassName } from './styles';

/** Common component for arbitray layout structure and spacing. */
export default function Spacing(_ref) {
  let {
    all = 0,
    bottom = 0,
    children,
    horizontal = 0,
    inline,
    inner,
    left = 0,
    right = 0,
    tag: TagProp = 'div',
    top = 0,
    vertical = 0
  } = _ref;
  const [styles, cx] = useStyles(styleSheet);
  const type = inner ? 'inner' : 'outer';
  const classes = [];

  if (all) {
    const cleaned = cleanClassName(all);
    classes.push(styles[type + "Top_" + cleaned], styles[type + "Right_" + cleaned], styles[type + "Bottom_" + cleaned], styles[type + "Left_" + cleaned]);
  } else {
    if (vertical) {
      const cleaned = cleanClassName(vertical);
      classes.push(styles[type + "Top_" + cleaned], styles[type + "Bottom_" + cleaned]);
    } else {
      if (top) {
        const cleaned = cleanClassName(top);
        classes.push(styles[type + "Top_" + cleaned]);
      }

      if (bottom) {
        const cleaned = cleanClassName(bottom);
        classes.push(styles[type + "Bottom_" + cleaned]);
      }
    }

    if (horizontal) {
      const cleaned = cleanClassName(horizontal);
      classes.push(styles[type + "Left_" + cleaned], styles[type + "Right_" + cleaned]);
    } else {
      if (left) {
        const cleaned = cleanClassName(left);
        classes.push(styles[type + "Left_" + cleaned]);
      }

      if (right) {
        const cleaned = cleanClassName(right);
        classes.push(styles[type + "Right_" + cleaned]);
      }
    }
  }

  return React.createElement(TagProp, {
    className: cx(...classes, inline && styles.spacing_inline)
  }, children);
}
Spacing.propTypes = {
  all: _pt.oneOf([0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12]),
  bottom: _pt.oneOf([0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12]),
  children: _pt.any.isRequired,
  horizontal: _pt.oneOf([0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12]),
  inline: _pt.bool,
  inner: _pt.bool,
  left: _pt.oneOf([0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12]),
  right: _pt.oneOf([0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12]),
  tag: _pt.oneOf(['article', 'div', 'footer', 'header', 'section']),
  top: _pt.oneOf([0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12]),
  vertical: _pt.oneOf([0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12])
};