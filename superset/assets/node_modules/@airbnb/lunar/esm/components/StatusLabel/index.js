import _pt from "prop-types";
import React from 'react';
import { mutuallyExclusiveTrueProps, forbidExtraProps } from 'airbnb-prop-types';
import useStyles from '../../hooks/useStyles';
import iconComponent from '../../prop-types/iconComponent';
import IconAffix from '../private/IconAffix';
import { STATUSES, BRANDS } from '../../constants';
import { styleSheet } from './styles';

/** Classify content through the use of tiny colorful status labels. */
function StatusLabel(_ref) {
  let {
    afterIcon,
    beforeIcon,
    bordered,
    children,
    compact,
    danger,
    info,
    inverted,
    luxury,
    muted,
    notice,
    plus,
    success,
    uppercased,
    warning
  } = _ref;
  const [styles, cx] = useStyles(styleSheet);
  return React.createElement("span", {
    className: cx(styles.label, uppercased && styles.label_uppercased, inverted && styles.label_inverted, bordered && styles.label_bordered, compact && styles.label_compact, danger && (inverted ? styles.label_inverted_danger : styles.label_danger), info && (inverted ? styles.label_inverted_info : styles.label_info), muted && (inverted ? styles.label_inverted_muted : styles.label_muted), notice && (inverted ? styles.label_inverted_notice : styles.label_notice), success && (inverted ? styles.label_inverted_success : styles.label_success), warning && (inverted ? styles.label_inverted_warning : styles.label_warning), luxury && (inverted ? styles.label_inverted_luxury : styles.label_luxury), plus && (inverted ? styles.label_inverted_plus : styles.label_plus))
  }, beforeIcon && React.createElement(IconAffix, {
    before: true
  }, beforeIcon), React.createElement("span", null, children), afterIcon && React.createElement(IconAffix, {
    after: true
  }, afterIcon));
}

const statusPropType = mutuallyExclusiveTrueProps(...STATUSES, ...BRANDS);
StatusLabel.propTypes = {
  uppercased: _pt.bool,
  inverted: _pt.bool,
  compact: _pt.bool,
  children: _pt.any.isRequired,
  bordered: _pt.bool,
  afterIcon: iconComponent,
  beforeIcon: iconComponent,
  danger: statusPropType,
  info: statusPropType,
  luxury: statusPropType,
  muted: statusPropType,
  notice: statusPropType,
  plus: statusPropType,
  success: statusPropType,
  warning: statusPropType
};
export default StatusLabel;