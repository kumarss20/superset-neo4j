function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import PropTypes from 'prop-types';
import { DEFAULT_CURRENCY, MICROS } from '../../constants';
import formatPrice from '../../utils/formatPrice';
import Empty from '../Empty';
import Core from '../..';

/** Display a formatted and localized currency or price amount. */
export default class Price extends React.PureComponent {
  render() {
    const {
      amount: baseAmount,
      currency: baseCurrency,
      micros: baseMicros,
      display,
      locale,
      precision,
      round,
      trimTrailingZeros
    } = this.props;
    let amount = 0;
    let currency = baseCurrency;
    let micros = baseMicros;

    if (baseAmount === undefined || baseAmount === null) {
      return React.createElement(Empty, null);
    }

    if (typeof baseAmount === 'object') {
      currency = baseAmount.currency;
      micros = baseAmount.is_micros_accuracy;
      amount = micros ? baseAmount.amount_micros : baseAmount.amount;
    } else if (typeof baseAmount === 'number') {
      amount = baseAmount;
    }

    if (micros) {
      amount /= MICROS;
    }

    return React.createElement("span", null, formatPrice(amount, currency, {
      display,
      precision,
      round,
      trimTrailingZeros,
      locale: locale || Core.locale()
    }));
  }

}

_defineProperty(Price, "propTypes", {
  currency: PropTypes.any,
  trimTrailingZeros: PropTypes.bool,
  round: PropTypes.bool,
  precision: PropTypes.number,
  micros: PropTypes.bool,
  locale: PropTypes.any,
  amount: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),
  display: PropTypes.oneOf(['symbol', 'code', 'name'])
});

_defineProperty(Price, "defaultProps", {
  currency: DEFAULT_CURRENCY,
  display: 'symbol',
  locale: undefined,
  micros: false,
  precision: 0,
  round: false,
  trimTrailingZeros: false
});