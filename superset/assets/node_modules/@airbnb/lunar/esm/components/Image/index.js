import _pt from "prop-types";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { mutuallyExclusiveTrueProps, forbidExtraProps } from 'airbnb-prop-types';
import useStyles from '../../hooks/useStyles';
const backgroundAlignPropType = mutuallyExclusiveTrueProps('alignBottom', 'alignTop');
const objectFitPropType = mutuallyExclusiveTrueProps('contain', 'cover');

const styleSheet = (_ref) => {
  let {
    color,
    ui
  } = _ref;
  return {
    background: {
      backgroundPosition: '50% 50%',
      backgroundRepeat: 'no-repeat'
    },
    backgroundSize_cover: {
      backgroundColor: color.accent.bgHover,
      backgroundSize: 'cover'
    },
    backgroundSize_contain: {
      backgroundColor: color.accent.bg,
      backgroundSize: 'contain'
    },
    backgroundPosition_top: {
      backgroundPosition: 'top'
    },
    backgroundPosition_bottom: {
      backgroundPosition: 'bottom'
    },
    borderRadius: {
      borderRadius: ui.borderRadius
    },
    container: {
      position: 'relative'
    },
    fadeIn: {
      animationName: {
        from: {
          opacity: 0.1
        },
        to: {
          opacity: 1
        }
      },
      animationDuration: ui.transitionTime,
      animationTimingFunction: 'ease-out'
    },
    fitContainer: {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center'
    },
    fitImage: {
      maxHeight: '100%',
      maxWidth: '100%',
      height: 'auto',
      width: 'auto'
    },
    image: {
      position: 'absolute'
    }
  };
};

/** Component that displays an image */
function Image(_ref2) {
  let {
    alignBottom = false,
    alignTop = false,
    alt,
    background = false,
    borderRadius,
    contain = false,
    cover = false,
    crossOrigin = false,
    height = 'auto',
    src,
    srcSet,
    title,
    width = '100%'
  } = _ref2;
  const [styles, cx] = useStyles(styleSheet);
  let backgroundAriaLabel = {};

  if (alt) {
    backgroundAriaLabel = {
      role: 'img',
      'aria-label': alt
    };
  }

  return React.createElement("div", {
    className: cx(contain && styles.fitContainer, styles.container, {
      height,
      width
    })
  }, background ? React.createElement("div", _extends({
    className: cx(styles.image, styles.background, styles.fadeIn, cover && styles.backgroundSize_cover, contain && styles.backgroundSize_contain, alignTop && styles.backgroundPosition_top, alignBottom && styles.backgroundPosition_bottom, {
      width,
      height,
      backgroundImage: "url(" + src + ")"
    })
  }, backgroundAriaLabel)) : React.createElement("img", {
    className: cx(borderRadius === undefined ? styles.borderRadius : {
      borderRadius
    }, contain && styles.fitImage, styles.fadeIn, styles.image),
    alt: alt,
    crossOrigin: crossOrigin ? 'anonymous' : undefined,
    height: height,
    src: src,
    srcSet: srcSet,
    title: title,
    width: width
  }));
}

Image.propTypes = {
  width: _pt.oneOfType([_pt.number, _pt.string]),
  title: _pt.string,
  srcSet: _pt.string,
  src: _pt.string.isRequired,
  height: _pt.oneOfType([_pt.number, _pt.string]),
  crossOrigin: _pt.bool,
  borderRadius: _pt.number,
  background: _pt.bool,
  alt: _pt.string.isRequired,
  alignBottom: backgroundAlignPropType,
  alignTop: backgroundAlignPropType,
  contain: objectFitPropType,
  cover: objectFitPropType
};
export default Image;