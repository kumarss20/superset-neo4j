import _pt from "prop-types";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { mutuallyExclusiveTrueProps, forbidExtraProps } from 'airbnb-prop-types';
const dirProp = mutuallyExclusiveTrueProps('after', 'before');
export default class BaseAffix extends React.PureComponent {
  render() {
    const {
      cx,
      after,
      before,
      children,
      compact,
      disabled,
      flex,
      styles
    } = this.props;
    return React.createElement("div", {
      className: cx(styles.affix, compact && styles.affix_compact, before && styles.affix_before, after && styles.affix_after, disabled && styles.affix_disabled, flex && styles.affix_flex)
    }, children);
  }

}

_defineProperty(BaseAffix, "propTypes", {
  flex: _pt.bool,
  disabled: _pt.bool,
  compact: _pt.bool,
  children: _pt.any.isRequired,
  after: dirProp,
  before: dirProp
});

_defineProperty(BaseAffix, "defaultProps", {
  after: false,
  before: false,
  compact: false,
  disabled: false,
  flex: false
});