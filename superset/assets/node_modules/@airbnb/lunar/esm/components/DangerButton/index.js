function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import Button from '../Button';
const StyledDangerButton = Button.extendStyles((_ref) => {
  let {
    color
  } = _ref;
  return {
    button: {
      backgroundColor: color.core.danger[5],
      border: "2px solid " + color.core.danger[5],
      '@selectors': {
        ':not([disabled]):hover': {
          backgroundColor: color.core.danger[6],
          borderColor: color.core.danger[6]
        }
      }
    },
    button_inverted: {
      color: color.core.danger[5],
      backgroundColor: color.accent.bg,
      '@selectors': {
        ':not([disabled]):hover': {
          color: color.core.danger[6],
          backgroundColor: color.accent.bgHover
        }
      }
    }
  };
});
/** A button to use for primary actions. Supports all the same props as `Button`. */

export default function DangerButton(_ref2) {
  let {
    children
  } = _ref2,
      props = _objectWithoutPropertiesLoose(_ref2, ["children"]);

  return React.createElement(StyledDangerButton, props, children);
}