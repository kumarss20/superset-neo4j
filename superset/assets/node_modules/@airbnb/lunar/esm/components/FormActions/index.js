import _pt from "prop-types";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import T from '../Translate';
import NormalButton from '../Button';
import DangerButton from '../DangerButton';
import MutedButton from '../MutedButton';
import ButtonGroup from '../ButtonGroup';

/** A pair of action buttons to display at the bottom of a form. */
export default class FormActions extends React.PureComponent {
  render() {
    const {
      cancelText,
      continueText,
      danger,
      disabled,
      hideCancel,
      onCancel,
      onContinue,
      processing,
      processingText,
      resetText,
      showReset,
      small
    } = this.props;
    const Button = danger ? DangerButton : NormalButton;
    return React.createElement(ButtonGroup, null, React.createElement(Button, {
      type: "submit",
      disabled: disabled,
      loading: processing,
      small: small,
      onClick: onContinue
    }, processing ? processingText || React.createElement(T, {
      k: "lunar.common.saving",
      phrase: "Saving",
      context: "Button label when a form is submitting"
    }) : continueText || React.createElement(T, {
      k: "lunar.common.save",
      phrase: "Save",
      context: "Button label to submit a form"
    })), !hideCancel && React.createElement(MutedButton, {
      inverted: true,
      small: small,
      disabled: processing,
      onClick: onCancel
    }, cancelText || React.createElement(T, {
      k: "lunar.common.cancel",
      phrase: "Cancel",
      context: "Button label to cancel a form action"
    })), showReset && React.createElement(MutedButton, {
      inverted: true,
      type: "reset",
      small: small,
      disabled: processing
    }, resetText || React.createElement(T, {
      k: "lunar.common.reset",
      phrase: "Reset",
      context: "Button label to reset a form"
    })));
  }

}

_defineProperty(FormActions, "propTypes", {
  cancelText: _pt.node,
  continueText: _pt.node,
  danger: _pt.bool,
  disabled: _pt.bool,
  hideCancel: _pt.bool,
  onCancel: _pt.func,
  onContinue: _pt.func,
  processing: _pt.bool,
  processingText: _pt.node,
  resetText: _pt.node,
  showReset: _pt.bool,
  small: _pt.bool
});

_defineProperty(FormActions, "defaultProps", {
  cancelText: null,
  continueText: null,
  danger: false,
  disabled: false,
  hideCancel: false,
  processing: false,
  processingText: null,
  resetText: null,
  showReset: false,
  small: false
});