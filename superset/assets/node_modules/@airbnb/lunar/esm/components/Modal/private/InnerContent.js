import _pt from "prop-types";
import React from 'react';
import IconClose from '@airbnb/lunar-icons/lib/interface/IconClose';
import Text from '../../Text';
import Title from '../../Title';
import IconButton from '../../IconButton';
import T from '../../Translate';
import useStyles from '../../../hooks/useStyles';
import useTheme from '../../../hooks/useTheme';
import { styleSheetInnerContent as styleSheet } from '../styles';

/** A Dialog component with a backdrop and a standardized layout. */
export default function ModalInnerContent(_ref) {
  let {
    children,
    footer,
    large,
    small,
    onClose,
    scrollable,
    subtitle,
    title
  } = _ref;
  const [styles, cx] = useStyles(styleSheet);
  const theme = useTheme();
  const withHeader = Boolean(title || subtitle);
  const withFooter = Boolean(footer);
  return React.createElement("div", {
    className: cx(styles.wrapper)
  }, withHeader && React.createElement("header", {
    className: cx(styles.header, scrollable && styles.header_scrollable)
  }, title && React.createElement(Title, {
    level: 3
  }, title), subtitle && React.createElement(Text, {
    muted: true
  }, subtitle)), React.createElement("div", {
    className: cx(styles.close, !withHeader && styles.close_float)
  }, React.createElement(IconButton, {
    onClick: onClose
  }, React.createElement(IconClose, {
    accessibilityLabel: T.phrase('Close', {}, {
      context: 'Close a modal popup',
      key: 'lunar.common.close'
    }),
    color: theme.color.muted,
    size: theme.unit * 3
  }))), React.createElement("div", {
    className: cx(styles.body, !withHeader && styles.body_paddingTop, !withFooter && styles.body_paddingBottom, scrollable && styles.body_scrollable, small && scrollable && styles.body_scrollableSmall, large && scrollable && styles.body_scrollableLarge)
  }, children), footer && React.createElement("footer", {
    className: cx(styles.footer, scrollable && styles.footer_scrollable)
  }, footer));
}
ModalInnerContent.propTypes = {
  children: _pt.any.isRequired,
  footer: _pt.node,
  large: _pt.bool,
  scrollable: _pt.bool,
  small: _pt.bool,
  subtitle: _pt.node,
  title: _pt.node,
  onClose: _pt.func.isRequired
};