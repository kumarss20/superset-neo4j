import _pt from "prop-types";
import React from 'react';
import useStyles from '../../../hooks/useStyles';
import { styleSheetImageLayout as styleSheet } from '../styles';
export const MAX_HEIGHT_IMAGE = 720;
export const MAX_HEIGHT_IMAGE_SMALL = 420;
export default function ModalImageLayout(_ref) {
  let {
    children,
    sizes,
    srcSet,
    type,
    url
  } = _ref;
  const [styles, cx] = useStyles(styleSheet);
  return React.createElement("div", {
    className: cx(styles.splitContent)
  }, React.createElement("div", {
    className: cx(styles.splitContentPane)
  }, children), React.createElement("div", {
    className: cx(styles.splitContentPane, styles.splitContentImagePane)
  }, type === 'center' && React.createElement("img", {
    className: cx(styles.image),
    src: url,
    srcSet: srcSet && srcSet.join(','),
    sizes: sizes && sizes.join(','),
    alt: ""
  }), type === 'cover' && React.createElement("img", {
    className: cx(styles.image, styles.imageCover),
    src: url,
    srcSet: srcSet && srcSet.join(','),
    alt: ""
  })));
}
ModalImageLayout.propTypes = {
  sizes: _pt.arrayOf(_pt.string),
  srcSet: _pt.arrayOf(_pt.string),
  type: _pt.oneOf(['center', 'cover']).isRequired,
  url: _pt.string.isRequired,
  children: _pt.any.isRequired
};