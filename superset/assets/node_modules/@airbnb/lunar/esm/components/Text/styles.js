function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const styleSheet = (_ref) => {
  let {
    color,
    font,
    pattern
  } = _ref;
  return {
    text: _extends({}, font.textReset, {}, font.textRegular, {
      color: color.accent.text
    }),
    text_baseline: {
      display: 'inline'
    },
    text_inline: {
      display: 'inline-block'
    },
    text_preserveWhitespace: {
      whiteSpace: 'pre-wrap'
    },
    text_micro: _extends({}, font.textMicro),
    text_small: _extends({}, font.textSmall),
    text_large: _extends({}, font.textLarge),
    text_disabled: _extends({}, pattern.disabled),
    text_inverted: {
      color: color.base
    },
    text_muted: {
      color: color.muted
    },
    text_bold: {
      fontWeight: font.weights.semibold
    },
    text_light: {
      fontWeight: font.weights.light
    },
    text_truncated: {
      overflow: 'hidden',
      textOverflow: 'ellipsis',
      whiteSpace: 'nowrap',
      '@selectors': {
        '> div': {
          display: 'inline'
        }
      }
    },
    text_uppercased: {
      textTransform: 'uppercase'
    },
    text_uppercased_micro: {
      letterSpacing: 1
    },
    text_center: {
      textAlign: 'center'
    },
    text_end: {
      textAlign: 'right'
    },
    text_start: {
      textAlign: 'left'
    },
    text_noWrap: {
      whiteSpace: 'nowrap'
    }
  };
};

export default styleSheet;
export { styleSheet };