import _pt from "prop-types";
import React from 'react';
import useStyles from '../../hooks/useStyles';
import { styleSheet } from './styles';

/** A presentational block element for displaying horizontal content in up to 3 columns. */
export default function Row(_ref) {
  let {
    after,
    baseline,
    before,
    children,
    compact,
    inline,
    maxHeight,
    middleAlign,
    minHeight,
    spacious,
    topline,
    truncated
  } = _ref;
  const [styles, cx] = useStyles(styleSheet);
  return React.createElement("div", {
    className: cx(styles.row, {
      maxHeight,
      minHeight
    }, compact && styles.row_compact, spacious && styles.row_spacious, middleAlign && styles.row_middleAlign, baseline && styles.row_baseline, topline && styles.row_topline)
  }, before && React.createElement("div", {
    className: cx(styles.before, inline && styles.inline, (inline || compact) && styles.before_compact)
  }, before), React.createElement("div", {
    className: cx(inline ? styles.inline : styles.primary, truncated && styles.primary_truncated)
  }, children), after && React.createElement("div", {
    className: cx(styles.after, inline && styles.inline, (inline || compact) && styles.after_compact)
  }, after));
}
Row.propTypes = {
  after: _pt.node,
  baseline: _pt.bool,
  before: _pt.node,
  children: _pt.any.isRequired,
  compact: _pt.bool,
  inline: _pt.bool,
  maxHeight: _pt.oneOfType([_pt.number, _pt.string]),
  middleAlign: _pt.bool,
  minHeight: _pt.oneOfType([_pt.number, _pt.string]),
  spacious: _pt.bool,
  topline: _pt.bool,
  truncated: _pt.bool
};