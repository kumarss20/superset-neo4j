import _pt from "prop-types";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { childrenOfType, forbidExtraProps } from 'airbnb-prop-types';
import Card, { Content } from '../Card';
import Text from '../Text';
import ProgressBar from '../ProgressBar';
import SteppedProgressBar from '../SteppedProgressBar';
import Spacing from '../Spacing';

/** A card representing the state of progress. */
export default class ProgressCard extends React.PureComponent {
  render() {
    const {
      children,
      progress,
      title
    } = this.props;
    return React.createElement(Card, null, React.createElement(Content, null, React.createElement(Text, {
      large: true,
      bold: true
    }, title), children && React.createElement(Spacing, {
      top: 1
    }, children), React.createElement(Spacing, {
      top: 1.5
    }, progress)));
  }

}

_defineProperty(ProgressCard, "propTypes", {
  title: _pt.any.isRequired,
  children: _pt.node,
  progress: childrenOfType(ProgressBar, SteppedProgressBar).isRequired
});

_defineProperty(ProgressCard, "defaultProps", {
  children: null
});