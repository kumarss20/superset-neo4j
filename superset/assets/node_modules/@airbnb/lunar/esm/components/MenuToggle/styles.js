function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const styleSheet = (_ref) => {
  let {
    unit,
    transition
  } = _ref;
  return {
    container: {
      display: 'inline-block',
      position: 'relative'
    },
    dropdown: _extends({}, transition.fade, {
      visibility: 'visible',
      position: 'relative'
    }),
    dropdown_hidden: {
      opacity: 0,
      visibility: 'hidden',
      userSelect: 'none'
    },
    menu: {
      marginTop: unit
    },
    controls: {
      display: 'flex',
      justifyContent: 'space-between'
    }
  };
};

export default styleSheet;
export { styleSheet };