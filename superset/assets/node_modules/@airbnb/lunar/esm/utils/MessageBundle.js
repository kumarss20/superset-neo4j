function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import Core from '..';
export default class MessageBundle {
  constructor(messages, options) {
    if (options === void 0) {
      options = {};
    }

    _defineProperty(this, "messages", void 0);

    _defineProperty(this, "options", void 0);

    this.messages = messages;
    this.options = options;
  }

  get(locale) {
    const message = // Try to use localized message first
    this.messages[locale || Core.locale()] || // Or use default if defined
    this.options.default || // Lastly, fallback to English
    this.messages.en;
    return message;
  }

}