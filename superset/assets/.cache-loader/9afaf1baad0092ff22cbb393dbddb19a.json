{"remainingRequest":"/app/superset/assets/node_modules/thread-loader/dist/cjs.js??ref--5-1!/app/superset/assets/node_modules/ts-loader/index.js??ref--5-2!/app/superset/assets/src/components/ListView/ListView.tsx","dependencies":[{"path":"/app/superset/assets/src/components/ListView/ListView.tsx","mtime":1581356081000},{"path":"/app/superset/assets/node_modules/cache-loader/dist/cjs.js","mtime":1581356063000},{"path":"/app/superset/assets/node_modules/thread-loader/dist/cjs.js","mtime":1581356079000},{"path":"/app/superset/assets/node_modules/ts-loader/index.js","mtime":1581356079000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar translation_1 = require(\"@superset-ui/translation\");\nvar react_1 = tslib_1.__importStar(require(\"react\"));\nvar react_bootstrap_1 = require(\"react-bootstrap\");\nvar IndeterminateCheckbox_1 = tslib_1.__importDefault(require(\"../IndeterminateCheckbox\"));\nrequire(\"./ListViewStyles.less\");\nvar TableCollection_1 = tslib_1.__importDefault(require(\"./TableCollection\"));\nvar utils_1 = require(\"./utils\");\nvar bulkSelectColumnConfig = {\n    Cell: function (_a) {\n        var row = _a.row;\n        return (react_1.default.createElement(\"div\", null,\n            react_1.default.createElement(IndeterminateCheckbox_1.default, tslib_1.__assign({}, row.getToggleRowSelectedProps()))));\n    },\n    Header: function (_a) {\n        var getToggleAllRowsSelectedProps = _a.getToggleAllRowsSelectedProps;\n        return (react_1.default.createElement(\"div\", null,\n            react_1.default.createElement(IndeterminateCheckbox_1.default, tslib_1.__assign({}, getToggleAllRowsSelectedProps()))));\n    },\n    id: 'selection',\n};\nvar ListView = function (_a) {\n    var columns = _a.columns, data = _a.data, count = _a.count, initialPageSize = _a.pageSize, fetchData = _a.fetchData, loading = _a.loading, _b = _a.initialSort, initialSort = _b === void 0 ? [] : _b, _c = _a.className, className = _c === void 0 ? '' : _c, _d = _a.title, title = _d === void 0 ? '' : _d, _e = _a.filterTypes, filterTypes = _e === void 0 ? {} : _e, _f = _a.bulkActions, bulkActions = _f === void 0 ? [] : _f;\n    var _g = utils_1.useListViewState({\n        bulkSelectColumnConfig: bulkSelectColumnConfig,\n        bulkSelectMode: Boolean(bulkActions.length),\n        columns: columns,\n        count: count,\n        data: data,\n        fetchData: fetchData,\n        initialPageSize: initialPageSize,\n        initialSort: initialSort,\n    }), getTableProps = _g.getTableProps, getTableBodyProps = _g.getTableBodyProps, headerGroups = _g.headerGroups, rows = _g.rows, prepareRow = _g.prepareRow, canPreviousPage = _g.canPreviousPage, canNextPage = _g.canNextPage, _h = _g.pageCount, pageCount = _h === void 0 ? 1 : _h, gotoPage = _g.gotoPage, setAllFilters = _g.setAllFilters, setFilterToggles = _g.setFilterToggles, updateFilterToggle = _g.updateFilterToggle, applyFilters = _g.applyFilters, filtersApplied = _g.filtersApplied, selectedFlatRows = _g.selectedFlatRows, _j = _g.state, pageIndex = _j.pageIndex, pageSize = _j.pageSize, filterToggles = _j.filterToggles;\n    var filterableColumns = react_1.useMemo(function () { return columns.filter(function (c) { return c.filterable; }); }, [columns]);\n    var filterable = Boolean(columns.length);\n    var removeFilterAndApply = function (index) {\n        var updated = utils_1.removeFromList(filterToggles, index);\n        setFilterToggles(updated);\n        setAllFilters(utils_1.convertFilters(updated));\n    };\n    return (react_1.default.createElement(\"div\", { className: \"superset-list-view \" + className },\n        title && filterable && (react_1.default.createElement(\"div\", { className: 'header' },\n            react_1.default.createElement(react_bootstrap_1.Row, null,\n                react_1.default.createElement(react_bootstrap_1.Col, { md: 10 },\n                    react_1.default.createElement(\"h2\", null, translation_1.t(title))),\n                filterable && (react_1.default.createElement(react_bootstrap_1.Col, { md: 2 },\n                    react_1.default.createElement(\"div\", { className: 'filter-dropdown' },\n                        react_1.default.createElement(react_bootstrap_1.DropdownButton, { id: 'filter-picker', bsSize: 'small', bsStyle: 'default', noCaret: true, title: (react_1.default.createElement(react_1.default.Fragment, null,\n                                react_1.default.createElement(\"i\", { className: 'fa fa-filter text-primary' }),\n                                '  ',\n                                translation_1.t('Filter List'))) }, filterableColumns\n                            .map(function (_a) {\n                            var id = _a.id, accessor = _a.accessor, Header = _a.Header;\n                            return ({\n                                Header: Header,\n                                id: id || accessor,\n                            });\n                        })\n                            .map(function (ft) { return (react_1.default.createElement(react_bootstrap_1.MenuItem, { key: ft.id, eventKey: ft, onSelect: function (fltr) { return setFilterToggles(filterToggles.concat([fltr])); } }, ft.Header)); })))))),\n            react_1.default.createElement(\"hr\", null),\n            filterToggles.map(function (ft, i) { return (react_1.default.createElement(\"div\", { key: ft.Header + \"-\" + i, className: 'filter-inputs' },\n                react_1.default.createElement(react_bootstrap_1.Row, null,\n                    react_1.default.createElement(react_bootstrap_1.Col, { className: 'text-center filter-column', md: 2 },\n                        react_1.default.createElement(\"span\", null, ft.Header)),\n                    react_1.default.createElement(react_bootstrap_1.Col, { md: 2 },\n                        react_1.default.createElement(react_bootstrap_1.FormControl, { componentClass: 'select', bsSize: 'small', value: ft.filterId, placeholder: filterTypes[ft.id] ? filterTypes[ft.id][0].name : '', onChange: function (e) {\n                                return updateFilterToggle(i, { filterId: e.currentTarget.value });\n                            } }, filterTypes[ft.id] && filterTypes[ft.id].map(function (_a) {\n                            var name = _a.name, operator = _a.operator;\n                            return (react_1.default.createElement(\"option\", { key: name, value: operator }, name));\n                        }))),\n                    react_1.default.createElement(react_bootstrap_1.Col, { md: 1 }),\n                    react_1.default.createElement(react_bootstrap_1.Col, { md: 4 },\n                        react_1.default.createElement(react_bootstrap_1.FormControl, { type: 'text', bsSize: 'small', value: ft.value || '', onChange: function (e) {\n                                return updateFilterToggle(i, {\n                                    value: e.currentTarget.value,\n                                });\n                            } })),\n                    react_1.default.createElement(react_bootstrap_1.Col, { md: 1 },\n                        react_1.default.createElement(\"div\", { className: 'filter-close', role: 'button', onClick: function () { return removeFilterAndApply(i); } },\n                            react_1.default.createElement(\"i\", { className: 'fa fa-close text-primary' })))),\n                react_1.default.createElement(\"br\", null))); }),\n            filterToggles.length > 0 && (react_1.default.createElement(react_1.default.Fragment, null,\n                react_1.default.createElement(react_bootstrap_1.Row, null,\n                    react_1.default.createElement(react_bootstrap_1.Col, { md: 10 }),\n                    react_1.default.createElement(react_bootstrap_1.Col, { md: 2 },\n                        react_1.default.createElement(react_bootstrap_1.Button, { \"data-test\": 'apply-filters', disabled: filtersApplied ? true : false, bsStyle: 'primary', onClick: applyFilters, bsSize: 'small' }, translation_1.t('Apply')))),\n                react_1.default.createElement(\"br\", null))))),\n        react_1.default.createElement(\"div\", { className: 'body' },\n            react_1.default.createElement(TableCollection_1.default, { getTableProps: getTableProps, getTableBodyProps: getTableBodyProps, prepareRow: prepareRow, headerGroups: headerGroups, rows: rows, loading: loading })),\n        react_1.default.createElement(\"div\", { className: 'footer' },\n            react_1.default.createElement(react_bootstrap_1.Row, null,\n                react_1.default.createElement(react_bootstrap_1.Col, { md: 2 },\n                    react_1.default.createElement(\"div\", { className: 'form-actions-container' },\n                        react_1.default.createElement(\"div\", { className: 'btn-group' }, bulkActions.length > 0 && (react_1.default.createElement(react_bootstrap_1.DropdownButton, { id: 'bulk-actions', bsSize: 'small', bsStyle: 'default', noCaret: true, title: (react_1.default.createElement(react_1.default.Fragment, null,\n                                translation_1.t('Actions'),\n                                \" \",\n                                react_1.default.createElement(\"span\", { className: 'caret' }))) }, bulkActions.map(function (action) { return (react_1.default.createElement(react_bootstrap_1.MenuItem, { id: action.name, key: action.key || action.name, eventKey: selectedFlatRows, onSelect: function (selectedRows) {\n                                action.onSelect(selectedRows.map(function (r) { return r.original; }));\n                            } }, action.name)); })))))),\n                react_1.default.createElement(react_bootstrap_1.Col, { md: 8, className: 'text-center' },\n                    react_1.default.createElement(react_bootstrap_1.Pagination, { prev: canPreviousPage, first: pageIndex > 1, next: canNextPage, last: pageIndex < pageCount - 2, items: pageCount, activePage: pageIndex + 1, ellipsis: true, boundaryLinks: true, maxButtons: 5, onSelect: function (p) { return gotoPage(p - 1); } })),\n                react_1.default.createElement(react_bootstrap_1.Col, { md: 2 },\n                    react_1.default.createElement(\"span\", { className: 'pull-right' },\n                        translation_1.t('showing'),\n                        ' ',\n                        react_1.default.createElement(\"strong\", null,\n                            pageSize * pageIndex + (rows.length && 1),\n                            \"-\",\n                            pageSize * pageIndex + rows.length),\n                        ' ',\n                        translation_1.t('of'),\n                        \" \",\n                        react_1.default.createElement(\"strong\", null, count)))))));\n};\nexports.default = ListView;\n",{"version":3,"file":"/app/superset/assets/src/components/ListView/ListView.tsx","sourceRoot":"","sources":["/app/superset/assets/src/components/ListView/ListView.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/translation';\nimport React, { FunctionComponent, useMemo } from 'react';\nimport {\n  Button,\n  Col,\n  DropdownButton,\n  FormControl,\n  MenuItem,\n  Pagination,\n  Row,\n  // @ts-ignore\n} from 'react-bootstrap';\nimport IndeterminateCheckbox from '../IndeterminateCheckbox';\nimport './ListViewStyles.less';\nimport TableCollection from './TableCollection';\nimport { FetchDataConfig, FilterToggle, FilterType, FilterTypeMap, SortColumn } from './types';\nimport { convertFilters, removeFromList, useListViewState } from './utils';\n\ninterface Props {\n  columns: any[];\n  data: any[];\n  count: number;\n  pageSize: number;\n  fetchData: (conf: FetchDataConfig) => any;\n  loading: boolean;\n  className?: string;\n  title?: string;\n  initialSort?: SortColumn[];\n  filterTypes?: FilterTypeMap;\n  bulkActions?: Array<{ key?: string, name: React.ReactNode, onSelect: (rows: any[]) => any }>;\n}\n\nconst bulkSelectColumnConfig = {\n  Cell: ({ row }: any) => (\n    <div>\n      <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n    </div>\n  ),\n  Header: ({ getToggleAllRowsSelectedProps }: any) => (\n    <div>\n      <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n    </div>\n  ),\n  id: 'selection',\n};\n\nconst ListView: FunctionComponent<Props> = ({\n  columns,\n  data,\n  count,\n  pageSize: initialPageSize,\n  fetchData,\n  loading,\n  initialSort = [],\n  className = '',\n  title = '',\n  filterTypes = {},\n  bulkActions = [],\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount = 1,\n    gotoPage,\n    setAllFilters,\n    setFilterToggles,\n    updateFilterToggle,\n    applyFilters,\n    filtersApplied,\n    selectedFlatRows,\n    state: { pageIndex, pageSize, filterToggles },\n  } = useListViewState({\n    bulkSelectColumnConfig,\n    bulkSelectMode: Boolean(bulkActions.length),\n    columns,\n    count,\n    data,\n    fetchData,\n    initialPageSize,\n    initialSort,\n  });\n  const filterableColumns = useMemo(() => columns.filter((c) => c.filterable), [columns]);\n  const filterable = Boolean(columns.length);\n\n  const removeFilterAndApply = (index: number) => {\n    const updated = removeFromList(filterToggles, index);\n    setFilterToggles(updated);\n    setAllFilters(convertFilters(updated));\n  };\n\n  return (\n    <div className={`superset-list-view ${className}`}>\n      {title && filterable && (\n        <div className='header'>\n          <Row>\n            <Col md={10}>\n              <h2>{t(title)}</h2>\n            </Col>\n            {filterable && (\n              <Col md={2}>\n                <div className='filter-dropdown'>\n                  <DropdownButton\n                    id='filter-picker'\n                    bsSize='small'\n                    bsStyle={'default'}\n                    noCaret={true}\n                    title={(\n                      <>\n                        <i className='fa fa-filter text-primary' />\n                        {'  '}{t('Filter List')}\n                      </>\n                    )}\n                  >\n                    {filterableColumns\n                      .map(({ id, accessor, Header }) => ({\n                        Header,\n                        id: id || accessor,\n                      }))\n                      .map((ft: FilterToggle) => (\n                        <MenuItem\n                          key={ft.id}\n                          eventKey={ft}\n                          onSelect={\n                            (fltr: FilterToggle) => setFilterToggles([...filterToggles, fltr])\n                          }\n                        >\n                          {ft.Header}\n                        </MenuItem>\n                      ))}\n                  </DropdownButton>\n                </div>\n              </Col>\n            )}\n          </Row>\n          <hr />\n          {filterToggles.map((ft, i) => (\n            <div key={`${ft.Header}-${i}`} className='filter-inputs'>\n              <Row>\n                <Col className='text-center filter-column' md={2}>\n                  <span>{ft.Header}</span>\n                </Col>\n                <Col md={2}>\n                  <FormControl\n                    componentClass='select'\n                    bsSize='small'\n                    value={ft.filterId}\n                    placeholder={filterTypes[ft.id] ? filterTypes[ft.id][0].name : ''}\n                    onChange={(e: React.MouseEvent<HTMLInputElement>) =>\n                      updateFilterToggle(i, { filterId: e.currentTarget.value })\n                    }\n                  >\n                    {filterTypes[ft.id] && filterTypes[ft.id].map(\n                      ({ name, operator }: FilterType) => (\n                        <option key={name} value={operator}>\n                          {name}\n                        </option>\n                      ),\n                    )}\n                  </FormControl>\n                </Col>\n                <Col md={1} />\n                <Col md={4}>\n                  <FormControl\n                    type='text'\n                    bsSize='small'\n                    value={ft.value || ''}\n                    onChange={\n                      (e: React.KeyboardEvent<HTMLInputElement>) =>\n                        updateFilterToggle(i, {\n                          value: e.currentTarget.value,\n                        })\n                    }\n                  />\n                </Col>\n                <Col md={1}>\n                  <div\n                    className='filter-close'\n                    role='button'\n                    onClick={() => removeFilterAndApply(i)}\n                  >\n                    <i className='fa fa-close text-primary' />\n                  </div>\n                </Col>\n              </Row>\n              <br />\n            </div>\n          ))}\n          {filterToggles.length > 0 && (\n            <>\n              <Row>\n                <Col md={10} />\n                <Col md={2}>\n                  <Button\n                    data-test='apply-filters'\n                    disabled={filtersApplied ? true : false}\n                    bsStyle='primary'\n                    onClick={applyFilters}\n                    bsSize='small'\n                  >\n                    {t('Apply')}\n                  </Button>\n                </Col>\n              </Row>\n              <br />\n            </>\n          )}\n        </div>\n      )\n      }\n      <div className='body'>\n        <TableCollection\n          getTableProps={getTableProps}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n          headerGroups={headerGroups}\n          rows={rows}\n          loading={loading}\n        />\n      </div>\n      <div className='footer'>\n        <Row>\n          <Col md={2}>\n            <div className='form-actions-container'>\n              <div className='btn-group'>\n                {bulkActions.length > 0 && (\n                  <DropdownButton\n                    id='bulk-actions'\n                    bsSize='small'\n                    bsStyle='default'\n                    noCaret={true}\n                    title={(\n                      <>\n                        {t('Actions')} <span className='caret' />\n                      </>\n                    )}\n                  >\n                    {bulkActions.map((action) => (\n                      <MenuItem\n                        id={action.name}\n                        key={action.key || action.name}\n                        eventKey={selectedFlatRows}\n                        onSelect={\n                          (selectedRows: typeof selectedFlatRows) => {\n                            action.onSelect(selectedRows.map((r: any) => r.original));\n                          }\n                        }\n                      >\n                        {action.name}\n                      </MenuItem>\n                    ))}\n                  </DropdownButton>\n                )}\n              </div>\n            </div>\n          </Col>\n          <Col md={8} className='text-center'>\n            <Pagination\n              prev={canPreviousPage}\n              first={pageIndex > 1}\n              next={canNextPage}\n              last={pageIndex < pageCount - 2}\n              items={pageCount}\n              activePage={pageIndex + 1}\n              ellipsis={true}\n              boundaryLinks={true}\n              maxButtons={5}\n              onSelect={(p: number) => gotoPage(p - 1)}\n            />\n          </Col>\n          <Col md={2}>\n            <span className='pull-right'>\n              {t('showing')}{' '}\n              <strong>\n                {pageSize * pageIndex + (rows.length && 1)}-{pageSize * pageIndex + rows.length}\n              </strong>{' '}\n              {t('of')} <strong>{count}</strong>\n            </span>\n          </Col>\n        </Row>\n      </div >\n    </div>\n  );\n};\n\nexport default ListView;\n"]}]}