{"remainingRequest":"/app/superset/assets/node_modules/thread-loader/dist/cjs.js??ref--5-1!/app/superset/assets/node_modules/ts-loader/index.js??ref--5-2!/app/superset/assets/src/views/dashboardList/DashboardList.tsx","dependencies":[{"path":"/app/superset/assets/src/views/dashboardList/DashboardList.tsx","mtime":1580759753000},{"path":"/app/superset/assets/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/superset/assets/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/superset/assets/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar connection_1 = require(\"@superset-ui/connection\");\nvar translation_1 = require(\"@superset-ui/translation\");\nvar moment_1 = tslib_1.__importDefault(require(\"moment\"));\nvar prop_types_1 = tslib_1.__importDefault(require(\"prop-types\"));\nvar react_1 = tslib_1.__importDefault(require(\"react\"));\n// @ts-ignore\nvar react_bootstrap_1 = require(\"react-bootstrap\");\nvar ConfirmStatusChange_1 = tslib_1.__importDefault(require(\"src/components/ConfirmStatusChange\"));\nvar ListView_1 = tslib_1.__importDefault(require(\"src/components/ListView/ListView\"));\nvar withToasts_1 = tslib_1.__importDefault(require(\"src/messageToasts/enhancers/withToasts\"));\nrequire(\"./DashboardList.less\");\nvar PAGE_SIZE = 25;\nvar DashboardList = /** @class */ (function (_super) {\n    tslib_1.__extends(DashboardList, _super);\n    function DashboardList() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            dashboardCount: 0,\n            dashboards: [],\n            filterTypes: {},\n            labelColumns: {},\n            lastFetchDataConfig: null,\n            loading: false,\n            permissions: [],\n        };\n        _this.initialSort = [{ id: 'changed_on', desc: true }];\n        _this.columns = [\n            {\n                Cell: function (_a) {\n                    var _b = _a.row.original, url = _b.url, dashboard_title = _b.dashboard_title;\n                    return react_1.default.createElement(\"a\", { href: url }, dashboard_title);\n                },\n                Header: translation_1.t('Title'),\n                accessor: 'dashboard_title',\n                filterable: true,\n                sortable: true,\n            },\n            {\n                Cell: function (_a) {\n                    var _b = _a.row.original, changed_by_name = _b.changed_by_name, changed_by_url = _b.changed_by_url;\n                    return react_1.default.createElement(\"a\", { href: changed_by_url }, changed_by_name);\n                },\n                Header: translation_1.t('Changed By Name'),\n                accessor: 'changed_by_fk',\n                sortable: true,\n            },\n            {\n                Cell: function (_a) {\n                    var published = _a.row.original.published;\n                    return (react_1.default.createElement(\"span\", { className: 'no-wrap' }, published ? react_1.default.createElement(\"i\", { className: 'fa fa-check' }) : ''));\n                },\n                Header: translation_1.t('Published'),\n                accessor: 'published',\n                sortable: true,\n            },\n            {\n                Cell: function (_a) {\n                    var changed_on = _a.row.original.changed_on;\n                    return (react_1.default.createElement(\"span\", { className: 'no-wrap' }, moment_1.default(changed_on).fromNow()));\n                },\n                Header: translation_1.t('Changed On'),\n                accessor: 'changed_on',\n                sortable: true,\n            },\n            {\n                Cell: function (_a) {\n                    var _b = _a.row, state = _b.state, original = _b.original;\n                    var handleDelete = function () { return _this.handleDashboardDelete(original); };\n                    var handleEdit = function () { return _this.handleDashboardEdit(original); };\n                    var handleExport = function () { return _this.handleBulkDashboardExport([original]); };\n                    if (!_this.canEdit && !_this.canDelete && !_this.canExport) {\n                        return null;\n                    }\n                    return (react_1.default.createElement(\"span\", { className: \"actions \" + (state && state.hover ? '' : 'invisible') },\n                        _this.canDelete && (react_1.default.createElement(ConfirmStatusChange_1.default, { title: translation_1.t('Please Confirm'), description: react_1.default.createElement(react_1.default.Fragment, null,\n                                translation_1.t('Are you sure you want to delete'),\n                                \" \",\n                                react_1.default.createElement(\"b\", null, original.dashboard_title),\n                                \"?\"), onConfirm: handleDelete }, function (confirmDelete) { return (react_1.default.createElement(\"span\", { role: 'button', className: 'action-button', onClick: confirmDelete },\n                            react_1.default.createElement(\"i\", { className: 'fa fa-trash' }))); })),\n                        _this.canExport && (react_1.default.createElement(\"span\", { role: 'button', className: 'action-button', onClick: handleExport },\n                            react_1.default.createElement(\"i\", { className: 'fa fa-database' }))),\n                        _this.canEdit && (react_1.default.createElement(\"span\", { role: 'button', className: 'action-button', onClick: handleEdit },\n                            react_1.default.createElement(\"i\", { className: 'fa fa-pencil' })))));\n                },\n                Header: translation_1.t('Actions'),\n                id: 'actions',\n            },\n        ];\n        _this.handleDashboardEdit = function (_a) {\n            var id = _a.id;\n            window.location.assign(\"/dashboard/edit/\" + id);\n        };\n        _this.handleDashboardDelete = function (_a) {\n            var id = _a.id, dashboard_title = _a.dashboard_title;\n            return connection_1.SupersetClient.delete({\n                endpoint: \"/api/v1/dashboard/\" + id,\n            }).then(function () {\n                var lastFetchDataConfig = _this.state.lastFetchDataConfig;\n                if (lastFetchDataConfig) {\n                    _this.fetchData(lastFetchDataConfig);\n                }\n                _this.props.addSuccessToast(translation_1.t('Deleted') + (\" \" + dashboard_title));\n            }, function (err) {\n                console.error(err);\n                _this.props.addDangerToast(translation_1.t('There was an issue deleting') + (\"\" + dashboard_title));\n            });\n        };\n        _this.handleBulkDashboardDelete = function (dashboards) {\n            connection_1.SupersetClient.delete({\n                endpoint: \"/api/v1/dashboard/?q=!(\" + dashboards.map(function (_a) {\n                    var id = _a.id;\n                    return id;\n                }).join(',') + \")\",\n            }).then(function (_a) {\n                var _b = _a.json, json = _b === void 0 ? {} : _b;\n                var lastFetchDataConfig = _this.state.lastFetchDataConfig;\n                if (lastFetchDataConfig) {\n                    _this.fetchData(lastFetchDataConfig);\n                }\n                _this.props.addSuccessToast(json.message);\n            }, function (err) {\n                console.error(err);\n                _this.props.addDangerToast(translation_1.t('There was an issue deleting the selected dashboards'));\n            });\n        };\n        _this.handleBulkDashboardExport = function (dashboards) {\n            return window.location.href = \"/ api / v1 / dashboard /export/?q=!(\" + dashboards.map(function (_a) {\n                var id = _a.id;\n                return id;\n            }).join(',') + \")\";\n        };\n        _this.fetchData = function (_a) {\n            var pageIndex = _a.pageIndex, pageSize = _a.pageSize, sortBy = _a.sortBy, filters = _a.filters;\n            // set loading state, cache the last config for fetching data in this component.\n            _this.setState({\n                lastFetchDataConfig: {\n                    filters: filters,\n                    pageIndex: pageIndex,\n                    pageSize: pageSize,\n                    sortBy: sortBy,\n                },\n                loading: true,\n            });\n            var filterExps = filters.map(function (_a) {\n                var id = _a.id, filterId = _a.filterId, value = _a.value;\n                return ({\n                    col: id,\n                    opr: filterId,\n                    value: value,\n                });\n            });\n            var queryParams = JSON.stringify(tslib_1.__assign({ order_column: sortBy[0].id, order_direction: sortBy[0].desc ? 'desc' : 'asc', page: pageIndex, page_size: pageSize }, (filterExps.length ? { filters: filterExps } : {})));\n            return connection_1.SupersetClient.get({\n                endpoint: \"/api/v1/dashboard/?q=\" + queryParams,\n            })\n                .then(function (_a) {\n                var _b = _a.json, json = _b === void 0 ? {} : _b;\n                _this.setState({ dashboards: json.result, dashboardCount: json.count, labelColumns: json.label_columns });\n            })\n                .catch(function () {\n                _this.props.addDangerToast(translation_1.t('An error occurred while fetching Dashboards'));\n            })\n                .finally(function () {\n                _this.setState({ loading: false });\n            });\n        };\n        _this.hasPerm = function (perm) {\n            if (!_this.state.permissions.length) {\n                return false;\n            }\n            return Boolean(_this.state.permissions.find(function (p) { return p === perm; }));\n        };\n        return _this;\n    }\n    Object.defineProperty(DashboardList.prototype, \"canEdit\", {\n        get: function () {\n            return this.hasPerm('can_edit');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DashboardList.prototype, \"canDelete\", {\n        get: function () {\n            return this.hasPerm('can_delete');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DashboardList.prototype, \"canExport\", {\n        get: function () {\n            return this.hasPerm('can_mulexport');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DashboardList.prototype.componentDidMount = function () {\n        var _this = this;\n        connection_1.SupersetClient.get({\n            endpoint: \"/api/v1/dashboard/_info\",\n        })\n            .then(function (_a) {\n            var _b = _a.json, json = _b === void 0 ? {} : _b;\n            _this.setState({ filterTypes: json.filters, permissions: json.permissions });\n        });\n    };\n    DashboardList.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, dashboards = _a.dashboards, dashboardCount = _a.dashboardCount, loading = _a.loading, filterTypes = _a.filterTypes;\n        return (react_1.default.createElement(\"div\", { className: 'container welcome' },\n            react_1.default.createElement(react_bootstrap_1.Panel, null,\n                react_1.default.createElement(ConfirmStatusChange_1.default, { title: translation_1.t('Please confirm'), description: translation_1.t('Are you sure you want to delete the selected dashboards?'), onConfirm: this.handleBulkDashboardDelete }, function (confirmDelete) {\n                    var bulkActions = [];\n                    if (_this.canDelete) {\n                        bulkActions.push({\n                            key: 'delete',\n                            name: react_1.default.createElement(react_1.default.Fragment, null,\n                                react_1.default.createElement(\"i\", { className: 'fa fa-trash' }),\n                                \" Delete\"),\n                            onSelect: confirmDelete,\n                        });\n                    }\n                    if (_this.canExport) {\n                        bulkActions.push({\n                            key: 'export',\n                            name: react_1.default.createElement(react_1.default.Fragment, null,\n                                react_1.default.createElement(\"i\", { className: 'fa fa-database' }),\n                                \" Export\"),\n                            onSelect: _this.handleBulkDashboardExport,\n                        });\n                    }\n                    return (react_1.default.createElement(ListView_1.default, { className: 'dashboard-list-view', title: 'Dashboards', columns: _this.columns, data: dashboards, count: dashboardCount, pageSize: PAGE_SIZE, fetchData: _this.fetchData, loading: loading, initialSort: _this.initialSort, filterTypes: filterTypes, bulkActions: bulkActions }));\n                }))));\n    };\n    DashboardList.propTypes = {\n        addDangerToast: prop_types_1.default.func.isRequired,\n    };\n    return DashboardList;\n}(react_1.default.PureComponent));\nexports.default = withToasts_1.default(DashboardList);\n",{"version":3,"file":"/app/superset/assets/src/views/dashboardList/DashboardList.tsx","sourceRoot":"","sources":["/app/superset/assets/src/views/dashboardList/DashboardList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n// @ts-ignore\nimport { Button, Modal, Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport { FetchDataConfig, FilterTypeMap } from 'src/components/ListView/types';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\n\nimport './DashboardList.less';\n\nconst PAGE_SIZE = 25;\n\ninterface Props {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\ninterface State {\n  dashboards: any[];\n  dashboardCount: number;\n  loading: boolean;\n  filterTypes: FilterTypeMap;\n  permissions: string[];\n  labelColumns: { [key: string]: string };\n  lastFetchDataConfig: FetchDataConfig | null;\n}\n\ninterface Dashboard {\n  id: number;\n  changed_by: string;\n  changed_by_name: string;\n  changed_by_url: string;\n  changed_on: string;\n  dashboard_title: string;\n  published: boolean;\n  url: string;\n}\n\nclass DashboardList extends React.PureComponent<Props, State> {\n\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n\n  get canExport() {\n    return this.hasPerm('can_mulexport');\n  }\n\n  public static propTypes = {\n    addDangerToast: PropTypes.func.isRequired,\n  };\n\n  public state: State = {\n    dashboardCount: 0,\n    dashboards: [],\n    filterTypes: {},\n    labelColumns: {},\n    lastFetchDataConfig: null,\n    loading: false,\n    permissions: [],\n  };\n\n  public initialSort = [{ id: 'changed_on', desc: true }];\n\n  public columns = [\n    {\n      Cell: ({\n        row: {\n          original: { url, dashboard_title },\n        },\n      }: any) => <a href={url}>{dashboard_title}</a>,\n      Header: t('Title'),\n      accessor: 'dashboard_title',\n      filterable: true,\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { changed_by_name, changed_by_url },\n        },\n      }: any) => <a href={changed_by_url}>{changed_by_name}</a>,\n      Header: t('Changed By Name'),\n      accessor: 'changed_by_fk',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { published },\n        },\n      }: any) => (\n          <span className='no-wrap'>{published ? <i className='fa fa-check' /> : ''}</span>\n        ),\n      Header: t('Published'),\n      accessor: 'published',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { changed_on },\n        },\n      }: any) => (\n          <span className='no-wrap'>{moment(changed_on).fromNow()}</span>\n        ),\n      Header: t('Changed On'),\n      accessor: 'changed_on',\n      sortable: true,\n    },\n    {\n      Cell: ({ row: { state, original } }: any) => {\n        const handleDelete = () => this.handleDashboardDelete(original);\n        const handleEdit = () => this.handleDashboardEdit(original);\n        const handleExport = () => this.handleBulkDashboardExport([original]);\n        if (!this.canEdit && !this.canDelete && !this.canExport) {\n          return null;\n        }\n        return (\n          <span className={`actions ${state && state.hover ? '' : 'invisible'}`}>\n            {this.canDelete && (\n              <ConfirmStatusChange\n                title={t('Please Confirm')}\n                description={<>{t('Are you sure you want to delete')} <b>{original.dashboard_title}</b>?</>}\n                onConfirm={handleDelete}\n              >\n                {(confirmDelete) => (\n                  <span\n                    role='button'\n                    className='action-button'\n                    onClick={confirmDelete}\n                  >\n                    <i className='fa fa-trash' />\n                  </span>\n                )}\n              </ConfirmStatusChange>\n            )}\n            {this.canExport && (\n              <span\n                role='button'\n                className='action-button'\n                onClick={handleExport}\n              >\n                <i className='fa fa-database' />\n              </span>\n            )}\n            {this.canEdit && (\n              <span\n                role='button'\n                className='action-button'\n                onClick={handleEdit}\n              >\n                <i className='fa fa-pencil' />\n              </span>\n            )}\n          </span>\n        );\n      },\n      Header: t('Actions'),\n      id: 'actions',\n    },\n  ];\n\n  public handleDashboardEdit = ({ id }: { id: number }) => {\n    window.location.assign(`/dashboard/edit/${id}`);\n  }\n\n  public handleDashboardDelete = ({ id, dashboard_title }: Dashboard) => {\n    return SupersetClient.delete({\n      endpoint: `/api/v1/dashboard/${id}`,\n    }).then(\n      () => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(t('Deleted') + ` ${dashboard_title}`);\n      },\n      (err: any) => {\n        console.error(err);\n        this.props.addDangerToast(t('There was an issue deleting') + `${dashboard_title}`);\n      },\n    );\n  }\n\n  public handleBulkDashboardDelete = (dashboards: Dashboard[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/dashboard/?q=!(${dashboards.map(({ id }) => id).join(',')})`,\n    }).then(\n      ({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      },\n      (err: any) => {\n        console.error(err);\n        this.props.addDangerToast(t('There was an issue deleting the selected dashboards'));\n      },\n    );\n  }\n\n  public handleBulkDashboardExport = (dashboards: Dashboard[]) => {\n    return window.location.href = `/ api / v1 / dashboard /export/?q=!(${dashboards.map(({ id }) => id).join(',')})`;\n  }\n\n  public fetchData = ({\n    pageIndex,\n    pageSize,\n    sortBy,\n    filters,\n  }: FetchDataConfig) => {\n    // set loading state, cache the last config for fetching data in this component.\n    this.setState({\n      lastFetchDataConfig: {\n        filters,\n        pageIndex,\n        pageSize,\n        sortBy,\n      },\n      loading: true,\n    });\n    const filterExps = filters.map(({ id, filterId, value }) => ({\n      col: id,\n      opr: filterId,\n      value,\n    }));\n\n    const queryParams = JSON.stringify({\n      order_column: sortBy[0].id,\n      order_direction: sortBy[0].desc ? 'desc' : 'asc',\n      page: pageIndex,\n      page_size: pageSize,\n      ...(filterExps.length ? { filters: filterExps } : {}),\n    });\n\n    return SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    })\n      .then(({ json = {} }) => {\n        this.setState({ dashboards: json.result, dashboardCount: json.count, labelColumns: json.label_columns });\n      })\n      .catch(() => {\n        this.props.addDangerToast(\n          t('An error occurred while fetching Dashboards'),\n        );\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  public componentDidMount() {\n    SupersetClient.get({\n      endpoint: `/api/v1/dashboard/_info`,\n    })\n      .then(({ json = {} }) => {\n        this.setState({ filterTypes: json.filters, permissions: json.permissions });\n      });\n  }\n\n  public render() {\n    const { dashboards, dashboardCount, loading, filterTypes } = this.state;\n    return (\n      <div className='container welcome' >\n        <Panel>\n          <ConfirmStatusChange\n            title={t('Please confirm')}\n            description={t('Are you sure you want to delete the selected dashboards?')}\n            onConfirm={this.handleBulkDashboardDelete}\n          >\n            {(confirmDelete) => {\n              const bulkActions = [];\n              if (this.canDelete) {\n                bulkActions.push({\n                  key: 'delete',\n                  name: <><i className='fa fa-trash' /> Delete</>,\n                  onSelect: confirmDelete,\n                });\n              }\n              if (this.canExport) {\n                bulkActions.push({\n                  key: 'export',\n                  name: <><i className='fa fa-database' /> Export</>,\n                  onSelect: this.handleBulkDashboardExport,\n                });\n              }\n              return (\n                <ListView\n                  className='dashboard-list-view'\n                  title={'Dashboards'}\n                  columns={this.columns}\n                  data={dashboards}\n                  count={dashboardCount}\n                  pageSize={PAGE_SIZE}\n                  fetchData={this.fetchData}\n                  loading={loading}\n                  initialSort={this.initialSort}\n                  filterTypes={filterTypes}\n                  bulkActions={bulkActions}\n                />\n              );\n            }}\n          </ConfirmStatusChange>\n        </Panel>\n      </div>\n    );\n  }\n\n  private hasPerm = (perm: string) => {\n    if (!this.state.permissions.length) {\n      return false;\n    }\n\n    return Boolean(this.state.permissions.find((p) => p === perm));\n  }\n}\n\nexport default withToasts(DashboardList);\n"]}]}