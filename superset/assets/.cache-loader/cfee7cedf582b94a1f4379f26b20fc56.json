{"remainingRequest":"/app/superset/assets/node_modules/thread-loader/dist/cjs.js??ref--5-1!/app/superset/assets/node_modules/ts-loader/index.js??ref--5-2!/app/superset/assets/src/components/ListView/utils.ts","dependencies":[{"path":"/app/superset/assets/src/components/ListView/utils.ts","mtime":1581356081000},{"path":"/app/superset/assets/node_modules/cache-loader/dist/cjs.js","mtime":1581356063000},{"path":"/app/superset/assets/node_modules/thread-loader/dist/cjs.js","mtime":1581356079000},{"path":"/app/superset/assets/node_modules/ts-loader/index.js","mtime":1581356079000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar react_1 = require(\"react\");\nvar react_table_1 = require(\"react-table\");\nvar use_query_params_1 = require(\"use-query-params\");\n// removes element from a list, returns new list\nfunction removeFromList(list, index) {\n    return list.filter(function (_, i) { return index !== i; });\n}\nexports.removeFromList = removeFromList;\n// apply update to elements of object list, returns new list\nfunction updateInList(list, index, update) {\n    var element = list.find(function (_, i) { return index === i; });\n    return list.slice(0, index).concat([\n        tslib_1.__assign({}, element, update)\n    ], list.slice(index + 1));\n}\n// convert filters from UI objects to data objects\nfunction convertFilters(fts) {\n    return fts\n        .filter(function (ft) { return ft.value; })\n        .map(function (ft) { return (tslib_1.__assign({ value: null, filterId: ft.filterId || 'sw' }, ft)); });\n}\nexports.convertFilters = convertFilters;\nfunction useListViewState(_a) {\n    var fetchData = _a.fetchData, columns = _a.columns, data = _a.data, count = _a.count, initialPageSize = _a.initialPageSize, _b = _a.initialSort, initialSort = _b === void 0 ? [] : _b, _c = _a.bulkSelectMode, bulkSelectMode = _c === void 0 ? false : _c, bulkSelectColumnConfig = _a.bulkSelectColumnConfig;\n    var _d = use_query_params_1.useQueryParams({\n        filters: use_query_params_1.JsonParam,\n        pageIndex: use_query_params_1.NumberParam,\n        sortColumn: use_query_params_1.StringParam,\n        sortOrder: use_query_params_1.StringParam,\n    }), query = _d[0], setQuery = _d[1];\n    var initialSortBy = react_1.useMemo(function () {\n        return query.sortColumn && query.sortOrder\n            ? [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }]\n            : initialSort;\n    }, [query.sortColumn, query.sortOrder]);\n    var initialState = {\n        filters: convertFilters(query.filters || []),\n        pageIndex: query.pageIndex || 0,\n        pageSize: initialPageSize,\n        sortBy: initialSortBy,\n    };\n    var columnsWithSelect = react_1.useMemo(function () { return (bulkSelectMode ? [bulkSelectColumnConfig].concat(columns) : columns); }, [bulkSelectMode, columns]);\n    var _e = react_table_1.useTable({\n        columns: columnsWithSelect,\n        count: count,\n        data: data,\n        disableSortRemove: true,\n        initialState: initialState,\n        manualFilters: true,\n        manualPagination: true,\n        manualSortBy: true,\n        pageCount: Math.ceil(count / initialPageSize),\n    }, react_table_1.useFilters, react_table_1.useSortBy, react_table_1.usePagination, react_table_1.useRowState, react_table_1.useRowSelect), getTableProps = _e.getTableProps, getTableBodyProps = _e.getTableBodyProps, headerGroups = _e.headerGroups, rows = _e.rows, prepareRow = _e.prepareRow, canPreviousPage = _e.canPreviousPage, canNextPage = _e.canNextPage, pageCount = _e.pageCount, gotoPage = _e.gotoPage, setAllFilters = _e.setAllFilters, selectedFlatRows = _e.selectedFlatRows, _f = _e.state, pageIndex = _f.pageIndex, pageSize = _f.pageSize, sortBy = _f.sortBy, filters = _f.filters;\n    var _g = react_1.useState(query.filters || []), filterToggles = _g[0], setFilterToggles = _g[1];\n    react_1.useEffect(function () {\n        var queryParams = {\n            filters: filterToggles,\n            pageIndex: pageIndex,\n        };\n        if (sortBy[0]) {\n            queryParams.sortColumn = sortBy[0].id;\n            queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n        }\n        setQuery(queryParams);\n        fetchData({ pageIndex: pageIndex, pageSize: pageSize, sortBy: sortBy, filters: filters });\n    }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n    var filtersApplied = filterToggles.every(function (_a, index) {\n        var id = _a.id, value = _a.value, filterId = _a.filterId;\n        return id &&\n            filters[index] &&\n            filters[index].id === id &&\n            filters[index].value === value &&\n            // @ts-ignore\n            filters[index].filterId === filterId;\n    });\n    return {\n        applyFilters: function () { return setAllFilters(convertFilters(filterToggles)); },\n        canNextPage: canNextPage,\n        canPreviousPage: canPreviousPage,\n        filtersApplied: filtersApplied,\n        getTableBodyProps: getTableBodyProps,\n        getTableProps: getTableProps,\n        gotoPage: gotoPage,\n        headerGroups: headerGroups,\n        pageCount: pageCount,\n        prepareRow: prepareRow,\n        rows: rows,\n        selectedFlatRows: selectedFlatRows,\n        setAllFilters: setAllFilters,\n        setFilterToggles: setFilterToggles,\n        state: { pageIndex: pageIndex, pageSize: pageSize, sortBy: sortBy, filters: filters, filterToggles: filterToggles },\n        updateFilterToggle: function (index, update) {\n            return setFilterToggles(updateInList(filterToggles, index, update));\n        },\n    };\n}\nexports.useListViewState = useListViewState;\n",{"version":3,"file":"/app/superset/assets/src/components/ListView/utils.ts","sourceRoot":"","sources":["/app/superset/assets/src/components/ListView/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  useFilters,\n  usePagination,\n  useRowSelect,\n  useRowState,\n  useSortBy,\n  useTable,\n} from 'react-table';\n\nimport {\n  JsonParam,\n  NumberParam,\n  StringParam,\n  useQueryParams,\n} from 'use-query-params';\n\nimport { FetchDataConfig, FilterToggle, SortColumn } from './types';\n\n// removes element from a list, returns new list\nexport function removeFromList(list: any[], index: number): any[] {\n  return list.filter((_, i) => index !== i);\n}\n\n// apply update to elements of object list, returns new list\nfunction updateInList(list: any[], index: number, update: any): any[] {\n  const element = list.find((_, i) => index === i);\n\n  return [\n    ...list.slice(0, index),\n    { ...element, ...update },\n    ...list.slice(index + 1),\n  ];\n}\n\n// convert filters from UI objects to data objects\nexport function convertFilters(fts: FilterToggle[]) {\n  return fts\n    .filter((ft: FilterToggle) => ft.value)\n    .map((ft) => ({ value: null, filterId: ft.filterId || 'sw', ...ft }));\n}\n\ninterface UseListViewConfig {\n  fetchData: (conf: FetchDataConfig) => any;\n  columns: any[];\n  data: any[];\n  count: number;\n  initialPageSize: number;\n  initialSort?: SortColumn[];\n  bulkSelectMode?: boolean;\n  bulkSelectColumnConfig?: {\n    id: string;\n    Header: (conf: any) => React.ReactNode;\n    Cell: (conf: any) => React.ReactNode;\n  };\n}\n\nexport function useListViewState({\n  fetchData,\n  columns,\n  data,\n  count,\n  initialPageSize,\n  initialSort = [],\n  bulkSelectMode = false,\n  bulkSelectColumnConfig,\n}: UseListViewConfig) {\n  const [query, setQuery] = useQueryParams({\n    filters: JsonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam,\n  });\n\n  const initialSortBy = useMemo(\n    () =>\n      query.sortColumn && query.sortOrder\n        ? [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }]\n        : initialSort,\n    [query.sortColumn, query.sortOrder],\n  );\n\n  const initialState = {\n    filters: convertFilters(query.filters || []),\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy,\n  };\n\n  const columnsWithSelect = useMemo(\n    () => (bulkSelectMode ? [bulkSelectColumnConfig, ...columns] : columns),\n    [bulkSelectMode, columns],\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setAllFilters,\n    selectedFlatRows,\n    state: { pageIndex, pageSize, sortBy, filters },\n  } = useTable(\n    {\n      columns: columnsWithSelect,\n      count,\n      data,\n      disableSortRemove: true,\n      initialState,\n      manualFilters: true,\n      manualPagination: true,\n      manualSortBy: true,\n      pageCount: Math.ceil(count / initialPageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n    useRowState,\n    useRowSelect,\n  );\n\n  const [filterToggles, setFilterToggles] = useState<FilterToggle[]>(\n    query.filters || [],\n  );\n\n  useEffect(() => {\n    const queryParams: any = {\n      filters: filterToggles,\n      pageIndex,\n    };\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n    setQuery(queryParams);\n\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n\n  const filtersApplied = filterToggles.every(\n    ({ id, value, filterId }, index) =>\n      id &&\n      filters[index] &&\n      filters[index].id === id &&\n      filters[index].value === value &&\n      // @ts-ignore\n      filters[index].filterId === filterId,\n  );\n\n  return {\n    applyFilters: () => setAllFilters(convertFilters(filterToggles)),\n    canNextPage,\n    canPreviousPage,\n    filtersApplied,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    setFilterToggles,\n    state: { pageIndex, pageSize, sortBy, filters, filterToggles },\n    updateFilterToggle: (index: number, update: object) =>\n      setFilterToggles(updateInList(filterToggles, index, update)),\n  };\n}\n"]}]}